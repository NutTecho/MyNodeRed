[
    {
        "id": "e6e652e24933c362",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "cc86b9261dd774ca",
        "type": "tab",
        "label": "Connection test",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ebe1ddb7db2b1d13",
        "type": "tab",
        "label": "Line & Blynk",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "6aef8afcd5766ef8",
        "type": "tab",
        "label": "SignIn Flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e93a7e25f0e39a23",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c0bbc6b66ba5563",
        "type": "group",
        "z": "cc86b9261dd774ca",
        "name": "camera group",
        "style": {
            "label": true,
            "color": "#000000",
            "stroke": "#7fb7df",
            "fill": "#bfdbef"
        },
        "nodes": [
            "a1428a3e.9b4d78",
            "5f85bc5d.988a14",
            "72e8f0c547cf14e0",
            "084ec3837ab5b6d7"
        ],
        "env": [
            {
                "name": "test",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 54,
        "y": 599,
        "w": 572,
        "h": 142,
        "info": "test"
    },
    {
        "id": "277528d0a1ec4cf7",
        "type": "group",
        "z": "ebe1ddb7db2b1d13",
        "name": "Line Notify",
        "style": {
            "stroke": "#addb7b",
            "label": true,
            "color": "#000000",
            "fill": "#c8e7a7"
        },
        "nodes": [
            "d5f06e68cee866e3",
            "033a221bb0eefdb4",
            "f81820959540402f",
            "eae20c69449928b0",
            "b0afec616c45c841"
        ],
        "x": 34,
        "y": 39,
        "w": 752,
        "h": 122
    },
    {
        "id": "ac9787b46f70e038",
        "type": "group",
        "z": "ebe1ddb7db2b1d13",
        "name": "Blynk Send & Receive",
        "style": {
            "stroke": "#92d04f",
            "fill": "#c8e7a7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "47c93b776b14fab5",
            "68c486f4c4ae81ea",
            "37c0a6341eadea20",
            "b62bdd1d41aa81e7",
            "b5a2678577ad6b7b",
            "4560fe03fee04635",
            "cec1a25574c720ed",
            "0d62bfcf840e1635",
            "848eca293cd301df",
            "0e301823526a8365",
            "680fd1af49ef6d20",
            "d32b1f89f457317b"
        ],
        "x": 34,
        "y": 199,
        "w": 752,
        "h": 242
    },
    {
        "id": "918a016da94047e6",
        "type": "group",
        "z": "cc86b9261dd774ca",
        "name": "Tensorflow test",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffdf7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "92a0fca46a797ca9",
            "129457156369cf40",
            "21f2a3c01d56710b",
            "7bcc3e76b73a6d50",
            "f92cec681a1c5acd",
            "7b6da3fccca14116"
        ],
        "x": 34,
        "y": 319,
        "w": 712,
        "h": 222
    },
    {
        "id": "1bf54cb25f373f45",
        "type": "group",
        "z": "cc86b9261dd774ca",
        "name": "OPC UA send receive test",
        "style": {
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6d191d67d5fe4a6a",
            "106046975beddddd",
            "d1da7314d988c3fc",
            "471be5f22185c88a"
        ],
        "x": 54,
        "y": 39,
        "w": 632,
        "h": 262
    },
    {
        "id": "235674f73e977231",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "d1b40bfe250bcf2e",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://172.23.32.1:4841/freeopcua/server/",
        "secpol": "None",
        "secmode": "None",
        "login": false
    },
    {
        "id": "483d2313028f1eb5",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4a01dad1247a7393",
        "type": "ui_group",
        "name": "Default",
        "tab": "483d2313028f1eb5",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "Signin",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "History",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "b51595ca.fcd178",
        "type": "ui_group",
        "z": "cc86b9261dd774ca",
        "name": "ONVIF",
        "tab": "d75e440d.a22678",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d75e440d.a22678",
        "type": "ui_tab",
        "z": "cc86b9261dd774ca",
        "name": "Cameras",
        "icon": "camera_alt",
        "order": 2
    },
    {
        "id": "2feac813dbe8d5a3",
        "type": "ui_group",
        "name": "HTTP Snap",
        "tab": "d75e440d.a22678",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c396ec35b0f67687",
        "type": "onvif-config",
        "xaddress": "192.168.43.1",
        "port": "8080",
        "timeout": "30",
        "checkConnectionInterval": "5",
        "name": "mycamera"
    },
    {
        "id": "c6b46a46.8067f8",
        "type": "onvif-config",
        "xaddress": "192.168.1.174",
        "port": "80",
        "name": "Hikvision"
    },
    {
        "id": "e6c78b2e.fe4dc8",
        "type": "onvif-config",
        "xaddress": "192.168.1.200",
        "name": "MyCamKitchen"
    },
    {
        "id": "34c89ac33f7f975b",
        "type": "ui_group",
        "name": "Web push notifications",
        "tab": "05f8cc4a2640f75c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "05f8cc4a2640f75c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c982fbb8.1deb38",
        "type": "ui_group",
        "name": "hidden_group",
        "tab": "483d2313028f1eb5",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "74b69329766d603b",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\" crossorigin=\"anonymous\">\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js\" integrity=\"sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js\" integrity=\"sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG\" crossorigin=\"anonymous\"></script>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    </head>\n    <body>\n        <div class=\"container\">\n            <h1>{{payload.title}}</h1>\n         <form class=\"\" action=\"/register\" method=\"post\">\n            <div class=\"form-group\">\n                <label for=\"fname\">FirstName</label>\n                <input type=\"text\" name=\"firstname\" value=\"\"\n                class=\"form-control\" id=\"fname\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lname\">LastName</label>\n                <input type=\"text\" name=\"lastname\" value=\"\"\n                class=\"form-control\" id=\"lname\">  \n            </div>\n            <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input type=\"number\" name=\"age\" value=\"\"\n                class=\"form-control\" id=\"age\">  \n            </div>\n            <div class=\"form-group\">\n                <label for=\"toy\">Toy</label>\n                <input type=\"text\" name=\"toy\" value=\"\"\n                class=\"form-control\" id=\"toy\">  \n            </div>\n\n            <input type=\"submit\" name=\"subbtn\" value=\"Submit\" class=\"btn btn-primary\"> \n        </form>\n        </div>\n    </body>\n</html>\n",
        "output": "str",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "c3c2c78171912579"
            ]
        ]
    },
    {
        "id": "c3c2c78171912579",
        "type": "http response",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "eba910c94517e838",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "Get/register",
        "url": "/register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c003e7cee41be4aa"
            ]
        ]
    },
    {
        "id": "c003e7cee41be4aa",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "My Smart Farm",
        "output": "str",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "74b69329766d603b"
            ]
        ]
    },
    {
        "id": "6337874c5f98c455",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "PUT/register",
        "url": "/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "f184420a923b49bd",
                "9d5f748cbe508189",
                "7319748d5153da10"
            ]
        ]
    },
    {
        "id": "f184420a923b49bd",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1> register sucsess {{payload.firstname}}</h1>",
        "output": "str",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "c56c1a6a1e7b87ed"
            ]
        ]
    },
    {
        "id": "9d5f748cbe508189",
        "type": "debug",
        "z": "e6e652e24933c362",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 420,
        "wires": []
    },
    {
        "id": "c56c1a6a1e7b87ed",
        "type": "http response",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "303",
        "headers": {
            "location": "/register"
        },
        "x": 600,
        "y": 340,
        "wires": []
    },
    {
        "id": "7319748d5153da10",
        "type": "Barcode Generator",
        "z": "e6e652e24933c362",
        "name": "Gen_QRCode",
        "data": "payload.firstname",
        "dataType": "msg",
        "barcode": "qrcode",
        "barcodeType": "barcode",
        "options": "",
        "optionsType": "ui",
        "sendProperty": "payload",
        "props": [
            {
                "p": "rotate",
                "v": "N",
                "vt": "str"
            },
            {
                "p": "includetext",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "textxalign",
                "v": "center",
                "vt": "str"
            }
        ],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "3b260cdda52558a9"
            ]
        ]
    },
    {
        "id": "3b260cdda52558a9",
        "type": "image viewer",
        "z": "e6e652e24933c362",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "337b2d8a2a06f061"
            ]
        ]
    },
    {
        "id": "337b2d8a2a06f061",
        "type": "ui_template",
        "z": "e6e652e24933c362",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "561b7ff7.7caf3",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "",
        "url": "/xxxx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 760,
        "y": 960,
        "wires": [
            [
                "cc1feca1.b909b"
            ]
        ]
    },
    {
        "id": "cc1feca1.b909b",
        "type": "multipart-encoder",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "",
        "ignoreMessages": true,
        "outputOneNew": false,
        "outputIfSingle": true,
        "outputIfAll": false,
        "globalHeaders": {
            "Content-Type": "multipart/x-mixed-replace;boundary=--myboundary",
            "Connection": "keep-alive",
            "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
            "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
            "Pragma": "no-cache"
        },
        "partHeaders": {
            "Content-Type": "image/jpeg"
        },
        "destination": "all",
        "highWaterMark": 16384,
        "x": 940,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "bd955688.623878",
        "type": "http request",
        "z": "e6e652e24933c362",
        "name": "HttpRequest to get image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 900,
        "wires": [
            [
                "cc1feca1.b909b"
            ]
        ]
    },
    {
        "id": "da39d7.4e70f628",
        "type": "function",
        "z": "e6e652e24933c362",
        "name": "Next image url",
        "func": "var counter = global.get(\"image_counter\") || 0; \ncounter++;\nglobal.set(\"image_counter\",counter);\n\nmsg.url = 'https://192.168.43.1:8080/400x200/fff/000&text=PNG+' + counter;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 485,
        "y": 900,
        "wires": [
            [
                "bd955688.623878"
            ]
        ]
    },
    {
        "id": "435929ff.b35c18",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Every second",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 267.9999885559082,
        "y": 899.9999990463257,
        "wires": [
            [
                "da39d7.4e70f628"
            ]
        ]
    },
    {
        "id": "46999a1f.6657d4",
        "type": "exec",
        "z": "e6e652e24933c362",
        "command": "ffmpeg -f rtsp -i \"rtsp://admin:admin@192.168.43.1:8080/h264_pcm.sdp\" -f image2pipe pipe:1",
        "addpay": false,
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Decode RTSP stream",
        "x": 720,
        "y": 1060,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "996a1c4.7436de",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Start stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "46999a1f.6657d4"
            ]
        ]
    },
    {
        "id": "4cf9fc06.acfb84",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Pause all streams",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGSTOP",
        "payloadType": "str",
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "8e3a27b3.abf538"
            ]
        ]
    },
    {
        "id": "cf50c10.31f664",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Resume all streams",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGCONT",
        "payloadType": "str",
        "x": 250,
        "y": 1140,
        "wires": [
            [
                "8e3a27b3.abf538"
            ]
        ]
    },
    {
        "id": "8e3a27b3.abf538",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 1100,
        "wires": [
            [
                "46999a1f.6657d4"
            ]
        ]
    },
    {
        "id": "a359a2e3.a4f51",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Stop all streams",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGTERM",
        "payloadType": "str",
        "x": 240,
        "y": 1180,
        "wires": [
            [
                "8e3a27b3.abf538"
            ]
        ]
    },
    {
        "id": "bacb880f.853a88",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get device information",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "90cf9e45.fef83"
            ]
        ]
    },
    {
        "id": "90cf9e45.fef83",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getDeviceInformation",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "c17d3b0c.763f78",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get services",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "b2189543.3cbc28"
            ]
        ]
    },
    {
        "id": "b2189543.3cbc28",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getServices",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 600,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "d710fda6.e8aae",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get system datetime",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "cc3c9656.8496a8"
            ]
        ]
    },
    {
        "id": "cc3c9656.8496a8",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getSystemDateAndTime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 560,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "a744dbdf.67e6c8",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get capabilities",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "5d9e78c8.149b38"
            ]
        ]
    },
    {
        "id": "5d9e78c8.149b38",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getCapabilities",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 640,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "c4b35b2e.3088b8",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get scopes",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "65b4227b.29ca5c"
            ]
        ]
    },
    {
        "id": "65b4227b.29ca5c",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getScopes",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 680,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "d86390ea.9497c",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "System reboot",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "b977019e.b468"
            ]
        ]
    },
    {
        "id": "b977019e.b468",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "systemReboot",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 720,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "b42d91a3.9ce6",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get service capabilities",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "54209451.26faec"
            ]
        ]
    },
    {
        "id": "54209451.26faec",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getServiceCapabilities",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 760,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "43651b47.8d7824",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get hostname information",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "d49b6d87.e936d"
            ]
        ]
    },
    {
        "id": "d49b6d87.e936d",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getHostname",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 520,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "6227d5ec.51a9ec",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Reconnect to device",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "c24552ea.311e3"
            ]
        ]
    },
    {
        "id": "c24552ea.311e3",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "reconnect",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 800,
        "wires": [
            [
                "569d0223.dcc0cc"
            ]
        ]
    },
    {
        "id": "569d0223.dcc0cc",
        "type": "onvif-device",
        "z": "e6e652e24933c362",
        "name": "",
        "deviceConfig": "c396ec35b0f67687",
        "action": "",
        "x": 650,
        "y": 480,
        "wires": [
            [
                "7c39ee64.2d193"
            ]
        ]
    },
    {
        "id": "7c39ee64.2d193",
        "type": "debug",
        "z": "e6e652e24933c362",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "0f2f16d0e617a7dd",
        "type": "onvif-imaging",
        "z": "e6e652e24933c362",
        "name": "",
        "deviceConfig": "c396ec35b0f67687",
        "profile": "",
        "action": "getImagingSettings",
        "x": 980,
        "y": 680,
        "wires": [
            [
                "538ea92079026c89"
            ]
        ]
    },
    {
        "id": "d576d399c9cda2ec",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Set imaging settings",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 680,
        "wires": [
            [
                "0f2f16d0e617a7dd"
            ]
        ]
    },
    {
        "id": "538ea92079026c89",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "setImagingSettings",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.brightness",
                "pt": "msg",
                "to": "50",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 680,
        "wires": [
            [
                "6afd10c2419a365b"
            ]
        ]
    },
    {
        "id": "6afd10c2419a365b",
        "type": "onvif-imaging",
        "z": "e6e652e24933c362",
        "name": "",
        "deviceConfig": "c396ec35b0f67687",
        "profile": "",
        "action": "",
        "x": 1380,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a8a188ee8ec7b7e3",
        "type": "comment",
        "z": "e6e652e24933c362",
        "name": "Get the original settings",
        "info": "",
        "x": 980,
        "y": 640,
        "wires": []
    },
    {
        "id": "8877ede3af807298",
        "type": "comment",
        "z": "e6e652e24933c362",
        "name": "Replace one or more settings",
        "info": "",
        "x": 1300,
        "y": 640,
        "wires": []
    },
    {
        "id": "6d191d67d5fe4a6a",
        "type": "OpcUa-Item",
        "z": "cc86b9261dd774ca",
        "g": "1bf54cb25f373f45",
        "item": "ns=2;i=2;",
        "datatype": "Int32",
        "value": "",
        "name": "GetData",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "106046975beddddd"
            ]
        ]
    },
    {
        "id": "106046975beddddd",
        "type": "OpcUa-Client",
        "z": "cc86b9261dd774ca",
        "g": "1bf54cb25f373f45",
        "endpoint": "d1b40bfe250bcf2e",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": 10,
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "folderName4PKI": "",
        "name": "",
        "x": 400,
        "y": 200,
        "wires": [
            [
                "471be5f22185c88a"
            ]
        ]
    },
    {
        "id": "d1da7314d988c3fc",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "g": "1bf54cb25f373f45",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "6d191d67d5fe4a6a"
            ]
        ]
    },
    {
        "id": "471be5f22185c88a",
        "type": "debug",
        "z": "cc86b9261dd774ca",
        "g": "1bf54cb25f373f45",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "92a0fca46a797ca9",
        "type": "debug",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 380,
        "wires": []
    },
    {
        "id": "129457156369cf40",
        "type": "fileinject",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "21f2a3c01d56710b",
                "7bcc3e76b73a6d50"
            ]
        ]
    },
    {
        "id": "21f2a3c01d56710b",
        "type": "cocossd",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "x": 420,
        "y": 380,
        "wires": [
            [
                "f92cec681a1c5acd",
                "92a0fca46a797ca9"
            ]
        ]
    },
    {
        "id": "7bcc3e76b73a6d50",
        "type": "image",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "width": 160,
        "data": "annotatedInput",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 360,
        "y": 500,
        "wires": []
    },
    {
        "id": "f92cec681a1c5acd",
        "type": "image",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "width": 160,
        "data": "annotatedInput",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 620,
        "y": 440,
        "wires": []
    },
    {
        "id": "7b6da3fccca14116",
        "type": "camera",
        "z": "cc86b9261dd774ca",
        "g": "918a016da94047e6",
        "name": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "21f2a3c01d56710b",
                "7bcc3e76b73a6d50"
            ]
        ]
    },
    {
        "id": "a1428a3e.9b4d78",
        "type": "ONVIF Snapshot",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "ONVIF test",
        "url": "http://192.168.43.1:8080/",
        "username": "admin",
        "password": "admin",
        "x": 310,
        "y": 640,
        "wires": [
            [
                "5f85bc5d.988a14",
                "084ec3837ab5b6d7"
            ]
        ]
    },
    {
        "id": "5f85bc5d.988a14",
        "type": "ui_template",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "group": "b51595ca.fcd178",
        "name": "Display image",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "<img width=\"160\" height=\"160\" alt=\"ONVIF test\" src=\"{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 487,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "72e8f0c547cf14e0",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "a1428a3e.9b4d78"
            ]
        ]
    },
    {
        "id": "084ec3837ab5b6d7",
        "type": "debug",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 700,
        "wires": []
    },
    {
        "id": "d5f06e68cee866e3",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "f81820959540402f"
            ]
        ]
    },
    {
        "id": "033a221bb0eefdb4",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "eae20c69449928b0"
            ]
        ]
    },
    {
        "id": "f81820959540402f",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "func": "msg.token = 'BggmSwVip2mh1PUc9sQusUjS8aUlnwZJQpA2Cs8M3yl';\nmsg.message = 'Hello';\nmsg.stickerPackageId = 1;\nmsg.stickerId  = 106;\n\nmsg.headers = {\n    'content-type' : 'application/x-www-form-urlencoded',\n    'Authorization' : 'Bearer ' + msg.token\n};\n\nmsg.payload = {\n    'message' : msg.message,\n    'stickerPackageId' : msg.stickerPackageId,\n    'stickerId' : msg.stickerId\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "033a221bb0eefdb4"
            ]
        ]
    },
    {
        "id": "eae20c69449928b0",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "47c93b776b14fab5",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "68c486f4c4ae81ea",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "b62bdd1d41aa81e7"
            ]
        ]
    },
    {
        "id": "37c0a6341eadea20",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "func": "msg.method = 'GET';\nmsg.token = 'pS_6QRMqEurX8e-GNbCagzWepxuFDlBO';\nmsg.dataStreamId = 'v0';\nmsg.value = msg.payload;\n\nmsg.url = 'https://blynk.cloud/external/api/update?token=' + msg.token +\n'&' + msg.dataStreamId + '=' + msg.value\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "68c486f4c4ae81ea"
            ]
        ]
    },
    {
        "id": "b62bdd1d41aa81e7",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "b0afec616c45c841",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "Line Notify",
        "info": "Line Notify PUT ",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "b5a2678577ad6b7b",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "Blynk Send",
        "info": "Blynk sending data",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "4560fe03fee04635",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "0d62bfcf840e1635"
            ]
        ]
    },
    {
        "id": "cec1a25574c720ed",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "848eca293cd301df"
            ]
        ]
    },
    {
        "id": "0d62bfcf840e1635",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "func": "msg.method = 'GET';\nmsg.token = 'pS_6QRMqEurX8e-GNbCagzWepxuFDlBO';\nmsg.dataStreamId = 'v0';\n\nmsg.url = 'https://blynk.cloud/external/api/get?token=' + msg.token +\n'&' + msg.dataStreamId\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "cec1a25574c720ed"
            ]
        ]
    },
    {
        "id": "848eca293cd301df",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "0e301823526a8365",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "Blynk Read",
        "info": "Blynk Reading data",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "680fd1af49ef6d20",
        "type": "ui_slider",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "d32b1f89f457317b",
                "d32b1f89f457317b",
                "37c0a6341eadea20"
            ]
        ]
    },
    {
        "id": "d32b1f89f457317b",
        "type": "ui_gauge",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "group": "4a01dad1247a7393",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "bd456e4e.359d8",
        "type": "ui_form",
        "z": "6aef8afcd5766ef8",
        "name": "Dashboard Sign-In",
        "label": "",
        "group": "b82da486.9fc8d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "ea809461.f36198",
                "a926c1ff.ede37",
                "6cabb33.95cd54c"
            ]
        ]
    },
    {
        "id": "6603f3ab.d89abc",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "Debug Account Log ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 958.0000915527344,
        "y": 261.00000762939453,
        "wires": []
    },
    {
        "id": "bc6dfbc9.d9d138",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Sign-In Section",
        "info": "",
        "x": 390.00000762939453,
        "y": 242.99999618530273,
        "wires": []
    },
    {
        "id": "ea809461.f36198",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 589.0000076293945,
        "y": 269.99999618530273,
        "wires": [
            [
                "6603f3ab.d89abc"
            ]
        ]
    },
    {
        "id": "a926c1ff.ede37",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Account Verification",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nmsg.payload = 1;\n\naccounts.forEach(function ( account ){\n    if ( account.username == username ) {\n       msg.payload = 2;\n       if ( account.password == password ) {\n           msg.payload = 0;\n       } \n    }\n});\n\nif ( msg.payload == 0 ) {\n  var currentsocketid = flow.get(\"clientid\") || undefined;\n  if ( currentsocketid !== undefined && currentsocketid !== msg.socketid ) msg.payload = 3;\n}\n// keep the original socketid from msg.socketid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 602.0000457763672,
        "y": 315.0000057220459,
        "wires": [
            [
                "88afc196.8abc2"
            ]
        ]
    },
    {
        "id": "88afc196.8abc2",
        "type": "switch",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 771.0000419616699,
        "y": 345.9999885559082,
        "wires": [
            [
                "eefb7b9e.f5daa8"
            ],
            [
                "2f57eca.40fa214"
            ],
            [
                "cc34d440.a91948"
            ],
            [
                "126fd334.ed13ed"
            ]
        ]
    },
    {
        "id": "eefb7b9e.f5daa8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\nflow.set(\"clientid\", msg.socketid);\n/* ui-control payload */\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Another_History\"],\n    hide : [\"Dashboard_Signin\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940.999885559082,
        "y": 301.99999809265137,
        "wires": [
            [
                "5c0b7126.396e8"
            ]
        ]
    },
    {
        "id": "2f57eca.40fa214",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Username Doesn't exist!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 961.9998931884766,
        "y": 339,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "cc34d440.a91948",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Password\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 962.9999618530273,
        "y": 376.0000123977661,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "5c0b7126.396e8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Sensor/History Group",
        "x": 1228.0000686645508,
        "y": 301.9999942779541,
        "wires": [
            []
        ]
    },
    {
        "id": "61e843e4.4d74cc",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 1227.9999732971191,
        "y": 359,
        "wires": [
            []
        ]
    },
    {
        "id": "d60f3dd8.0214b",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 469.5,
        "y": 459.00000762939453,
        "wires": []
    },
    {
        "id": "643a01a8.560ea",
        "type": "inject",
        "z": "6aef8afcd5766ef8",
        "name": "Timer",
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 378.00000762939453,
        "y": 547.9999923706055,
        "wires": [
            [
                "bc828c1d.b3504",
                "f6900b2.d3e9ef8"
            ]
        ]
    },
    {
        "id": "bc828c1d.b3504",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = 15000; //15 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 566.0000381469727,
        "y": 514.0000076293945,
        "wires": [
            [
                "50a18f10.e23c2"
            ]
        ]
    },
    {
        "id": "50a18f10.e23c2",
        "type": "switch",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 736.000072479248,
        "y": 512.0000076293945,
        "wires": [
            [
                "5b39c16e.da2f"
            ],
            [
                "91c7a0ab.ec163"
            ],
            [
                "71d9aa2e.665fd4"
            ]
        ]
    },
    {
        "id": "5b39c16e.da2f",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 891.9999847412109,
        "y": 485.0000114440918,
        "wires": [
            [
                "d29000e.556e5",
                "a3d5d44d.a71ce8"
            ]
        ]
    },
    {
        "id": "d29000e.556e5",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 1079.500114440918,
        "y": 451.0000114440918,
        "wires": [
            []
        ]
    },
    {
        "id": "8859efbd.09b1b",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Signin Group",
        "x": 1286.5000324249268,
        "y": 486.99999618530273,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d5d44d.a71ce8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Sign-In Redirection",
        "func": "var msg = {};\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \n            \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\n\nflow.set(\"clientid\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090.0000228881836,
        "y": 488.00000762939453,
        "wires": [
            [
                "8859efbd.09b1b"
            ]
        ]
    },
    {
        "id": "de95afea.546e3",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 899.7222023010254,
        "y": 601.9999923706055,
        "wires": []
    },
    {
        "id": "4da58462.7ddd1c",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Sensor Data Collection",
        "info": "",
        "x": 409.00000762939453,
        "y": 644.0000019073486,
        "wires": []
    },
    {
        "id": "937e9201.0a617",
        "type": "inject",
        "z": "6aef8afcd5766ef8",
        "name": "Timer",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 381.5,
        "y": 721.0000095367432,
        "wires": [
            [
                "ab530393.261bd"
            ]
        ]
    },
    {
        "id": "c4e61034.b5ec2",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "MQTT ? CoAP?",
        "info": "Expecting data from the actaul sensors.",
        "x": 556.5000076293945,
        "y": 680.9999942779541,
        "wires": []
    },
    {
        "id": "f6900b2.d3e9ef8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((15000 - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 ) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\n\nmsg.socketid = flow.get(\"clientid\") || \"B1234\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 616.0000305175781,
        "y": 602.0000200271606,
        "wires": [
            [
                "de95afea.546e3"
            ]
        ]
    },
    {
        "id": "6d52854e.4e8d8c",
        "type": "ui_text",
        "z": "6aef8afcd5766ef8",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Label Display",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1280.4999923706055,
        "y": 807.0001277923584,
        "wires": []
    },
    {
        "id": "ab530393.261bd",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Decode MySensor Message",
        "func": "\nvar mySensorsMessage = {}\nvar newPayload = {};\nvar timestamp = new Date();\n\nnewPayload.nodeId  =  3;\nnewPayload.type =  Math.floor( Math.random() * Math.floor(2));  // 0 or 1\nif ( newPayload.type === 0 /* temperature */ ) newPayload.value   =  Math.floor( Math.random() * Math.floor(30)) + 10; // 10 - 39\nelse newPayload.value   =  Math.floor( Math.random() * Math.floor(40)) + 40; // 40 - 79\n\nmsg.payload = newPayload; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 577.5000076293945,
        "y": 722.0000171661377,
        "wires": [
            [
                "1e3effb1.5ff58",
                "d320c244.f24af"
            ]
        ]
    },
    {
        "id": "1e3effb1.5ff58",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Filter : temperature",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 0) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Temperature\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 794.5000534057617,
        "y": 678.0000200271606,
        "wires": [
            [
                "ef7cf0b4.332f5",
                "38045480.64ec1c",
                "328b09bd.9901c6",
                "4381200b.380d3"
            ]
        ]
    },
    {
        "id": "ef7cf0b4.332f5",
        "type": "ui_gauge",
        "z": "6aef8afcd5766ef8",
        "name": "Gauge : Temperature",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature DHT22",
        "label": "MySensors v2",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#66ccff",
            "#ff8000",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1044.5000076293945,
        "y": 663.9999828338623,
        "wires": []
    },
    {
        "id": "d320c244.f24af",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Filter : humidity",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 1) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Humidity\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 780.5001068115234,
        "y": 785.0000591278076,
        "wires": [
            [
                "d4eaedd1.98978",
                "38045480.64ec1c",
                "328b09bd.9901c6"
            ]
        ]
    },
    {
        "id": "d4eaedd1.98978",
        "type": "ui_gauge",
        "z": "6aef8afcd5766ef8",
        "name": "Gauge : Humidity",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Humidity DHT22",
        "label": "MySensors v2",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#1a25ab",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1036.500072479248,
        "y": 701.0000286102295,
        "wires": []
    },
    {
        "id": "38045480.64ec1c",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Attention : temperature & humidity",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"Temperature\":\n        context.data.temperature = msg.payload;\n        msg = null;\n        break;\n    case \"Humidity\":\n        context.data.humidity = msg.payload;\n        msg = null;\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.temperature !== null && context.data.humidity !== null && context.data.temperature !== undefined && context.data.humidity !== undefined) {\n\tmsgOut = \"\"; //new Object();\n    msgOut = \"Temerature : \" \n    msgOut += context.data.temperature.toString(); \n    msgOut+= \"°C - Humidity : \"; \n    msgOut+= context.data.humidity.toString();\n    msgOut+= \"%\";\n    context.data=null;\n    var msg = {};\n    msg.payload = msgOut;\n\treturn msg;\n} \n//else return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040.4999923706055,
        "y": 808.0000877380371,
        "wires": [
            [
                "6d52854e.4e8d8c"
            ]
        ]
    },
    {
        "id": "328b09bd.9901c6",
        "type": "ui_chart",
        "z": "6aef8afcd5766ef8",
        "name": "History : Temperature & Humidity",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": "6",
        "height": "9",
        "label": "Temperature & Humidity",
        "chartType": "line",
        "legend": "true",
        "xformat": "%H:%M",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1087.5000305175781,
        "y": 739.0001049041748,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f6f225f9.0408b8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Stay in Sensor Group",
        "x": 1236.500099182129,
        "y": 526.0000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "91c7a0ab.ec163",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Sensor/History Goup",
        "func": "var msg = {};\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    hide : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 933.5000305175781,
        "y": 526.0000038146973,
        "wires": [
            [
                "f6f225f9.0408b8"
            ]
        ]
    },
    {
        "id": "71d9aa2e.665fd4",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Signin Goup",
        "func": "var msg = {};\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 904.5000915527344,
        "y": 567.0000419616699,
        "wires": [
            [
                "a2bd5885.a386c8"
            ]
        ]
    },
    {
        "id": "a2bd5885.a386c8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Signin Group",
        "x": 1224.5002479553223,
        "y": 564.0000419616699,
        "wires": [
            []
        ]
    },
    {
        "id": "4381200b.380d3",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1004.0590744018555,
        "y": 774.6424465179443,
        "wires": []
    },
    {
        "id": "6cabb33.95cd54c",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 571.5000419616699,
        "y": 380.5347557067871,
        "wires": []
    },
    {
        "id": "b960fa16.e7e618",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "System In Use.",
        "name": "System In-Use Dialog",
        "x": 1211.1111793518066,
        "y": 412.1215353012085,
        "wires": [
            []
        ]
    },
    {
        "id": "126fd334.ed13ed",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 4 : System In Use",
        "func": "msg.payload = \"System is used by other user.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 952.4443283081055,
        "y": 413.1215286254883,
        "wires": [
            [
                "b960fa16.e7e618"
            ]
        ]
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "e93a7e25f0e39a23",
        "group": "c982fbb8.1deb38",
        "name": "Clock Toolbar",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "global",
        "x": 320,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "718cfd195b411ba8",
        "type": "ui_switch",
        "z": "e93a7e25f0e39a23",
        "name": "",
        "label": "LIGHT",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-lightbulb-o fa-3x",
        "oncolor": "yellow",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-lightbulb-o fa-3x",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 310,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ef81b0f02ba7b98d",
        "type": "ui_template",
        "z": "e93a7e25f0e39a23",
        "group": "4a01dad1247a7393",
        "name": "But1",
        "order": 1,
        "width": "2",
        "height": "1",
        "format": "<md-button\n    class=\"md-cornered\"\n    style=\"background-color : red\"\n    ng-click=\"({payload : 'hello'})\">\n    Enter\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "ee07ae5804356234"
            ]
        ]
    },
    {
        "id": "3cd4308335f3d205",
        "type": "ui_switch",
        "z": "e93a7e25f0e39a23",
        "name": "",
        "label": "PUMP",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 5,
        "width": "4",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-cog fa-spin fa-3x",
        "oncolor": "skyblue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-cog fa-3x",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 330,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "ee07ae5804356234",
        "type": "debug",
        "z": "e93a7e25f0e39a23",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 320,
        "wires": []
    },
    {
        "id": "6382720d6b8f61a1",
        "type": "ui_template",
        "z": "e93a7e25f0e39a23",
        "group": "4a01dad1247a7393",
        "name": "But2",
        "order": 2,
        "width": "2",
        "height": "1",
        "format": "<md-button\n    class=\"md-cornered\"\n    style=\"background-color : green\"\n    ng-click=\"({payload : 'hello'})\">\n    Enter\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 310,
        "y": 340,
        "wires": [
            [
                "ee07ae5804356234"
            ]
        ]
    }
]