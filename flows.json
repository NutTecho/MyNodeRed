[
    {
        "id": "e6e652e24933c362",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "cc86b9261dd774ca",
        "type": "tab",
        "label": "Connection test",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "ebe1ddb7db2b1d13",
        "type": "tab",
        "label": "Line & Blynk",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "6aef8afcd5766ef8",
        "type": "tab",
        "label": "SignIn Flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "60df1e7dd0acd415",
        "type": "tab",
        "label": "Firebase",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "18cf0a2502a0767f",
        "type": "tab",
        "label": "D3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "952a560b2f318c4a",
        "type": "tab",
        "label": "FileBrowser",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "10938d45dccd01ac",
        "type": "tab",
        "label": "SQL",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "b0254014945e7ec5",
        "type": "tab",
        "label": "Modbus",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "7243ab0a14bfa6bd",
        "type": "tab",
        "label": "OPCUA",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "92701a6abe8f79f1",
        "type": "tab",
        "label": "UI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c0bbc6b66ba5563",
        "type": "group",
        "z": "cc86b9261dd774ca",
        "name": "camera group",
        "style": {
            "label": true,
            "color": "#000000",
            "stroke": "#7fb7df",
            "fill": "#bfdbef"
        },
        "nodes": [
            "5f85bc5d.988a14",
            "72e8f0c547cf14e0",
            "084ec3837ab5b6d7",
            "9629489a2866878e",
            "b27f65e54f424c5a",
            "43306e5e1e425c1b",
            "4a2e33d6b3441375",
            "6193943a17fef2a8",
            "ed2b748963509b7a",
            "04f8bc550041e07f",
            "4fb7a97f1e11e453",
            "488f8b73e263e289",
            "e95454bda222353f",
            "3fdb2a40762b37a6"
        ],
        "env": [
            {
                "name": "test",
                "value": "test",
                "type": "str"
            }
        ],
        "x": 114,
        "y": 599,
        "w": 732,
        "h": 342,
        "info": "test"
    },
    {
        "id": "277528d0a1ec4cf7",
        "type": "group",
        "z": "ebe1ddb7db2b1d13",
        "name": "Line Notify",
        "style": {
            "stroke": "#addb7b",
            "label": true,
            "color": "#000000",
            "fill": "#c8e7a7"
        },
        "nodes": [
            "d5f06e68cee866e3",
            "033a221bb0eefdb4",
            "f81820959540402f",
            "eae20c69449928b0",
            "b0afec616c45c841"
        ],
        "x": 34,
        "y": 39,
        "w": 752,
        "h": 122
    },
    {
        "id": "ac9787b46f70e038",
        "type": "group",
        "z": "ebe1ddb7db2b1d13",
        "name": "Blynk Send & Receive",
        "style": {
            "stroke": "#92d04f",
            "fill": "#c8e7a7",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "47c93b776b14fab5",
            "68c486f4c4ae81ea",
            "37c0a6341eadea20",
            "b62bdd1d41aa81e7",
            "b5a2678577ad6b7b",
            "4560fe03fee04635",
            "cec1a25574c720ed",
            "0d62bfcf840e1635",
            "848eca293cd301df",
            "0e301823526a8365",
            "680fd1af49ef6d20",
            "d32b1f89f457317b"
        ],
        "x": 34,
        "y": 199,
        "w": 752,
        "h": 242
    },
    {
        "id": "e46a4f3b10c5a3b0",
        "type": "group",
        "z": "ebe1ddb7db2b1d13",
        "name": "Camera to Line",
        "style": {
            "stroke": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "463bbfd6868b4ba3",
            "1a6f5cf6eea2e6b7",
            "0f785f873aa00133",
            "ba904c9849493c1b",
            "8f43f844915dec5d"
        ],
        "x": 54,
        "y": 499,
        "w": 652,
        "h": 182
    },
    {
        "id": "0f29eb000b8bbd5d",
        "type": "group",
        "z": "18cf0a2502a0767f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3d812135315fcfda",
            "3a7791e0636f0d13",
            "d60bf0bc3d360ebd",
            "5762d6bf670daf3a",
            "8c46cd3b40e2a4a9",
            "23f04dcae8eea7e3",
            "385e61f224bbd94c",
            "7f427ef699d15657",
            "db3237480e489ead",
            "a7905ff730c7d804",
            "05bc8a86e7a22d32",
            "844be2ddeda5fce1",
            "542d379357d778ac",
            "5282e4187bc4e47b",
            "383b93b73359efc0",
            "d564910136f4e360",
            "841ad28fac446f0b",
            "3e8b4f5ab89a0259",
            "24e38a85880836da",
            "769df23c39db701f"
        ],
        "x": 74,
        "y": 663.0000076293945,
        "w": 1041.8999481201172,
        "h": 437.99999237060547
    },
    {
        "id": "2fd2bb164f28a9eb",
        "type": "group",
        "z": "18cf0a2502a0767f",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4cee2e1bc9cd5ed5",
            "6a3a5c413b35a622",
            "dcb7c22fecb8e27b",
            "2a75fd0ee5f07d3a",
            "ff4c7e0e0fae3b54",
            "552f429eada488c6",
            "0f0a08adc9ae2ecd",
            "e3858202505b7e4d",
            "dd232266898bae01",
            "447840385a6e1031",
            "dd5a9dd757ca0179"
        ],
        "x": 54,
        "y": 1139,
        "w": 972,
        "h": 242
    },
    {
        "id": "fcf4ef1d2fe0fb74",
        "type": "group",
        "z": "10938d45dccd01ac",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7e3b4c4389147b7d",
            "15237651.20281a",
            "84df0cd4.58462",
            "eac3e9b1.b2f0e8",
            "ca03c5dc.709628",
            "57a3215a.12b8d",
            "fc1afd38.1ad0f",
            "35b4a3e.f64c05c",
            "1528d6ba.7db449",
            "7eafa2f8.041ebc"
        ],
        "x": 74,
        "y": 379,
        "w": 812,
        "h": 344
    },
    {
        "id": "512f7e5c8705cffb",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Enable & Disable Button",
        "style": {
            "label": true
        },
        "nodes": [
            "2509550891b9702e",
            "fda85a67e82a1213",
            "11dae9f5f2b051a9",
            "0282a497c9bdb1be",
            "4484996b8c91c875",
            "6d4fbddfa98cc211"
        ],
        "x": 94,
        "y": 79,
        "w": 872,
        "h": 162
    },
    {
        "id": "0f8011408d1d7d7d",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Set list dropdown",
        "style": {
            "label": true
        },
        "nodes": [
            "3df4887acc6208f2",
            "f92489d740a7bb21",
            "074fab8974e843dd",
            "d03f9c300b347a61",
            "7c4d7427470090b8",
            "3206a58d0e3a2761",
            "c680d6e08cf60e94"
        ],
        "x": 1054,
        "y": 79,
        "w": 752,
        "h": 202
    },
    {
        "id": "d1befc20226e5039",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Other widget",
        "style": {
            "label": true
        },
        "nodes": [
            "296edadee2e95b07",
            "4a501d234c3af26f",
            "4ddcd8ce9654461a",
            "7ee7fa342cd10038",
            "153203b6ee452b12",
            "add6376e4a8e1841",
            "a7eaed6e22b2026f",
            "9ba84f7107200b4c",
            "9350968b359b2782",
            "799bb824d694d356",
            "27b1641fc98e95f1",
            "2b96674d469e45d5",
            "199452130d4b36ae",
            "601aa3b5c3ea41f3",
            "c815cf03b13c8252",
            "1b624a56217cf0fa",
            "5a4753541954def4",
            "e63598113336e911"
        ],
        "x": 54,
        "y": 339,
        "w": 1012,
        "h": 382
    },
    {
        "id": "11f4df6073ae1b74",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Indicator & flipflop",
        "style": {
            "label": true
        },
        "nodes": [
            "5ec5a15ff9fcc153",
            "185b19b3b6b7ae44",
            "91baff2b52481731",
            "75c391af566ce6cc",
            "78820ae7307a4da2"
        ],
        "x": 74,
        "y": 1079,
        "w": 652,
        "h": 142
    },
    {
        "id": "ac7c5be99b0dead7",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Speech",
        "style": {
            "label": true
        },
        "nodes": [
            "1ca2bdc45b308cfa",
            "a310d5b27b5d2c17",
            "880717f970b59452",
            "5effb9a55b9a5019",
            "28d4eef9cf8417d7"
        ],
        "x": 74,
        "y": 779,
        "w": 552,
        "h": 142
    },
    {
        "id": "f3a8e7298ff74161",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Node status",
        "style": {
            "label": true
        },
        "nodes": [
            "f798fe4aac3498f5",
            "8e16d9fe54ab8c54",
            "a0b0fb874e39486d",
            "3fe35bcb4a86a813",
            "4f05430e0d33100e",
            "b4b7f394416ab92a",
            "bdd811fe7183d601"
        ],
        "x": 1114,
        "y": 919,
        "w": 412,
        "h": 302
    },
    {
        "id": "fdf5d546ebdc4d8b",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Counter concept",
        "style": {
            "label": true
        },
        "nodes": [
            "ca622aab7903bb52",
            "2309ed90a167b461",
            "d024ff1db1a88acd",
            "1996a67f8fd4d8f9",
            "4d5b8f8fabb0da7b",
            "2dc5d061fd44904c",
            "bbfc4b407429ede0",
            "e3072b7dc7b05305"
        ],
        "x": 1534,
        "y": 979,
        "w": 552,
        "h": 242
    },
    {
        "id": "7af0ce2ca4bde019",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Progress bar",
        "style": {
            "label": true
        },
        "nodes": [
            "9ed8eab311da81de",
            "2c0cb02adfe30422",
            "beabad43906f3702"
        ],
        "x": 74,
        "y": 959,
        "w": 552,
        "h": 82
    },
    {
        "id": "a907272621fe05d4",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Notification & Login",
        "style": {
            "label": true
        },
        "nodes": [
            "53131ca44f7698d0",
            "5f9860d8af3f7872",
            "894b938ec50552c8",
            "7dcc4cd086ee7cf3",
            "ba110d0c831b5692",
            "a0270e46d4acc1e5",
            "971048170e63dc66",
            "cbd7e2bedeaeb456",
            "b7407b6eb04e4392",
            "09e1692aed8ba419",
            "06805afefd845711",
            "94fb08c017a627f4",
            "91e3c5eeb225f944",
            "00b0b71c9f1fb27e",
            "520904aba6089040",
            "2a949b3587cb030c"
        ],
        "x": 74,
        "y": 1259,
        "w": 912,
        "h": 442
    },
    {
        "id": "a73bb51f69a29ff1",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "1bc48eaf9d67b92c",
            "2c82654baf7005f0",
            "6b53af5d87788e8f",
            "59d60fefde771be9",
            "03e5d1ca73cbce0f",
            "c2e1c0cdbfb020bd",
            "31b0e8c1007706db",
            "5cfc613db547b93a",
            "a8b45cfbf9d7bcee"
        ],
        "x": 94,
        "y": 1759,
        "w": 712,
        "h": 262
    },
    {
        "id": "363133c22b66b0e8",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Table Manage",
        "style": {
            "label": true
        },
        "nodes": [
            "d3332171a3c97f37",
            "49f87e46174a10c7",
            "8fb037739681f7cb",
            "b98926b594d69e83",
            "5f8de0754f16634c",
            "ec4f9a1754e98501",
            "2c6a326d5fdb466f",
            "2628d77e41bba5e7",
            "9ff03d27c91b1eb6",
            "8ff5c41b79ca5888",
            "9b2561f442c8c872",
            "ffe36179f363b663",
            "006a4b923b48727e",
            "a263a35fb1f42dbb",
            "a10dc8e00cc8d658",
            "2de41c14e3a25a96",
            "2d35ce9605f1baa1",
            "a458e0a1f9fc0fc6",
            "028ffa28b7c89838",
            "baa3159fbe06551d",
            "774f2dc5d284ade6",
            "f7e9e156f804b821",
            "611798e35a622fdf",
            "b0f19761674291a9",
            "977b08e545c53364",
            "47b92669ce430a43",
            "d53542cb1526d949",
            "b14de7dfd1477328",
            "ce411fa07dcfc0da",
            "5fa67d9631fdfb11",
            "bdaed7e9e2c5ba5e",
            "69905901eaf00985",
            "14a039d5e4c95bcd",
            "273a6fa88549cc93",
            "b0689003eca3b29a",
            "93ec54852cbd2907",
            "da75a1b822492ed8",
            "a3b70b9499f1fbed",
            "07eee8359847d92d",
            "7ca086bd3a3ac62b",
            "88ca247cfd6012cc",
            "190a5c0602071e53",
            "dda2cc06001f3656",
            "15c8778628602bca",
            "ab097b97617f8158",
            "27b8b1466c774e82",
            "7fa5be604343c5be",
            "15ac53cce7550fd3",
            "e58d404add4c984a",
            "d37dc0e30051a176",
            "780cbd9c5e3ad898",
            "7e41426615df13d9",
            "371a110f486fddb4",
            "a839af9bd981897f",
            "18f47143319e3366",
            "ae20df09087c2f33",
            "c3237f1d2dd22107",
            "5b7664fb928f59a4"
        ],
        "x": 1114,
        "y": 1299,
        "w": 1152,
        "h": 1182
    },
    {
        "id": "ee98ef6b1fa1855f",
        "type": "group",
        "z": "92701a6abe8f79f1",
        "name": "Chart and Plot",
        "style": {
            "label": true
        },
        "nodes": [
            "751a98b00fece417",
            "45c01940ef738009",
            "ca94c7886b253daa",
            "ffc9ffa4a0d68aa3",
            "12582169216d25d1",
            "bd26801c77cff46f",
            "3e35377fffb264db",
            "b6714ca3022302dd",
            "dd611ce23038f188",
            "f8280900ebc99446",
            "899609abcbe0079d",
            "72ebbbc83b027784",
            "26dd0dd627f5085a",
            "beaa6ff1c3b03214",
            "c723d9bbadd7db5d",
            "1f6ff3541a6a4768",
            "3ab8b626c65f51a9"
        ],
        "x": 1114,
        "y": 319,
        "w": 752,
        "h": 522
    },
    {
        "id": "4ad3d049edc39322",
        "type": "group",
        "z": "18cf0a2502a0767f",
        "name": "UI group",
        "style": {
            "stroke": "#ffcf3f",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "b97bc1c0.cb899",
            "718cfd195b411ba8",
            "ef81b0f02ba7b98d",
            "3cd4308335f3d205",
            "ee07ae5804356234",
            "6382720d6b8f61a1",
            "85965edc.72971"
        ],
        "x": 854,
        "y": 119,
        "w": 412,
        "h": 342
    },
    {
        "id": "1bf54cb25f373f45",
        "type": "group",
        "z": "7243ab0a14bfa6bd",
        "name": "OPC UA send receive test",
        "style": {
            "fill": "#d1d1d1",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6d191d67d5fe4a6a",
            "106046975beddddd",
            "d1da7314d988c3fc",
            "b2a5cffbb0b483f5",
            "dc98e5696f8656a4",
            "eb6d7996c5c381cd",
            "077a16b1ea57c12c",
            "c33630d43bd45688",
            "5929bfd7aec84acb",
            "a91f078eae0b1d11",
            "1cc9148de434cf5c",
            "6a93e259086552a2"
        ],
        "x": 94,
        "y": 811.5,
        "w": 812,
        "h": 257
    },
    {
        "id": "235674f73e977231",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#4d6c9d",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#325ee2",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#325ee2",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#325ee2",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#dcdbdb",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#7593eb",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#454545",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#325ee2",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "483d2313028f1eb5",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4a01dad1247a7393",
        "type": "ui_group",
        "name": "Default",
        "tab": "483d2313028f1eb5",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "05f8cc4a2640f75c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c982fbb8.1deb38",
        "type": "ui_group",
        "name": "hidden_group",
        "tab": "483d2313028f1eb5",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e63bce2d.68925",
        "type": "ui_tab",
        "name": "Denon",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "62af3d522a4f79d4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.18.0.2",
        "port": "1883",
        "clientid": "Nodered",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "458d5bcd.691d94",
        "type": "ui_tab",
        "name": "Network",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d0158446114a92fd",
        "type": "ui_tab",
        "name": "Cemera",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c5462480faa4316e",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "483d2313028f1eb5",
        "order": 3,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "342cfcc56f0b7aea",
        "type": "ui_spacer",
        "z": "10938d45dccd01ac",
        "name": "spacer",
        "group": "4a01dad1247a7393",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "6ef4c5b11a4a9306",
        "type": "ui_spacer",
        "z": "10938d45dccd01ac",
        "name": "spacer",
        "group": "c5462480faa4316e",
        "order": 4,
        "width": 3,
        "height": 1
    },
    {
        "id": "712b53e5.990dfc",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.10.151",
        "port": "1883",
        "clientid": "NodeRedSQLClient",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "15",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4c814e259092c8a5",
        "type": "modbus-client",
        "d": true,
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.10.103",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "090902c8070ee93a",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "d0158446114a92fd",
        "order": 2,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3769a856c965eb4d",
        "type": "ui_spacer",
        "z": "cc86b9261dd774ca",
        "name": "spacer",
        "group": "090902c8070ee93a",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "503bceeccba76b41",
        "type": "ui_tab",
        "name": "RTSP",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5bb224cb9205d57d",
        "type": "ui_tab",
        "name": "Practice",
        "icon": "fa-user-circle",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a16097a9a328313b",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "5bb224cb9205d57d",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "4b2cbd72aee2947f",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "5bb224cb9205d57d",
        "order": 2,
        "disp": true,
        "width": 6
    },
    {
        "id": "6f4dea3657a3fd67",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "5bb224cb9205d57d",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "15698684c5bf3c74",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "5bb224cb9205d57d",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": true,
        "className": ""
    },
    {
        "id": "d81d78069bd1bc1f",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "fa-microchip",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a7440fc437c9a1e7",
        "type": "ui_group",
        "name": "Table",
        "tab": "d81d78069bd1bc1f",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d1673311569d82e",
        "type": "ui_spacer",
        "z": "92701a6abe8f79f1",
        "name": "spacer",
        "group": "15698684c5bf3c74",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "70617d8f855f08c2",
        "type": "ui_spacer",
        "z": "92701a6abe8f79f1",
        "name": "spacer",
        "group": "15698684c5bf3c74",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "bb12bb9ed34b642d",
        "type": "ui_group",
        "name": "Command",
        "tab": "d81d78069bd1bc1f",
        "order": 3,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e96ec0038089a248",
        "type": "ui_group",
        "name": "Data",
        "tab": "d81d78069bd1bc1f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e28aabf0bd0f76f",
        "type": "ui_group",
        "name": "Row",
        "tab": "d81d78069bd1bc1f",
        "order": 5,
        "disp": true,
        "width": 4,
        "collapse": false,
        "className": ""
    },
    {
        "id": "321583379173f6e3",
        "type": "ui_group",
        "name": "Filter",
        "tab": "d81d78069bd1bc1f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c8d85c22541f0779",
        "type": "modbus-client",
        "name": "",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "192.168.10.156",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "Signin",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "History",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2feac813dbe8d5a3",
        "type": "ui_group",
        "name": "Picture",
        "tab": "d0158446114a92fd",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "34c89ac33f7f975b",
        "type": "ui_group",
        "name": "Web push notifications",
        "tab": "05f8cc4a2640f75c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2a745e6b.07df92",
        "type": "ui_group",
        "name": "Default",
        "tab": "e63bce2d.68925",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "948b2f03.477ee",
        "type": "ui_group",
        "name": "Network",
        "tab": "458d5bcd.691d94",
        "order": 1,
        "disp": false,
        "width": 17,
        "collapse": false
    },
    {
        "id": "e16e06ca.f38438",
        "type": "ui_group",
        "name": "Refresh But",
        "tab": "503bceeccba76b41",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "675036dd.603328",
        "type": "ui_group",
        "name": "Frame Grab",
        "tab": "503bceeccba76b41",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "135ec26dfc1c17f5",
        "type": "ui_spacer",
        "z": "cc86b9261dd774ca",
        "name": "spacer",
        "group": "2feac813dbe8d5a3",
        "order": 6,
        "width": 3,
        "height": 1
    },
    {
        "id": "d1b40bfe250bcf2e",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.10.156:4840",
        "secpol": "None",
        "secmode": "None",
        "none": true,
        "login": false,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "e07bcc4e8dc8749f",
        "type": "MSSQL-CN",
        "d": true,
        "tdsVersion": "7_4",
        "name": "",
        "server": "localhost",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "test",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "df8c0b88.91b0a8",
        "type": "MSSQL-CN",
        "d": true,
        "name": "Dev",
        "server": "localhost",
        "port": "",
        "encyption": false,
        "trustServerCertificate": false,
        "database": "Dev",
        "useUTC": false,
        "connectTimeout": "",
        "requestTimeout": "",
        "cancelTimeout": "",
        "pool": "",
        "parseJSON": false,
        "enableArithAbort": true
    },
    {
        "id": "0d1e5ee66bbb8d94",
        "type": "firebase-config",
        "d": true,
        "name": "Firestore",
        "cred": "{   \"type\": \"service_account\",   \"project_id\": \"nutproject0405\",   \"private_key_id\": \"ece45cd371a09586641e508ef9a41d7e41a108e6\",   \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDXOsxii7PXprX4\\njtLGylLnfNAElYDT5zWjtxwrxnwvfteVukPX0SFM7pQBld+5PNvRozfprG6d/vje\\nocaNDYqmSbPKX+DCwa1RaXq2yvEo3nYU0CeJDNRcCmQVKWw7DYaV9BMZAdXkc0dz\\n+zwe/AoubVar5RnluvtR9isGbw1VibM0rIFnrcPY0iZSeWFMspd8MCReu7lwQ0Du\\nk8jZNJWSM13YN7pWnvFeJFeMzoPXYKzWvjS0yUP8k31yNHQbWV6VnNTAuh7xRcNc\\nk0zgoWV3KjijfzR7Qnf7LZzM7sSLYzAlT2R0iaexfOpI6zvNot/jqb1Q39vYycJm\\n5du3cZ39AgMBAAECggEAItOAU+fQG3J92nDd2U3OuWdgT4WTeXZdnxaXh9vPp23K\\nW49uv+K2lTi7mUATmeknlpXnC7gblBQ4V+nsc1GAIGUnovT9rPXi4hwDv8U53YeV\\nqst9wjbhu9zwkd4Ihcur/eKnHnJGFney1akO8uKMkTOfBSSGmr41QW9oSdu5WCAq\\ndkj/0WX7wGA7a9z/tWlhlYmto6MKTJUoys2QXhVDkHYgUfNSsvH/suqI404XNYNB\\nxv7vhB0Np3xB5Bwp96qHMVL6Ukyjt3082OMXogyfSdqYDPMjP60GOQ7vVT0yrVyw\\nnGw1TgwCSOdKQrHr2b7Esp5DndihE1aCOsTp/Uvc/wKBgQDuheDq/ACOPQF7bnOj\\n0M4K/sfiZCVT/w8dqHN0XOi4mOpPT8Nb762CJQZi+fjpzArm7Dp4jb8UlE6otXFS\\nDKr5QoTVjBiN7GGrUvfVRpN4TH6lwHVuLcuS6g8gsSVhzPMDhPRezzyU9YOYaLEH\\nPdKpdexeYaAVjzFJo1CYMqmeNwKBgQDm//5RF0wvMMy/5Axp0ID02iAVuKq/l7ic\\n5UoTxdmQxKqHtJSOiD2L7a8LsTEbULEswuswi7FXSWtQcxVg5lFu8r5946bv+TIo\\nIuh/6jICNLQZBgmjFfhvqy5iUnPYXjRatVBlCBCtXp66WFjZ0Bjdi51g9bBSA74R\\nuYyUNDDrawKBgCozP47zlPmVa4y2BvmluL6TQzQXuc75omgB5KNiyL3YOCReHVdH\\nuW/8MvwR8+sRcaBXjSTFF1iBwMTyjSESIrHFBhFuHu4FM2aHYFe4i+DNz95thZk/\\nuvO8O37yOIXsJ9aokD+x9Kr6IRU2+JMqafoXZgFwzkziL7syjNDQrdfTAoGACCKT\\nzj9Hy5GoZEmftkpFgFn+L0WlncG2GrBof3HES7jhWI4ffTWHFVp1g6/lztR0qOLk\\nbX097ZkEUnz7D8KMs5+Q3dYalvDrt0Yjcf3JbRJ2FTuFM10etrAMniHROpl2tosU\\nHbq++5wNcvqRhnoxpfu4uyVr5DeFhhJGxSFhZ6kCgYBzcaUyzQhy7tX6nPbUtP7K\\nBVggvWOzxJN7pAE6G/ysKc46pwh1prycsbNOYADdWu3b23MLYZENkWtyS1f60jiK\\nxxVivE48ZIzXc6Ahh4t1Em/CixFL+wU2V4vIGL6tyaMVpXUVvM0DYscOHSutudF5\\nOaQPZi9m6lce5Ymg0KUy2w==\\n-----END PRIVATE KEY-----\\n\",   \"client_email\": \"firebase-adminsdk-104pf@nutproject0405.iam.gserviceaccount.com\",   \"client_id\": \"105046737463317605890\",   \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",   \"token_uri\": \"https://oauth2.googleapis.com/token\",   \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",   \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-104pf%40nutproject0405.iam.gserviceaccount.com\"  }",
        "dburl": "https://nutproject0405.firebaseio.com",
        "bucket": "gs://nutproject0405.appspot.com"
    },
    {
        "id": "c21b98997b5aa92e",
        "type": "firebaseCertificate",
        "d": true,
        "firebaseurl": "nutproject0405",
        "loginType": "jwt"
    },
    {
        "id": "74b69329766d603b",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<html>\n    <head>\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\" crossorigin=\"anonymous\">\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js\" integrity=\"sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi\" crossorigin=\"anonymous\"></script>\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js\" integrity=\"sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG\" crossorigin=\"anonymous\"></script>\n        <meta charset=\"UTF-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    </head>\n    <body>\n        <div class=\"container\">\n            <h1>{{payload.title}}</h1>\n         <form class=\"\" action=\"/register\" method=\"post\">\n            <div class=\"form-group\">\n                <label for=\"fname\">FirstName</label>\n                <input type=\"text\" name=\"firstname\" value=\"\"\n                class=\"form-control\" id=\"fname\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"lname\">LastName</label>\n                <input type=\"text\" name=\"lastname\" value=\"\"\n                class=\"form-control\" id=\"lname\">  \n            </div>\n            <div class=\"form-group\">\n                <label for=\"age\">Age</label>\n                <input type=\"number\" name=\"age\" value=\"\"\n                class=\"form-control\" id=\"age\">  \n            </div>\n            <div class=\"form-group\">\n                <label for=\"toy\">Toy</label>\n                <input type=\"text\" name=\"toy\" value=\"\"\n                class=\"form-control\" id=\"toy\">  \n            </div>\n\n            <input type=\"submit\" name=\"subbtn\" value=\"Submit\" class=\"btn btn-primary\"> \n        </form>\n        </div>\n    </body>\n</html>\n",
        "output": "str",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "c3c2c78171912579"
            ]
        ]
    },
    {
        "id": "c3c2c78171912579",
        "type": "http response",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "eba910c94517e838",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "Get/register",
        "url": "/register",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c003e7cee41be4aa"
            ]
        ]
    },
    {
        "id": "c003e7cee41be4aa",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "My Smart Farm",
        "output": "str",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "74b69329766d603b"
            ]
        ]
    },
    {
        "id": "6337874c5f98c455",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "PUT/register",
        "url": "/register",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "f184420a923b49bd",
                "9d5f748cbe508189",
                "7319748d5153da10"
            ]
        ]
    },
    {
        "id": "f184420a923b49bd",
        "type": "template",
        "z": "e6e652e24933c362",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1> register sucsess {{payload.firstname}}</h1>",
        "output": "str",
        "x": 380,
        "y": 340,
        "wires": [
            [
                "c56c1a6a1e7b87ed"
            ]
        ]
    },
    {
        "id": "9d5f748cbe508189",
        "type": "debug",
        "z": "e6e652e24933c362",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 420,
        "wires": []
    },
    {
        "id": "c56c1a6a1e7b87ed",
        "type": "http response",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "303",
        "headers": {
            "location": "/register"
        },
        "x": 600,
        "y": 340,
        "wires": []
    },
    {
        "id": "337b2d8a2a06f061",
        "type": "ui_template",
        "z": "e6e652e24933c362",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 760,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "561b7ff7.7caf3",
        "type": "http in",
        "z": "e6e652e24933c362",
        "name": "",
        "url": "/xxxx",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 760,
        "y": 960,
        "wires": [
            [
                "cc1feca1.b909b"
            ]
        ]
    },
    {
        "id": "bd955688.623878",
        "type": "http request",
        "z": "e6e652e24933c362",
        "name": "HttpRequest to get image",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 900,
        "wires": [
            [
                "cc1feca1.b909b"
            ]
        ]
    },
    {
        "id": "da39d7.4e70f628",
        "type": "function",
        "z": "e6e652e24933c362",
        "name": "Next image url",
        "func": "var counter = global.get(\"image_counter\") || 0; \ncounter++;\nglobal.set(\"image_counter\",counter);\n\nmsg.url = 'https://192.168.43.1:8080/400x200/fff/000&text=PNG+' + counter;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 485,
        "y": 900,
        "wires": [
            [
                "bd955688.623878"
            ]
        ]
    },
    {
        "id": "435929ff.b35c18",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Every second",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 267.9999885559082,
        "y": 899.9999990463257,
        "wires": [
            [
                "da39d7.4e70f628"
            ]
        ]
    },
    {
        "id": "bacb880f.853a88",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get device information",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "90cf9e45.fef83"
            ]
        ]
    },
    {
        "id": "90cf9e45.fef83",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getDeviceInformation",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "c17d3b0c.763f78",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get services",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "b2189543.3cbc28"
            ]
        ]
    },
    {
        "id": "b2189543.3cbc28",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getServices",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d710fda6.e8aae",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get system datetime",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "cc3c9656.8496a8"
            ]
        ]
    },
    {
        "id": "cc3c9656.8496a8",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getSystemDateAndTime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a744dbdf.67e6c8",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get capabilities",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 640,
        "wires": [
            [
                "5d9e78c8.149b38"
            ]
        ]
    },
    {
        "id": "5d9e78c8.149b38",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getCapabilities",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "c4b35b2e.3088b8",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get scopes",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 680,
        "wires": [
            [
                "65b4227b.29ca5c"
            ]
        ]
    },
    {
        "id": "65b4227b.29ca5c",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getScopes",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "d86390ea.9497c",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "System reboot",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "b977019e.b468"
            ]
        ]
    },
    {
        "id": "b977019e.b468",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "systemReboot",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "b42d91a3.9ce6",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get service capabilities",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "54209451.26faec"
            ]
        ]
    },
    {
        "id": "54209451.26faec",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getServiceCapabilities",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "43651b47.8d7824",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Get hostname information",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "d49b6d87.e936d"
            ]
        ]
    },
    {
        "id": "d49b6d87.e936d",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "getHostname",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6227d5ec.51a9ec",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Reconnect to device",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 800,
        "wires": [
            [
                "c24552ea.311e3"
            ]
        ]
    },
    {
        "id": "c24552ea.311e3",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "reconnect",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "7c39ee64.2d193",
        "type": "debug",
        "z": "e6e652e24933c362",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 810,
        "y": 480,
        "wires": []
    },
    {
        "id": "d576d399c9cda2ec",
        "type": "inject",
        "z": "e6e652e24933c362",
        "name": "Set imaging settings",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 750,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "538ea92079026c89",
        "type": "change",
        "z": "e6e652e24933c362",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "setImagingSettings",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.brightness",
                "pt": "msg",
                "to": "50",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a8a188ee8ec7b7e3",
        "type": "comment",
        "z": "e6e652e24933c362",
        "name": "Get the original settings",
        "info": "",
        "x": 980,
        "y": 640,
        "wires": []
    },
    {
        "id": "8877ede3af807298",
        "type": "comment",
        "z": "e6e652e24933c362",
        "name": "Replace one or more settings",
        "info": "",
        "x": 1300,
        "y": 640,
        "wires": []
    },
    {
        "id": "cc1feca1.b909b",
        "type": "multipart-encoder",
        "z": "e6e652e24933c362",
        "name": "",
        "statusCode": "",
        "ignoreMessages": true,
        "outputOneNew": false,
        "outputIfSingle": true,
        "outputIfAll": false,
        "globalHeaders": {
            "Content-Type": "multipart/x-mixed-replace;boundary=--myboundary",
            "Connection": "keep-alive",
            "Expires": "Fri, 01 Jan 1990 00:00:00 GMT",
            "Cache-Control": "no-cache, no-store, max-age=0, must-revalidate",
            "Pragma": "no-cache"
        },
        "partHeaders": {
            "Content-Type": "image/jpeg"
        },
        "destination": "all",
        "highWaterMark": 16384,
        "x": 940,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "7319748d5153da10",
        "type": "Barcode Generator",
        "z": "e6e652e24933c362",
        "name": "Gen_QRCode",
        "data": "payload.firstname",
        "dataType": "msg",
        "barcode": "qrcode",
        "barcodeType": "barcode",
        "options": "",
        "optionsType": "ui",
        "sendProperty": "payload",
        "props": [
            {
                "p": "rotate",
                "v": "N",
                "vt": "str"
            },
            {
                "p": "includetext",
                "v": "true",
                "vt": "bool"
            },
            {
                "p": "textxalign",
                "v": "center",
                "vt": "str"
            }
        ],
        "x": 380,
        "y": 260,
        "wires": [
            [
                "3b260cdda52558a9"
            ]
        ]
    },
    {
        "id": "3b260cdda52558a9",
        "type": "image viewer",
        "z": "e6e652e24933c362",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "337b2d8a2a06f061"
            ]
        ]
    },
    {
        "id": "5f85bc5d.988a14",
        "type": "ui_template",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "group": "090902c8070ee93a",
        "name": "Display image",
        "order": 3,
        "width": 5,
        "height": 5,
        "format": "<img width=\"160\" height=\"160\" alt=\"ONVIF test\" src=\"{{msg.payload}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "9629489a2866878e",
        "type": "ui_template",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "group": "090902c8070ee93a",
        "name": "StreamCam",
        "order": 1,
        "width": 11,
        "height": 7,
        "format": "<img src = http://192.168.0.100/onvif/media_service\">",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "b27f65e54f424c5a",
        "type": "comment",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "info": "https://wiki.instar.com/en/Advanced_User/Node-RED_and_ONVIF/",
        "x": 240,
        "y": 720,
        "wires": []
    },
    {
        "id": "43306e5e1e425c1b",
        "type": "ui_button",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "group": "2feac813dbe8d5a3",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "6193943a17fef2a8"
            ]
        ]
    },
    {
        "id": "4a2e33d6b3441375",
        "type": "ui_button",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "group": "2feac813dbe8d5a3",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 900,
        "wires": [
            [
                "6193943a17fef2a8"
            ]
        ]
    },
    {
        "id": "6193943a17fef2a8",
        "type": "mqtt out",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "topic": "rec",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "712b53e5.990dfc",
        "x": 430,
        "y": 880,
        "wires": []
    },
    {
        "id": "ed2b748963509b7a",
        "type": "mqtt in",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "topic": "fname",
        "qos": "0",
        "datatype": "json",
        "broker": "712b53e5.990dfc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 570,
        "y": 760,
        "wires": [
            [
                "04f8bc550041e07f"
            ]
        ]
    },
    {
        "id": "04f8bc550041e07f",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "group": "2feac813dbe8d5a3",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Get name",
        "format": "{{msg.payload.name}}",
        "layout": "row-spread",
        "className": "",
        "x": 720,
        "y": 760,
        "wires": []
    },
    {
        "id": "4fb7a97f1e11e453",
        "type": "ui_text_input",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "label": "Limit",
        "tooltip": "",
        "group": "2feac813dbe8d5a3",
        "order": 5,
        "width": "7",
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": false,
        "className": "",
        "topicType": "msg",
        "x": 570,
        "y": 880,
        "wires": [
            [
                "488f8b73e263e289"
            ]
        ]
    },
    {
        "id": "488f8b73e263e289",
        "type": "mqtt out",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "topic": "limit",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "712b53e5.990dfc",
        "x": 750,
        "y": 880,
        "wires": []
    },
    {
        "id": "e95454bda222353f",
        "type": "mqtt in",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "topic": "pcount",
        "qos": "0",
        "datatype": "json",
        "broker": "712b53e5.990dfc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 570,
        "y": 820,
        "wires": [
            [
                "3fdb2a40762b37a6"
            ]
        ]
    },
    {
        "id": "3fdb2a40762b37a6",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "d": true,
        "g": "7c0bbc6b66ba5563",
        "group": "2feac813dbe8d5a3",
        "order": 4,
        "width": 8,
        "height": 1,
        "name": "",
        "label": "Count person",
        "format": "{{msg.payload.DeepDetect.count}}",
        "layout": "row-spread",
        "className": "",
        "x": 740,
        "y": 820,
        "wires": []
    },
    {
        "id": "23e6097e40c33724",
        "type": "comment",
        "z": "cc86b9261dd774ca",
        "name": "Frame grabber",
        "info": "This section of the flow is responsible for \ngrabbing a single out of the RTSP feed of the IP\nCamera. It uses avconv to do that which is part\nof the libav-tools for raspberry pi.\n\nThe trigger can be an inject, or a UI button.\nThe statistic node keeps a track of the number of\ngrabbed frames and the success rate (when the\nvideo conversion/grabbing was successful). The \nStatistic node also has a reset input which can \nbe used to periodically reset the stats (e.g.\ndaily, weekly).\n\nI directed the second output of the Exec node to\na file, as the output of the avconv is usually \nquite long and if there are errors you don't\nsee the entire output in the debug window, so in\nthat case just open to output and see what the issue\nis.\n\nffmpeg -f rtsp -i \"rtsp://admin:admin@192.168.43.1:8080/h264_pcm.sdp\" -f image2pipe pipe:1",
        "x": 228.62501525878906,
        "y": 1004.0000076293945,
        "wires": []
    },
    {
        "id": "f9d3b643f8e06258",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "bc0379ecc790c22f"
            ]
        ]
    },
    {
        "id": "3d6936a2d26d299e",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "Reset stat",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "reset",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "reset",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1240,
        "wires": [
            [
                "79b8fb11f68fc3ed"
            ]
        ]
    },
    {
        "id": "e5d737400895ff2a",
        "type": "ui_button",
        "z": "cc86b9261dd774ca",
        "name": "Refresh",
        "group": "675036dd.603328",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh image",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 240,
        "y": 1300,
        "wires": [
            [
                "8104e25146d0cc27"
            ]
        ]
    },
    {
        "id": "bc0379ecc790c22f",
        "type": "change",
        "z": "cc86b9261dd774ca",
        "name": "Set filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "home/grab3.jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 418,
        "y": 1113,
        "wires": [
            [
                "1d0db618ddc7e6a6"
            ]
        ]
    },
    {
        "id": "8104e25146d0cc27",
        "type": "function",
        "z": "cc86b9261dd774ca",
        "name": "Frame grab",
        "func": "var now = new Date();\n// Create formatted time\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});\n\n// file path with / at the end\nvar path = \"/home/\";                     // This is the path\nvar filename = \"frame_\"+yyyy+mm+dd+\"-\"+hh+mm+ss+\".jpg\";     // file name\nmsg.payload = path + filename;                              // pass the full path to payload for the exec node to add to the end of the command\nmsg.file = filename;                                        // To be used later to store the information in the DB\nmsg.path = path;                                            // Same as above\nmsg.wwwpath = \"/\";                                          // Same as above\nmsg.topic = \"store\";                                        // Flag to store this image in the DB\nmsg.type = \"timelapse\";                                     // Image type e.g. Front camera, etc.\nmsg.epoch = now.getTime();                                  // Current timestamp\nmsg.formatteddate = dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;   // Formatted timestamp to be used later\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1300,
        "wires": [
            [
                "f4897e2ef7b20dde",
                "1d0db618ddc7e6a6"
            ]
        ]
    },
    {
        "id": "b0abc522af5d3195",
        "type": "ui_button",
        "z": "cc86b9261dd774ca",
        "name": "Reset",
        "group": "e16e06ca.f38438",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 230,
        "y": 1200,
        "wires": [
            [
                "79b8fb11f68fc3ed"
            ]
        ]
    },
    {
        "id": "b39475b0b928e928",
        "type": "function",
        "z": "cc86b9261dd774ca",
        "name": "Statistics",
        "func": "var now = new Date();\nvar stat = context.get(\"stat\");\nif (stat===undefined) {\n    // Initialize the object in case NR restart\n    stat = { \"count\": 0, \"success\": 0, \"rate\": 0.0, \"last\": now};\n}\nif (msg.topic===\"reset\") {\n    // Reset message was received: reset statistics\n    stat = { \"count\": 0, \"success\": 0, \"rate\": 0.0, \"last\": now};\n} else {\n    // Update statistics\n    stat.count++;\n    if (msg.payload.code===0) {\n        stat.success++;\n    }    \n    stat.rate=stat.success/stat.count;\n    stat.last=now;\n}\n\n// Create formatted time\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\nmsg.formattedtime = dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;\nmsg.success = stat.success;\nmsg.rate = Math.floor(stat.rate*100);\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Frames: \"+msg.success+\" | \"+msg.rate+\"% | Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});\n\n\n// Saving data in the context\ncontext.set(\"stat\",stat);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 847.9999847412109,
        "y": 1250.25,
        "wires": [
            [
                "4709dfe9fd474df4",
                "d6ea962afe7983cb",
                "1bba8b481cc7dba4"
            ]
        ]
    },
    {
        "id": "4709dfe9fd474df4",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "group": "e16e06ca.f38438",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Last time",
        "label": "Last grab",
        "format": "{{msg.formattedtime}}",
        "layout": "row-spread",
        "className": "",
        "x": 1049.0000686645508,
        "y": 1170.6499919891357,
        "wires": []
    },
    {
        "id": "d6ea962afe7983cb",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "group": "e16e06ca.f38438",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Frame count",
        "label": "Frames grabbed",
        "format": "{{msg.success}}",
        "layout": "row-spread",
        "x": 1058.899974822998,
        "y": 1206.4499807357788,
        "wires": []
    },
    {
        "id": "1bba8b481cc7dba4",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "group": "e16e06ca.f38438",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Success rate",
        "label": "Success rate",
        "format": "{{msg.rate}} %",
        "layout": "row-spread",
        "x": 1059.8999481201172,
        "y": 1244.4499740600586,
        "wires": []
    },
    {
        "id": "1e390252ee243e18",
        "type": "template",
        "z": "cc86b9261dd774ca",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"200px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 859.9999961853027,
        "y": 1097.2500019073486,
        "wires": [
            [
                "9ddc090e28b5ea3e"
            ]
        ]
    },
    {
        "id": "9ddc090e28b5ea3e",
        "type": "ui_template",
        "z": "cc86b9261dd774ca",
        "group": "675036dd.603328",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1046,
        "y": 1110.7500009536743,
        "wires": [
            []
        ]
    },
    {
        "id": "46e31d5cb5327597",
        "type": "watch",
        "z": "cc86b9261dd774ca",
        "name": "",
        "files": "/home/grab3.jpg",
        "recursive": "",
        "x": 540,
        "y": 1360,
        "wires": [
            [
                "2eb51a1aaea77f9c"
            ]
        ]
    },
    {
        "id": "2eb51a1aaea77f9c",
        "type": "ui_text",
        "z": "cc86b9261dd774ca",
        "group": "675036dd.603328",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "File Size",
        "label": "grab.jpg",
        "format": "{{msg.size}} kb",
        "layout": "row-spread",
        "x": 1060,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f4897e2ef7b20dde",
        "type": "ui_text_input",
        "z": "cc86b9261dd774ca",
        "name": "",
        "label": "Snapshot",
        "tooltip": "",
        "group": "675036dd.603328",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1040,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "79b8fb11f68fc3ed",
        "type": "function",
        "z": "cc86b9261dd774ca",
        "name": "Reset",
        "func": "msg.topic = 'reset';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "b39475b0b928e928"
            ]
        ]
    },
    {
        "id": "025d8be22cc08f08",
        "type": "exec",
        "z": "cc86b9261dd774ca",
        "command": "avconv -f rtsp -i \"rtsp://admin:L2F60D27@192.168.0.100:554//cam/realmonitor?channel=1&subtype=0&unicast=true&proto=Onvif\" -f image2pipe pipe:1",
        "addpay": "payload",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Decode RTSP stream",
        "x": 1480,
        "y": 680,
        "wires": [
            [
                "a425c0cfefda6a5f",
                "daeffdc1fea5ba92"
            ],
            [],
            []
        ]
    },
    {
        "id": "80de6f69548094ed",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "Start stream",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 990,
        "y": 680,
        "wires": [
            [
                "025d8be22cc08f08"
            ]
        ]
    },
    {
        "id": "49b9f93d098d76aa",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "Pause all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGSTOP",
        "payloadType": "str",
        "x": 1010,
        "y": 720,
        "wires": [
            [
                "3bc791f3cac0e9bc"
            ]
        ]
    },
    {
        "id": "d59cc95c708ddf15",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "Resume all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGCONT",
        "payloadType": "str",
        "x": 1010,
        "y": 760,
        "wires": [
            [
                "3bc791f3cac0e9bc"
            ]
        ]
    },
    {
        "id": "3bc791f3cac0e9bc",
        "type": "change",
        "z": "cc86b9261dd774ca",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kill",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 720,
        "wires": [
            [
                "025d8be22cc08f08"
            ]
        ]
    },
    {
        "id": "575c3541bf65a5ae",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "Stop all streams",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SIGTERM",
        "payloadType": "str",
        "x": 1000,
        "y": 800,
        "wires": [
            [
                "3bc791f3cac0e9bc"
            ]
        ]
    },
    {
        "id": "daeffdc1fea5ba92",
        "type": "debug",
        "z": "cc86b9261dd774ca",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 720,
        "wires": []
    },
    {
        "id": "1d0db618ddc7e6a6",
        "type": "http request",
        "z": "cc86b9261dd774ca",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.0.100/onvif/imaging_service",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 610,
        "y": 1120,
        "wires": [
            [
                "8f09c28daa19c274",
                "b39475b0b928e928",
                "82d8749fad48cd8b"
            ]
        ]
    },
    {
        "id": "82d8749fad48cd8b",
        "type": "file",
        "z": "cc86b9261dd774ca",
        "name": "",
        "filename": "/home/grab3.jpg",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1040,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "2ce552f4c01c69a7",
        "type": "ui_template",
        "z": "cc86b9261dd774ca",
        "group": "675036dd.603328",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "c13be4b28cd31647",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 1480,
        "wires": [
            [
                "7a286078f6c0dbe9"
            ]
        ]
    },
    {
        "id": "ce4fea869cfa6b23",
        "type": "exec",
        "z": "cc86b9261dd774ca",
        "command": "ffmpeg -rtsp_transport tcp -i rtsp://192.168.137.106:1025/h264pcm_sdp  -f image2 -vframes 1 -pix_fmt yuvj420p output.jpg",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Decode",
        "x": 620,
        "y": 1500,
        "wires": [
            [
                "2ce552f4c01c69a7"
            ],
            [],
            []
        ]
    },
    {
        "id": "7a286078f6c0dbe9",
        "type": "change",
        "z": "cc86b9261dd774ca",
        "name": "Set filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "home/grab2.jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1520,
        "wires": [
            [
                "ce4fea869cfa6b23"
            ]
        ]
    },
    {
        "id": "8f09c28daa19c274",
        "type": "base64",
        "z": "cc86b9261dd774ca",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "1e390252ee243e18",
                "f3f0f3cc20f8dfa1"
            ]
        ]
    },
    {
        "id": "a425c0cfefda6a5f",
        "type": "image",
        "z": "cc86b9261dd774ca",
        "name": "",
        "width": "200",
        "active": true,
        "outputs": 0,
        "x": 1710,
        "y": 660,
        "wires": []
    },
    {
        "id": "f3f0f3cc20f8dfa1",
        "type": "image",
        "z": "cc86b9261dd774ca",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 1040,
        "y": 980,
        "wires": []
    },
    {
        "id": "72e8f0c547cf14e0",
        "type": "inject",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "084ec3837ab5b6d7",
        "type": "debug",
        "z": "cc86b9261dd774ca",
        "g": "7c0bbc6b66ba5563",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 700,
        "wires": []
    },
    {
        "id": "d5f06e68cee866e3",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "f81820959540402f"
            ]
        ]
    },
    {
        "id": "033a221bb0eefdb4",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 120,
        "wires": [
            [
                "eae20c69449928b0"
            ]
        ]
    },
    {
        "id": "f81820959540402f",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "func": "msg.token = 'BggmSwVip2mh1PUc9sQusUjS8aUlnwZJQpA2Cs8M3yl';\nmsg.message = 'Hello';\nmsg.stickerPackageId = 1;\nmsg.stickerId  = 106;\n\nmsg.headers = {\n    'content-type' : 'application/x-www-form-urlencoded',\n    'Authorization' : 'Bearer ' + msg.token\n};\n\nmsg.payload = {\n    'message' : msg.message,\n    'stickerPackageId' : msg.stickerPackageId,\n    'stickerId' : msg.stickerId\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 120,
        "wires": [
            [
                "033a221bb0eefdb4"
            ]
        ]
    },
    {
        "id": "eae20c69449928b0",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "47c93b776b14fab5",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "68c486f4c4ae81ea",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "b62bdd1d41aa81e7"
            ]
        ]
    },
    {
        "id": "37c0a6341eadea20",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "func": "msg.method = 'GET';\nmsg.token = 'pS_6QRMqEurX8e-GNbCagzWepxuFDlBO';\nmsg.dataStreamId = 'v0';\nmsg.value = msg.payload;\n\nmsg.url = 'https://blynk.cloud/external/api/update?token=' + msg.token +\n'&' + msg.dataStreamId + '=' + msg.value\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 320,
        "wires": [
            [
                "68c486f4c4ae81ea"
            ]
        ]
    },
    {
        "id": "b62bdd1d41aa81e7",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 320,
        "wires": []
    },
    {
        "id": "b0afec616c45c841",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "277528d0a1ec4cf7",
        "name": "Line Notify",
        "info": "Line Notify PUT ",
        "x": 140,
        "y": 80,
        "wires": []
    },
    {
        "id": "b5a2678577ad6b7b",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "Blynk Send",
        "info": "Blynk sending data",
        "x": 150,
        "y": 240,
        "wires": []
    },
    {
        "id": "4560fe03fee04635",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "0d62bfcf840e1635"
            ]
        ]
    },
    {
        "id": "cec1a25574c720ed",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "848eca293cd301df"
            ]
        ]
    },
    {
        "id": "0d62bfcf840e1635",
        "type": "function",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "func": "msg.method = 'GET';\nmsg.token = 'pS_6QRMqEurX8e-GNbCagzWepxuFDlBO';\nmsg.dataStreamId = 'v0';\n\nmsg.url = 'https://blynk.cloud/external/api/get?token=' + msg.token +\n'&' + msg.dataStreamId\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 400,
        "wires": [
            [
                "cec1a25574c720ed"
            ]
        ]
    },
    {
        "id": "848eca293cd301df",
        "type": "debug",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "0e301823526a8365",
        "type": "comment",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "Blynk Read",
        "info": "Blynk Reading data",
        "x": 150,
        "y": 360,
        "wires": []
    },
    {
        "id": "680fd1af49ef6d20",
        "type": "ui_slider",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "d32b1f89f457317b",
                "37c0a6341eadea20"
            ]
        ]
    },
    {
        "id": "d32b1f89f457317b",
        "type": "ui_gauge",
        "z": "ebe1ddb7db2b1d13",
        "g": "ac9787b46f70e038",
        "name": "",
        "group": "4a01dad1247a7393",
        "order": 4,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 650,
        "y": 240,
        "wires": []
    },
    {
        "id": "463bbfd6868b4ba3",
        "type": "http request",
        "z": "ebe1ddb7db2b1d13",
        "g": "e46a4f3b10c5a3b0",
        "name": "ip cam",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://ipcam/snapshot.cgi?user=[youruser]&pwd=[yourpass]&res=0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 310,
        "y": 600,
        "wires": [
            [
                "1a6f5cf6eea2e6b7",
                "0f785f873aa00133"
            ]
        ]
    },
    {
        "id": "1a6f5cf6eea2e6b7",
        "type": "file",
        "z": "ebe1ddb7db2b1d13",
        "g": "e46a4f3b10c5a3b0",
        "name": "Save image",
        "filename": "/config/www/cctv/frontdoor.jpg",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 490,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "ba904c9849493c1b",
        "type": "template",
        "z": "ebe1ddb7db2b1d13",
        "g": "e46a4f3b10c5a3b0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"1920px\" height=\"1080px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 620,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "8f43f844915dec5d",
        "type": "inject",
        "z": "ebe1ddb7db2b1d13",
        "g": "e46a4f3b10c5a3b0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "463bbfd6868b4ba3"
            ]
        ]
    },
    {
        "id": "0f785f873aa00133",
        "type": "base64",
        "z": "ebe1ddb7db2b1d13",
        "g": "e46a4f3b10c5a3b0",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 480,
        "y": 640,
        "wires": [
            [
                "ba904c9849493c1b"
            ]
        ]
    },
    {
        "id": "bd456e4e.359d8",
        "type": "ui_form",
        "z": "6aef8afcd5766ef8",
        "name": "Dashboard Sign-In",
        "label": "",
        "group": "b82da486.9fc8d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "x": 390,
        "y": 300,
        "wires": [
            [
                "ea809461.f36198",
                "a926c1ff.ede37",
                "6cabb33.95cd54c"
            ]
        ]
    },
    {
        "id": "6603f3ab.d89abc",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "Debug Account Log ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "statusVal": "",
        "statusType": "auto",
        "x": 958.0000915527344,
        "y": 261.00000762939453,
        "wires": []
    },
    {
        "id": "bc6dfbc9.d9d138",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Sign-In Section",
        "info": "",
        "x": 390.00000762939453,
        "y": 242.99999618530273,
        "wires": []
    },
    {
        "id": "ea809461.f36198",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 589.0000076293945,
        "y": 269.99999618530273,
        "wires": [
            [
                "6603f3ab.d89abc"
            ]
        ]
    },
    {
        "id": "a926c1ff.ede37",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Account Verification",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nmsg.payload = 1;\n\naccounts.forEach(function ( account ){\n    if ( account.username == username ) {\n       msg.payload = 2;\n       if ( account.password == password ) {\n           msg.payload = 0;\n       } \n    }\n});\n\nif ( msg.payload == 0 ) {\n  var currentsocketid = flow.get(\"clientid\") || undefined;\n  if ( currentsocketid !== undefined && currentsocketid !== msg.socketid ) msg.payload = 3;\n}\n// keep the original socketid from msg.socketid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 602.0000457763672,
        "y": 315.0000057220459,
        "wires": [
            [
                "88afc196.8abc2"
            ]
        ]
    },
    {
        "id": "88afc196.8abc2",
        "type": "switch",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 771.0000419616699,
        "y": 345.9999885559082,
        "wires": [
            [
                "eefb7b9e.f5daa8"
            ],
            [
                "2f57eca.40fa214"
            ],
            [
                "cc34d440.a91948"
            ],
            [
                "126fd334.ed13ed"
            ]
        ]
    },
    {
        "id": "eefb7b9e.f5daa8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\nflow.set(\"clientid\", msg.socketid);\n/* ui-control payload */\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Another_History\"],\n    hide : [\"Dashboard_Signin\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940.999885559082,
        "y": 301.99999809265137,
        "wires": [
            [
                "5c0b7126.396e8"
            ]
        ]
    },
    {
        "id": "2f57eca.40fa214",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Username Doesn't exist!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 961.9998931884766,
        "y": 339,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "cc34d440.a91948",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Password\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 962.9999618530273,
        "y": 376.0000123977661,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "5c0b7126.396e8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Sensor/History Group",
        "x": 1228.0000686645508,
        "y": 301.9999942779541,
        "wires": [
            []
        ]
    },
    {
        "id": "61e843e4.4d74cc",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 1227.9999732971191,
        "y": 359,
        "wires": [
            []
        ]
    },
    {
        "id": "d60f3dd8.0214b",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 469.5,
        "y": 459.00000762939453,
        "wires": []
    },
    {
        "id": "643a01a8.560ea",
        "type": "inject",
        "z": "6aef8afcd5766ef8",
        "name": "Timer",
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 378.00000762939453,
        "y": 547.9999923706055,
        "wires": [
            [
                "bc828c1d.b3504",
                "f6900b2.d3e9ef8"
            ]
        ]
    },
    {
        "id": "bc828c1d.b3504",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = 15000; //15 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 566.0000381469727,
        "y": 514.0000076293945,
        "wires": [
            [
                "50a18f10.e23c2"
            ]
        ]
    },
    {
        "id": "50a18f10.e23c2",
        "type": "switch",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 736.000072479248,
        "y": 512.0000076293945,
        "wires": [
            [
                "5b39c16e.da2f"
            ],
            [
                "91c7a0ab.ec163"
            ],
            [
                "71d9aa2e.665fd4"
            ]
        ]
    },
    {
        "id": "5b39c16e.da2f",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 891.9999847412109,
        "y": 485.0000114440918,
        "wires": [
            [
                "d29000e.556e5",
                "a3d5d44d.a71ce8"
            ]
        ]
    },
    {
        "id": "d29000e.556e5",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 1079.500114440918,
        "y": 451.0000114440918,
        "wires": [
            []
        ]
    },
    {
        "id": "8859efbd.09b1b",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Signin Group",
        "x": 1286.5000324249268,
        "y": 486.99999618530273,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d5d44d.a71ce8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Sign-In Redirection",
        "func": "var msg = {};\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \n            \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\n\nflow.set(\"clientid\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1090.0000228881836,
        "y": 488.00000762939453,
        "wires": [
            [
                "8859efbd.09b1b"
            ]
        ]
    },
    {
        "id": "de95afea.546e3",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 899.7222023010254,
        "y": 601.9999923706055,
        "wires": []
    },
    {
        "id": "4da58462.7ddd1c",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "Sensor Data Collection",
        "info": "",
        "x": 409.00000762939453,
        "y": 644.0000019073486,
        "wires": []
    },
    {
        "id": "937e9201.0a617",
        "type": "inject",
        "z": "6aef8afcd5766ef8",
        "name": "Timer",
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 381.5,
        "y": 721.0000095367432,
        "wires": [
            [
                "ab530393.261bd"
            ]
        ]
    },
    {
        "id": "c4e61034.b5ec2",
        "type": "comment",
        "z": "6aef8afcd5766ef8",
        "name": "MQTT ? CoAP?",
        "info": "Expecting data from the actaul sensors.",
        "x": 556.5000076293945,
        "y": 680.9999942779541,
        "wires": []
    },
    {
        "id": "f6900b2.d3e9ef8",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((15000 - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 ) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\n\nmsg.socketid = flow.get(\"clientid\") || \"B1234\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 616.0000305175781,
        "y": 602.0000200271606,
        "wires": [
            [
                "de95afea.546e3"
            ]
        ]
    },
    {
        "id": "6d52854e.4e8d8c",
        "type": "ui_text",
        "z": "6aef8afcd5766ef8",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Label Display",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1280.4999923706055,
        "y": 807.0001277923584,
        "wires": []
    },
    {
        "id": "ab530393.261bd",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Decode MySensor Message",
        "func": "\nvar mySensorsMessage = {}\nvar newPayload = {};\nvar timestamp = new Date();\n\nnewPayload.nodeId  =  3;\nnewPayload.type =  Math.floor( Math.random() * Math.floor(2));  // 0 or 1\nif ( newPayload.type === 0 /* temperature */ ) newPayload.value   =  Math.floor( Math.random() * Math.floor(30)) + 10; // 10 - 39\nelse newPayload.value   =  Math.floor( Math.random() * Math.floor(40)) + 40; // 40 - 79\n\nmsg.payload = newPayload; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 577.5000076293945,
        "y": 722.0000171661377,
        "wires": [
            [
                "1e3effb1.5ff58",
                "d320c244.f24af"
            ]
        ]
    },
    {
        "id": "1e3effb1.5ff58",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Filter : temperature",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 0) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Temperature\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 794.5000534057617,
        "y": 678.0000200271606,
        "wires": [
            [
                "ef7cf0b4.332f5",
                "38045480.64ec1c",
                "328b09bd.9901c6",
                "4381200b.380d3"
            ]
        ]
    },
    {
        "id": "ef7cf0b4.332f5",
        "type": "ui_gauge",
        "z": "6aef8afcd5766ef8",
        "name": "Gauge : Temperature",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature DHT22",
        "label": "MySensors v2",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#66ccff",
            "#ff8000",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1044.5000076293945,
        "y": 663.9999828338623,
        "wires": []
    },
    {
        "id": "d320c244.f24af",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Filter : humidity",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 1) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Humidity\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 780.5001068115234,
        "y": 785.0000591278076,
        "wires": [
            [
                "d4eaedd1.98978",
                "38045480.64ec1c",
                "328b09bd.9901c6"
            ]
        ]
    },
    {
        "id": "d4eaedd1.98978",
        "type": "ui_gauge",
        "z": "6aef8afcd5766ef8",
        "name": "Gauge : Humidity",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Humidity DHT22",
        "label": "MySensors v2",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#1a25ab",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1036.500072479248,
        "y": 701.0000286102295,
        "wires": []
    },
    {
        "id": "38045480.64ec1c",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Attention : temperature & humidity",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"Temperature\":\n        context.data.temperature = msg.payload;\n        msg = null;\n        break;\n    case \"Humidity\":\n        context.data.humidity = msg.payload;\n        msg = null;\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.temperature !== null && context.data.humidity !== null && context.data.temperature !== undefined && context.data.humidity !== undefined) {\n\tmsgOut = \"\"; //new Object();\n    msgOut = \"Temerature : \" \n    msgOut += context.data.temperature.toString(); \n    msgOut+= \"°C - Humidity : \"; \n    msgOut+= context.data.humidity.toString();\n    msgOut+= \"%\";\n    context.data=null;\n    var msg = {};\n    msg.payload = msgOut;\n\treturn msg;\n} \n//else return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040.4999923706055,
        "y": 808.0000877380371,
        "wires": [
            [
                "6d52854e.4e8d8c"
            ]
        ]
    },
    {
        "id": "328b09bd.9901c6",
        "type": "ui_chart",
        "z": "6aef8afcd5766ef8",
        "name": "History : Temperature & Humidity",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": "6",
        "height": "9",
        "label": "Temperature & Humidity",
        "chartType": "line",
        "legend": "true",
        "xformat": "%H:%M",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1087.5000305175781,
        "y": 739.0001049041748,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f6f225f9.0408b8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Stay in Sensor Group",
        "x": 1236.500099182129,
        "y": 526.0000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "91c7a0ab.ec163",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Sensor/History Goup",
        "func": "var msg = {};\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    hide : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 933.5000305175781,
        "y": 526.0000038146973,
        "wires": [
            [
                "f6f225f9.0408b8"
            ]
        ]
    },
    {
        "id": "71d9aa2e.665fd4",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "Signin Goup",
        "func": "var msg = {};\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 904.5000915527344,
        "y": 567.0000419616699,
        "wires": [
            [
                "a2bd5885.a386c8"
            ]
        ]
    },
    {
        "id": "a2bd5885.a386c8",
        "type": "ui_ui_control",
        "z": "6aef8afcd5766ef8",
        "name": "Go to Signin Group",
        "x": 1224.5002479553223,
        "y": 564.0000419616699,
        "wires": [
            []
        ]
    },
    {
        "id": "4381200b.380d3",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1004.0590744018555,
        "y": 774.6424465179443,
        "wires": []
    },
    {
        "id": "6cabb33.95cd54c",
        "type": "debug",
        "z": "6aef8afcd5766ef8",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 571.5000419616699,
        "y": 380.5347557067871,
        "wires": []
    },
    {
        "id": "b960fa16.e7e618",
        "type": "ui_toast",
        "z": "6aef8afcd5766ef8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "System In Use.",
        "name": "System In-Use Dialog",
        "x": 1211.1111793518066,
        "y": 412.1215353012085,
        "wires": [
            []
        ]
    },
    {
        "id": "126fd334.ed13ed",
        "type": "function",
        "z": "6aef8afcd5766ef8",
        "name": "= 4 : System In Use",
        "func": "msg.payload = \"System is used by other user.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 952.4443283081055,
        "y": 413.1215286254883,
        "wires": [
            [
                "b960fa16.e7e618"
            ]
        ]
    },
    {
        "id": "2b9342ed88dc42c1",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "gettime",
                "v": "",
                "vt": "date"
            },
            {
                "p": "name",
                "v": "hello",
                "vt": "str"
            },
            {
                "p": "age",
                "v": "20",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "1fcd128914de16d4"
            ]
        ]
    },
    {
        "id": "1fcd128914de16d4",
        "type": "function",
        "z": "60df1e7dd0acd415",
        "name": "",
        "func": "msg.payload = {\n    'name' : msg.name,\n    'age' : msg.age,\n    'time' : msg.gettime\n};\n\nmsg.path = \"test/\" + msg.gettime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 60,
        "wires": [
            [
                "e2b948f88891f5f5"
            ]
        ]
    },
    {
        "id": "02b763197b46ba4e",
        "type": "debug",
        "z": "60df1e7dd0acd415",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "9871fa3fe6405987",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "1a78fa1435b710d2"
            ]
        ]
    },
    {
        "id": "f4bce6910dcbb386",
        "type": "split",
        "z": "60df1e7dd0acd415",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "3f1aaee559cd31a1"
            ]
        ]
    },
    {
        "id": "c99d5e549e41b01f",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 240,
        "wires": [
            [
                "60e99a8feae6f8cf"
            ]
        ]
    },
    {
        "id": "b41ed08638462f5c",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "d521984ecca02bfe"
            ]
        ]
    },
    {
        "id": "b28299226b0f8d16",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 140,
        "wires": [
            [
                "ada5233f55cb17e4"
            ]
        ]
    },
    {
        "id": "6ad6d39494c3f84a",
        "type": "debug",
        "z": "60df1e7dd0acd415",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 140,
        "wires": []
    },
    {
        "id": "9541920fe202849f",
        "type": "debug",
        "z": "60df1e7dd0acd415",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 540,
        "wires": []
    },
    {
        "id": "e245713da2b58128",
        "type": "debug",
        "z": "60df1e7dd0acd415",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "937e7d2f8b013633",
        "type": "function",
        "z": "60df1e7dd0acd415",
        "name": "",
        "func": "msg.payload = {\n        \"bucket\": \"gs://nutproject0405.appspot.com\", // optional, is otherwise set as node config\n        \"path\": \"demo.jpg\", // optional, see above\n        \"contents\": msg.payload,\n        // \"contentType\": \"image/jpg\" , // optional\n        // \"metadata\": { \"very\":\"interesting\"}, // optional\n        \"public\": true, // optional\n        \"private\": false // optional\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 540,
        "wires": [
            [
                "08c31925cf04490e"
            ]
        ]
    },
    {
        "id": "048a24aeb8b93788",
        "type": "function",
        "z": "60df1e7dd0acd415",
        "name": "",
        "func": "msg.payload = {\n        \"path\" : \"/demo/data4\" \n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "fff95b1a81ead69c"
            ]
        ]
    },
    {
        "id": "ee896f9a7cffba24",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "048a24aeb8b93788"
            ]
        ]
    },
    {
        "id": "c838bfd42e97aa1a",
        "type": "function",
        "z": "60df1e7dd0acd415",
        "name": "",
        "func": "msg.payload = {\n        \"path\" : \"/demo\" ,\n        \"obj\" : {\"name\": \"test123\", \"age\": 17}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 420,
        "wires": [
            [
                "73f766c4f58d9762"
            ]
        ]
    },
    {
        "id": "75316a3e9bd8ceff",
        "type": "inject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 420,
        "wires": [
            [
                "c838bfd42e97aa1a"
            ]
        ]
    },
    {
        "id": "2c2758d2e5825592",
        "type": "debug",
        "z": "60df1e7dd0acd415",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 420,
        "wires": []
    },
    {
        "id": "3f1aaee559cd31a1",
        "type": "base64",
        "z": "60df1e7dd0acd415",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 580,
        "y": 200,
        "wires": [
            [
                "785f6686fe3dc3eb"
            ]
        ]
    },
    {
        "id": "785f6686fe3dc3eb",
        "type": "image",
        "z": "60df1e7dd0acd415",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 740,
        "y": 200,
        "wires": []
    },
    {
        "id": "e46ea6907378f8f4",
        "type": "fileinject",
        "z": "60df1e7dd0acd415",
        "name": "",
        "x": 100,
        "y": 540,
        "wires": [
            [
                "937e7d2f8b013633"
            ]
        ]
    },
    {
        "id": "73f766c4f58d9762",
        "type": "firestore-add",
        "z": "60df1e7dd0acd415",
        "name": "",
        "cred": "0d1e5ee66bbb8d94",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "2c2758d2e5825592"
            ]
        ]
    },
    {
        "id": "fff95b1a81ead69c",
        "type": "firestore-get",
        "z": "60df1e7dd0acd415",
        "name": "",
        "path": "",
        "cred": "0d1e5ee66bbb8d94",
        "x": 450,
        "y": 360,
        "wires": [
            [
                "e245713da2b58128"
            ]
        ]
    },
    {
        "id": "1a78fa1435b710d2",
        "type": "storage-read",
        "z": "60df1e7dd0acd415",
        "name": "",
        "path": "Airplane.jpg",
        "bucket": "nutproject0405.appspot.com",
        "cred": "0d1e5ee66bbb8d94",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "f4bce6910dcbb386"
            ]
        ]
    },
    {
        "id": "60e99a8feae6f8cf",
        "type": "storage-read",
        "z": "60df1e7dd0acd415",
        "name": "",
        "path": "car.jpg",
        "bucket": "nutproject0405.appspot.com",
        "cred": "0d1e5ee66bbb8d94",
        "x": 268,
        "y": 240,
        "wires": [
            [
                "f4bce6910dcbb386"
            ]
        ]
    },
    {
        "id": "d521984ecca02bfe",
        "type": "storage-read",
        "z": "60df1e7dd0acd415",
        "name": "",
        "path": "bike.jpg",
        "bucket": "nutproject0405.appspot.com",
        "cred": "0d1e5ee66bbb8d94",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "f4bce6910dcbb386"
            ]
        ]
    },
    {
        "id": "08c31925cf04490e",
        "type": "storage-write",
        "z": "60df1e7dd0acd415",
        "name": "",
        "path": "",
        "bucket": "",
        "cred": "0d1e5ee66bbb8d94",
        "x": 430,
        "y": 540,
        "wires": [
            [
                "9541920fe202849f"
            ]
        ]
    },
    {
        "id": "ada5233f55cb17e4",
        "type": "storage-list",
        "z": "60df1e7dd0acd415",
        "d": true,
        "name": "",
        "path": "",
        "bucket": "nutproject0405.appspot.com",
        "cred": "0d1e5ee66bbb8d94",
        "delimiter": "/",
        "x": 270,
        "y": 140,
        "wires": [
            [
                "6ad6d39494c3f84a"
            ]
        ]
    },
    {
        "id": "e2b948f88891f5f5",
        "type": "addFirebase",
        "z": "60df1e7dd0acd415",
        "d": true,
        "firebaseCertificate": "c21b98997b5aa92e",
        "client_email": "",
        "private_key": "",
        "data": "",
        "childpath": "path",
        "propertyType": "msg",
        "method": "push",
        "newchildpath": "",
        "x": 490,
        "y": 60,
        "wires": [
            [
                "02b763197b46ba4e"
            ]
        ]
    },
    {
        "id": "90831ff5.70c858",
        "type": "http in",
        "z": "18cf0a2502a0767f",
        "name": "",
        "url": "/networkapi",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 345,
        "y": 200,
        "wires": [
            [
                "9d0f8230.226f88"
            ]
        ],
        "l": false
    },
    {
        "id": "e82032cc.66ced8",
        "type": "http response",
        "z": "18cf0a2502a0767f",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 441,
        "y": 200,
        "wires": [],
        "l": false
    },
    {
        "id": "9d0f8230.226f88",
        "type": "change",
        "z": "18cf0a2502a0767f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "network",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 393,
        "y": 200,
        "wires": [
            [
                "e82032cc.66ced8"
            ]
        ],
        "l": false
    },
    {
        "id": "62016808.314be8",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "m = msg.payload\nglobal.set('network',m)\n\nreturn {payload:global.get('network')}",
        "outputs": 1,
        "noerr": 0,
        "x": 177,
        "y": 200,
        "wires": [
            [
                "b5f63d1d.57a9b8"
            ]
        ],
        "l": false
    },
    {
        "id": "b5f63d1d.57a9b8",
        "type": "debug",
        "z": "18cf0a2502a0767f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 225,
        "y": 200,
        "wires": [],
        "l": false
    },
    {
        "id": "6058a657.1e87d8",
        "type": "change",
        "z": "18cf0a2502a0767f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "network",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "**.ip",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 177,
        "y": 320,
        "wires": [
            [
                "2c92f82c.ae7c3"
            ]
        ],
        "l": false
    },
    {
        "id": "2c92f82c.ae7c3",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "m = msg.payload\n\nfor(x=0;x<m.length;x++){\nnode.send({payload:m[x],ip:m[x]})    \n    \n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 233,
        "y": 320,
        "wires": [
            [
                "36739bd4.08a97c"
            ]
        ],
        "l": false
    },
    {
        "id": "36739bd4.08a97c",
        "type": "exec",
        "z": "18cf0a2502a0767f",
        "command": "ping -c1",
        "addpay": true,
        "append": "| grep -i \"100%\"",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 297,
        "y": 320,
        "wires": [
            [
                "6eb947a3.51da88"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "6eb947a3.51da88",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "n = global.get('network')\nip = msg.ip\nstate = (msg.payload===\"\")?true:false\n\nreturn {network:n,ipaddress:ip,state:state}",
        "outputs": 1,
        "noerr": 0,
        "x": 369,
        "y": 320,
        "wires": [
            [
                "55ea9ebe.c981b"
            ]
        ],
        "l": false
    },
    {
        "id": "55ea9ebe.c981b",
        "type": "change",
        "z": "18cf0a2502a0767f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "network",
                "pt": "global",
                "to": "\t$globalContext('network') ~>| **.properties[$contains(ip,$$.ipaddress)] |{\"reachable\":$boolean($$.state)} |",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 441,
        "y": 320,
        "wires": [
            []
        ],
        "l": false
    },
    {
        "id": "4351f652.050938",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "name": "Update Network Status",
        "info": "",
        "x": 190,
        "y": 272,
        "wires": []
    },
    {
        "id": "88de01e0.6d774",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "name": "Network - JSON API",
        "info": "",
        "x": 420,
        "y": 152,
        "wires": []
    },
    {
        "id": "c32250dd.48ba3",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "name": "Set Topology",
        "info": "",
        "x": 160,
        "y": 152,
        "wires": []
    },
    {
        "id": "51a55089.d0c8e8",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 129,
        "y": 320,
        "wires": [
            [
                "6058a657.1e87d8"
            ]
        ],
        "l": false
    },
    {
        "id": "71c08d4e.d425fc",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "group": "948b2f03.477ee",
        "name": "Template D3 Tree",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n.nr-dashboard-template .ng-scope ._md .visible,.nr-dashboard-theme .ui-card-panel{background:transparent!important}\n\n.device{font-weight:bold}\ncircle {\n\tfill: #090;\n\tstroke: #090;\n\tstroke-width: 1.5px;\n}\ncircle.unreachable {\n\tfill: #f00;\n\tstroke: #f00;\n\tstroke-width: 1.5px;\n}\ncircle.reachable {\n\tfill: #090;\n\tstroke: #090;\n\tstroke-width: 1.5px;\n}\n.node,\ntext {\n\tfont: 12px sans-serif;\n}\n.link {\n\tfill: none;\n\tstroke: #888;\n\tstroke-width: 1px;\n\tstroke-opacity: 1;\n}\n.reachable {\n\tfill: none;\n\tstroke: #090;\n}\n.unreachable {\n\tfill: none;\n\tstroke: #f30;\n}\n\n#chart {\n\twidth: 800px;\n\tmargin: 20px auto;\n\n}\n#chart path{\n    fill:none;\n}\n#info{position:absolute;bottom:8px;}\n#info p{\n    padding:8px;\n    font-size:11px;\n}\n#info a{text-decoration:none;color:#f90}\n.weight{font-weight:bold}\n</style>\n<script type=\"text/javascript\">\nfunction renderNetwork() {\n    $(\"body.nr-dashboard-theme .md-content .md-card,.nr-dashboard-theme .md-content .md-card,.nr-dashboard-theme .ui-card-panel\").css(\"background-color\",\"transparent!important\")\n\tvar w = 600,\n\t\th = 600;\n\n\tvar cluster = d3.layout.cluster().size([h, w - 200]);\n\n\tvar diagonal = d3.svg.diagonal().projection(function (d) {\n\t\treturn [d.y, d.x];\n\t});\n\n\tvar vis = d3\n\t\t.select('#chart')\n\t\t.append('svg:svg')\n\t\t.attr('width', w)\n\t\t.attr('height', h)\n\t\t.append('svg:g')\n\t\t.attr('transform', 'translate(70, 0)');\n\n\td3.json('../networkapi', function (json) {\n\t\tvar nodes = cluster.nodes(json);\n\n\t\tvar link = vis\n\t\t\t.selectAll('path.link')\n\t\t\t.data(cluster.links(nodes))\n\t\t\t.enter()\n\t\t\t.append('svg:path')\n\n\t\t\t.attr('class', 'link')\n\t\t\t.attr('d', diagonal);\n\n\t\tvar node = vis\n\t\t\t.selectAll('g.node')\n\t\t\t.data(nodes)\n\t\t\t.enter()\n\t\t\t.append('svg:g')\n\n\t\t\t.attr('transform', function (d) {\n\t\t\t\treturn 'translate(' + d.y + ',' + d.x + ')';\n\t\t\t});\n\n\t\tnode.append('svg:circle').attr('r', 4.5);\n\t\n\t\tnode.append('svg:text')\n\t\t\t.attr('dx', function (d) {\n\t\t\t\treturn d.children ? -8 : 8;\n\t\t\t})\n\n\t\t\t.attr('dy', 3)\n\t\t\t.attr('text-anchor', function (d) {\n\t\t\t\treturn d.children ? 'end' : 'start';\n\t\t\t})\n\t\t\t.attr('stroke-opacity', 0)\n\t\t\t.attr('fill', '#fff')\n\t\t\t.text(function (d) {\n\t\t\t\treturn d.name;\n\t\t\t})\n\t\t\t.attr('cursor', 'pointer')\n\t\t\t.on('mouseover', mouseover)\n\t\t\t.on('mouseout', mouseout)\n\t\t\t.on('click', info);\n\n\t\tvis.selectAll('circle')\n\t\t\t.filter(function (d) {\n\t\t\t\t//console.log(d.properties.reachable);\n\t\t\t\treturn d;\n\t\t\t})\n\t\t\t.attr('class', function (d, i) {\n\t\t\t//\tconsole.log(d, i);\n\t\t\t\tif (d.properties.reachable) {\n\t\t\t\t\treturn ' reachable';\n\t\t\t\t} else {\n\t\t\t\t\treturn ' unreachable';\n\t\t\t\t}\n\t\t\t});\n\t});\n}\n\nfunction updateNetwork() {\n    console.log('update')\n\td3.select('#chart svg').remove();\n\n\trenderNetwork();\n}\nfunction mouseover(d, i) {\n\td3.select(this).attr({\n\t\tfill: 'orange',\n\t});\n}\nfunction mouseout(d, i) {\n\td3.select(this).attr({\n\t\tfill: '#fff',\n\t});\n}\nfunction info(d, i) {\n    if(d.properties.type===\"ping\"){\n        $('#info').html(\"<p>Pinging...</p>\") \n    }\n    else{\n        $('#info').html(\"<p>Loading...</p>\")\n    }\n\n\tsc.send({payload:{name:d.name,ip:d.properties.ip,type:d.properties.type}});\n}\nrenderNetwork()\n\nvar sc = scope;\n\nint = setInterval(function(){\n    updateNetwork()\n},30000)\n</script>\n<script>\n(function(scope) {\n  scope.$watch('msg', function(msg) {\n    if (msg.update) {\n      // Do something when msg arrives\n      updateNetwork()\n     // $(\"#my_\"+scope.$id).html(msg.payload);\n    }\n    if (msg.info){\n        $(\"#info\").hide().html(\"\").html(msg.info).fadeIn()\n    }\n  });\n})(scope);\n</script>\n<div id=\"chart\"></div>\n<div id=\"info\"></div>\n    \n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 420,
        "wires": [
            [
                "3ad6a50b.144c0a"
            ]
        ]
    },
    {
        "id": "ebb36c06.8fb5a",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "name": "Render Network Map",
        "info": "",
        "x": 190,
        "y": 392,
        "wires": []
    },
    {
        "id": "41f7dc80.724e64",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 129,
        "y": 464,
        "wires": [
            [
                "afb1db1b.fa126"
            ]
        ],
        "l": false
    },
    {
        "id": "fc9ae982.d0555",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "return {update:true}",
        "outputs": 1,
        "noerr": 0,
        "x": 225,
        "y": 464,
        "wires": [
            [
                "71c08d4e.d425fc"
            ]
        ],
        "l": false
    },
    {
        "id": "3ad6a50b.144c0a",
        "type": "switch",
        "z": "18cf0a2502a0767f",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "tasmota",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ping",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 425,
        "y": 500,
        "wires": [
            [
                "cd498e21.cfd81"
            ],
            [
                "43c44754.63804"
            ]
        ],
        "l": false
    },
    {
        "id": "cd498e21.cfd81",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "u = \"http://\"\nm = msg.payload\n\nurl = \"http://\"+m.ip+\"/cm?cmnd=status%200\"\n\n\nreturn {url:url,node:m.name,ip:m.ip}",
        "outputs": 1,
        "noerr": 0,
        "x": 473,
        "y": 476,
        "wires": [
            [
                "a6b24bf8.904898"
            ]
        ],
        "l": false
    },
    {
        "id": "a6b24bf8.904898",
        "type": "http request",
        "z": "18cf0a2502a0767f",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": false,
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 521,
        "y": 476,
        "wires": [
            [
                "db490bc9.521ca8"
            ]
        ],
        "l": false
    },
    {
        "id": "db490bc9.521ca8",
        "type": "template",
        "z": "18cf0a2502a0767f",
        "name": "Tasmota",
        "field": "info",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>\n<span class='weight'>{{node}}</span><br/>\n<span class='weight'>IP</span> <a href=\"http://{{ip}}\" target=\"_blank\">{{ip}}</a>\n<span class='weight'>Uptime</span> {{payload.StatusSTS.Uptime}} \n<span class='weight'>Version</span> {{payload.StatusFWR.Version}} \n<span class='weight'>SSId</span> {{payload.StatusSTS.Wifi.SSId}} \n<span class='weight'>RSSI</span> {{payload.StatusSTS.Wifi.RSSI}} \n</p>",
        "output": "str",
        "x": 614,
        "y": 476,
        "wires": [
            [
                "4d477f4c.f0314"
            ]
        ]
    },
    {
        "id": "4d477f4c.f0314",
        "type": "link out",
        "z": "18cf0a2502a0767f",
        "name": "tasmota template out",
        "links": [
            "46559f3.46bf56"
        ],
        "x": 737,
        "y": 500,
        "wires": []
    },
    {
        "id": "46559f3.46bf56",
        "type": "link in",
        "z": "18cf0a2502a0767f",
        "name": "",
        "links": [
            "4d477f4c.f0314"
        ],
        "x": 255,
        "y": 560,
        "wires": [
            [
                "71c08d4e.d425fc"
            ]
        ]
    },
    {
        "id": "43c44754.63804",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "m = msg.payload\ncmd = \"ping -c4 \"+msg.payload.ip +\" | tail -n2\"\n\nreturn {payload:cmd,node:m.name,ip:m.ip}",
        "outputs": 1,
        "noerr": 0,
        "x": 473,
        "y": 524,
        "wires": [
            [
                "6ba88c05.e45f14"
            ]
        ],
        "l": false
    },
    {
        "id": "6ba88c05.e45f14",
        "type": "exec",
        "z": "18cf0a2502a0767f",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 521,
        "y": 524,
        "wires": [
            [
                "a9061c41.5ef538"
            ],
            [],
            []
        ],
        "l": false
    },
    {
        "id": "a9061c41.5ef538",
        "type": "template",
        "z": "18cf0a2502a0767f",
        "name": "Ping",
        "field": "info",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>\n<span class='weight'>{{node}} ({{ip}})</span><br/>\n{{payload}}\n</p>",
        "output": "str",
        "x": 604,
        "y": 524,
        "wires": [
            [
                "4d477f4c.f0314"
            ]
        ]
    },
    {
        "id": "84782896.673eb8",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "name": "Help - see Info tab",
        "info": "### Set Topology in inject node\n\nFormat the network topology as (can have as many depths/connections as you like):\n\n```\n{\n  \"name\": \"Internet\",\n  \"properties\": {\n    \"type\": \"ping\",\n    \"reachable\": false,\n    \"ip\": \"google.com\"\n  },\n  \"children\": [\n    {\n      \"name\": \"Internet Router\",\n      \"properties\": {\n        \"type\": \"ping\",\n        \"reachable\": false,\n        \"ip\": \"192.168.1.1\"\n      },\n      \"children\": [\n        {\n          \"name\": \"Switch 1\",\n          \"properties\": {\n            \"type\": \"ping\",\n            \"reachable\": false,\n            \"ip\": \"192.168.1.10\"\n          },\n          \"children\": [\n            {\n              \"name\": \"Switch 2\",\n              \"properties\": {\n                \"type\": \"ping\",\n                \"reachable\": false,\n                \"ip\": \"192.168.1.20\"\n              },\n              \"children\": [\n                {\n                  \"name\": \"Computer 1\",\n                  \"properties\": {\n                    \"type\": \"ping\",\n                    \"reachable\": false,\n                    \"ip\": \"192.168.1.100\"\n                  }\n                },\n                {\n                  \"name\": \"Computer 2\",\n                  \"properties\": {\n                    \"type\": \"ping\",\n                    \"reachable\": false,\n                    \"ip\": \"192.168.1.101\"\n                  }\n                }\n              ]\n            },\n            {\n              \"name\": \"Hue Bridge\",\n              \"properties\": {\n                \"type\": \"ping\",\n                \"ip\": \"192.168.1.30\",\n                \"reachable\": false\n              }\n            },\n            {\n              \"name\": \"TV\",\n              \"properties\": {\n                \"type\": \"ping\",\n                \"ip\": \"192.168.1.40\",\n                \"reachable\": false\n              }\n            },\n            {\n              \"name\": \"NAS\",\n              \"properties\": {\n                \"type\": \"ping\",\n                \"reachable\": false,\n                \"ip\": \"192.168.1.200\"\n              }\n            }\n          ]\n        },\n        {\n          \"name\": \"Access Point\",\n          \"properties\": {\n            \"type\": \"ping\",\n            \"reachable\": false,\n            \"ip\": \"192.168.1.50\"\n          },\n          \"children\": [\n            {\n              \"name\": \"Wireless device 1\",\n              \"properties\": {\n                \"type\": \"tasmota\",\n                \"ip\": \"192.168.1.61\",\n                \"reachable\": false\n              }\n            },\n            {\n              \"name\": \"Wireless device 2\",\n              \"properties\": {\n                \"type\": \"tasmota\",\n                \"ip\": \"192.168.1.63\",\n                \"reachable\": false\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n### Types\n\nThe flow currently has 2 types of information that can be displayed when a node is clicked in the network map:\n\n- ping\n- tasmota\n\nWith \"ping\" it will try to ping and display the rtt/packet loss\n\nWith \"tasmota\" it will use a http request node to execute the `status 0` and return the ssid/version/rssi. You can click the ip address to open the tasmota ui in a new tab\n\nTemplate nodes are used to format the output per type.\n\nThe switch node can be used to add/remove others\n\n#### Detail\n\nIt creates a web location: /networkapi that shows the topology and is read by the network map in the ui-template node\n\nThe map is refreshed every 30 seconds, can be changed in the ui-template node",
        "x": 180,
        "y": 80,
        "wires": []
    },
    {
        "id": "29604fa0.ef3b98",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"Internet\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"google.com\"},\"children\":[{\"name\":\"Internet Router\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.1\"},\"children\":[{\"name\":\"Switch 1\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.10\"},\"children\":[{\"name\":\"Switch 2\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.20\"},\"children\":[{\"name\":\"Computer 1\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.100\"}},{\"name\":\"Computer 2\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.101\"}}]},{\"name\":\"Hue Bridge\",\"properties\":{\"type\":\"ping\",\"ip\":\"192.168.10.30\",\"reachable\":false}},{\"name\":\"TV\",\"properties\":{\"type\":\"ping\",\"ip\":\"192.168.10.40\",\"reachable\":false}},{\"name\":\"NAS\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.200\"}}]},{\"name\":\"Access Point\",\"properties\":{\"type\":\"ping\",\"reachable\":false,\"ip\":\"192.168.10.50\"},\"children\":[{\"name\":\"Wireless device 1\",\"properties\":{\"type\":\"tasmota\",\"ip\":\"192.168.10.61\",\"reachable\":false}},{\"name\":\"Wireless device 2\",\"properties\":{\"type\":\"tasmota\",\"ip\":\"192.168.10.167\",\"reachable\":false}}]}]}]}",
        "payloadType": "json",
        "x": 129,
        "y": 200,
        "wires": [
            [
                "62016808.314be8"
            ]
        ],
        "l": false
    },
    {
        "id": "afb1db1b.fa126",
        "type": "delay",
        "z": "18cf0a2502a0767f",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 177,
        "y": 464,
        "wires": [
            [
                "fc9ae982.d0555"
            ]
        ],
        "l": false
    },
    {
        "id": "6a3a5c413b35a622",
        "type": "debug",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1180,
        "wires": []
    },
    {
        "id": "dcb7c22fecb8e27b",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "2a75fd0ee5f07d3a",
        "type": "debug",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1300,
        "wires": []
    },
    {
        "id": "ff4c7e0e0fae3b54",
        "type": "debug",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 1340,
        "wires": []
    },
    {
        "id": "552f429eada488c6",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "group": "090902c8070ee93a",
        "name": "Display image",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<img width=\"250\" height=\"60\" alt=\"ONVIF test\" src=\"{{msg.payload.uri}}\" />\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "3d812135315fcfda",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 800,
        "wires": [
            [
                "a7905ff730c7d804"
            ]
        ]
    },
    {
        "id": "3a7791e0636f0d13",
        "type": "exec",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "command": "ffmpeg -y -i rtsp://admin:admin@192.168.43.1:8080/h264_pcm.sdp -vframes 1 -f image2pipe -vcodec png -",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Grab a frame->stdout",
        "x": 626.4999923706055,
        "y": 758.25,
        "wires": [
            [
                "542d379357d778ac"
            ],
            [],
            []
        ]
    },
    {
        "id": "d60bf0bc3d360ebd",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Statistics",
        "func": "var now = new Date();\nvar stat = context.get(\"stat\");\nif (stat===undefined) {\n    // Initialize the object in case NR restart\n    stat = { \"count\": 0, \"success\": 0, \"rate\": 0.0, \"last\": now};\n}\nif (msg.topic===\"reset\") {\n    // Reset message was received: reset statistics\n    stat = { \"count\": 0, \"success\": 0, \"rate\": 0.0, \"last\": now};\n} else {\n    // Update statistics\n    stat.count++;\n    if (msg.payload.code===0) {\n        stat.success++;\n    }    \n    stat.rate=stat.success/stat.count;\n    stat.last=now;\n}\n\n// Create formatted time\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\nmsg.formattedtime = dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;\nmsg.success = stat.success;\nmsg.rate = Math.floor(stat.rate*100);\n\nnode.status({fill:\"blue\",shape:\"ring\",text:\"Frames: \"+msg.success+\" | \"+msg.rate+\"% | Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});\n\n\n// Saving data in the context\ncontext.set(\"stat\",stat);\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 807.9999847412109,
        "y": 950.25,
        "wires": [
            [
                "8c46cd3b40e2a4a9",
                "23f04dcae8eea7e3",
                "385e61f224bbd94c"
            ]
        ]
    },
    {
        "id": "5762d6bf670daf3a",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Reset stat",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "reset",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "reset",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 940,
        "wires": [
            [
                "769df23c39db701f"
            ]
        ]
    },
    {
        "id": "8c46cd3b40e2a4a9",
        "type": "ui_text",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "group": "e16e06ca.f38438",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Last time",
        "label": "Last grab",
        "format": "{{msg.formattedtime}}",
        "layout": "row-spread",
        "x": 1009.0000686645508,
        "y": 870.6499919891357,
        "wires": []
    },
    {
        "id": "23f04dcae8eea7e3",
        "type": "ui_text",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "group": "e16e06ca.f38438",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Frame count",
        "label": "Frames grabbed",
        "format": "{{msg.success}}",
        "layout": "row-spread",
        "x": 1018.899974822998,
        "y": 906.4499807357788,
        "wires": []
    },
    {
        "id": "385e61f224bbd94c",
        "type": "ui_text",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "group": "e16e06ca.f38438",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Success rate",
        "label": "Success rate",
        "format": "{{msg.rate}} %",
        "layout": "row-spread",
        "x": 1019.8999481201172,
        "y": 944.4499740600586,
        "wires": []
    },
    {
        "id": "7f427ef699d15657",
        "type": "ui_button",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Refresh",
        "group": "675036dd.603328",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Refresh image",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 200,
        "y": 1000,
        "wires": [
            [
                "841ad28fac446f0b"
            ]
        ]
    },
    {
        "id": "db3237480e489ead",
        "type": "comment",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Frame grabber",
        "info": "This section of the flow is responsible for \ngrabbing a single out of the RTSP feed of the IP\nCamera. It uses avconv to do that which is part\nof the libav-tools for raspberry pi.\n\nThe trigger can be an inject, or a UI button.\nThe statistic node keeps a track of the number of\ngrabbed frames and the success rate (when the\nvideo conversion/grabbing was successful). The \nStatistic node also has a reset input which can \nbe used to periodically reset the stats (e.g.\ndaily, weekly).\n\nI directed the second output of the Exec node to\na file, as the output of the avconv is usually \nquite long and if there are errors you don't\nsee the entire output in the debug window, so in\nthat case just open to output and see what the issue\nis.",
        "x": 188.62501525878906,
        "y": 704.0000076293945,
        "wires": []
    },
    {
        "id": "a7905ff730c7d804",
        "type": "change",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Set filename",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/home/grab.jpg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 378,
        "y": 813,
        "wires": [
            [
                "5282e4187bc4e47b",
                "3a7791e0636f0d13"
            ]
        ]
    },
    {
        "id": "05bc8a86e7a22d32",
        "type": "template",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"200px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 819.9999961853027,
        "y": 817.2500019073486,
        "wires": [
            [
                "844be2ddeda5fce1"
            ]
        ]
    },
    {
        "id": "844be2ddeda5fce1",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "group": "675036dd.603328",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1006,
        "y": 830.7500009536743,
        "wires": [
            []
        ]
    },
    {
        "id": "5282e4187bc4e47b",
        "type": "exec",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "command": "ffmpeg -y -i rtsp://admin:admin@192.168.43.1:8080/h264_pcm.sdp -vframes 1 -qscale:v 2",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Grab a frame -> jpg",
        "x": 617.9999847412109,
        "y": 875.25,
        "wires": [
            [],
            [],
            [
                "d60bf0bc3d360ebd"
            ]
        ]
    },
    {
        "id": "383b93b73359efc0",
        "type": "watch",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "",
        "files": "/home/grab.jpg",
        "recursive": "",
        "x": 670,
        "y": 1060,
        "wires": [
            [
                "d564910136f4e360"
            ]
        ]
    },
    {
        "id": "d564910136f4e360",
        "type": "ui_text",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "group": "675036dd.603328",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "File Size",
        "label": "grab.jpg",
        "format": "{{msg.size}} kb",
        "layout": "row-spread",
        "x": 1020,
        "y": 1060,
        "wires": []
    },
    {
        "id": "841ad28fac446f0b",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Frame grab",
        "func": "var now = new Date();\n// Create formatted time\nvar yyyy = now.getFullYear();\nvar mm = now.getMonth() < 9 ? \"0\" + (now.getMonth() + 1) : (now.getMonth() + 1); // getMonth() is zero-based\nvar dd  = now.getDate() < 10 ? \"0\" + now.getDate() : now.getDate();\nvar hh = now.getHours() < 10 ? \"0\" + now.getHours() : now.getHours();\nvar mmm  = now.getMinutes() < 10 ? \"0\" + now.getMinutes() : now.getMinutes();\nvar ss  = now.getSeconds() < 10 ? \"0\" + now.getSeconds() : now.getSeconds();\n\n// Last update: \"+dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss});\n\n// file path with / at the end\nvar path = \"/home/\";                     // This is the path\nvar filename = \"frame_\"+yyyy+mm+dd+\"-\"+hh+mm+ss+\".jpg\";     // file name\nmsg.payload = path + filename;                              // pass the full path to payload for the exec node to add to the end of the command\nmsg.file = filename;                                        // To be used later to store the information in the DB\nmsg.path = path;                                            // Same as above\nmsg.wwwpath = \"/\";                                          // Same as above\nmsg.topic = \"store\";                                        // Flag to store this image in the DB\nmsg.type = \"timelapse\";                                     // Image type e.g. Front camera, etc.\nmsg.epoch = now.getTime();                                  // Current timestamp\nmsg.formatteddate = dd + \".\" + mm + \".\" + yyyy + \" \" + hh + \":\" + mmm + \":\" + ss;   // Formatted timestamp to be used later\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "5282e4187bc4e47b",
                "3e8b4f5ab89a0259"
            ]
        ]
    },
    {
        "id": "3e8b4f5ab89a0259",
        "type": "ui_text_input",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "",
        "label": "Snapshot",
        "tooltip": "",
        "group": "675036dd.603328",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 1010,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "24e38a85880836da",
        "type": "ui_button",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Reset",
        "group": "e16e06ca.f38438",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 190,
        "y": 900,
        "wires": [
            [
                "769df23c39db701f"
            ]
        ]
    },
    {
        "id": "769df23c39db701f",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "Reset",
        "func": "msg.topic = 'reset';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 960,
        "wires": [
            [
                "d60bf0bc3d360ebd"
            ]
        ]
    },
    {
        "id": "0f0a08adc9ae2ecd",
        "type": "file",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "filename": "/home/grab.jpg",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "base64",
        "x": 920,
        "y": 1200,
        "wires": [
            [
                "48303accaec7e0e5"
            ]
        ]
    },
    {
        "id": "e3858202505b7e4d",
        "type": "ui_button",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "group": "090902c8070ee93a",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 1260,
        "wires": [
            [
                "552f429eada488c6"
            ]
        ]
    },
    {
        "id": "447840385a6e1031",
        "type": "http request",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.43.1:8080/shot.jpg",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 1260,
        "wires": [
            [
                "dd232266898bae01",
                "4cee2e1bc9cd5ed5"
            ]
        ]
    },
    {
        "id": "dd5a9dd757ca0179",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "48303accaec7e0e5",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "",
        "func": "msg.token = 'BggmSwVip2mh1PUc9sQusUjS8aUlnwZJQpA2Cs8M3yl';\nmsg.message = 'Hello';\nmsg.stickerPackageId = 1;\nmsg.stickerId  = 106;\nmsg.imgfile = 'http://192.168.43.1:8080/shot.jpg'\n\nmsg.headers = {\n    'content-type' : 'application/x-www-form-urlencoded',\n    'Authorization' : 'Bearer ' + msg.token\n};\n\nmsg.payload = {\n    'message' : msg.message,\n    'stickerPackageId' : msg.stickerPackageId,\n    'stickerId' : msg.stickerId\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1260,
        "wires": [
            [
                "99f5aef13e7afbd4"
            ]
        ]
    },
    {
        "id": "99f5aef13e7afbd4",
        "type": "http request",
        "z": "18cf0a2502a0767f",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://notify-api.line.me/api/notify",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 930,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "542d379357d778ac",
        "type": "base64",
        "z": "18cf0a2502a0767f",
        "g": "0f29eb000b8bbd5d",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 840,
        "y": 740,
        "wires": [
            [
                "05bc8a86e7a22d32"
            ]
        ]
    },
    {
        "id": "dd232266898bae01",
        "type": "base64",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 760,
        "y": 1200,
        "wires": [
            [
                "0f0a08adc9ae2ecd"
            ]
        ]
    },
    {
        "id": "4cee2e1bc9cd5ed5",
        "type": "image",
        "z": "18cf0a2502a0767f",
        "d": true,
        "g": "2fd2bb164f28a9eb",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": true,
        "pass": false,
        "outputs": 0,
        "x": 780,
        "y": 1340,
        "wires": []
    },
    {
        "id": "3d6e7792728aad00",
        "type": "function",
        "z": "18cf0a2502a0767f",
        "name": "function 1",
        "func": "msg.payload = [\n    {\n        \"Name\": \"Kazuhito Yokoi\",\n        \"Age\": \"35\",\n        \"Favourite Color\": \"red\",\n        \"Date Of Birth\": \"12/09/1983\"\n    },\n    {\n        \"Name\": \"Oli Bob\",\n        \"Age\": \"12\",\n        \"Favourite Color\": \"cyan\",\n        \"Date Of Birth\": \"12/08/2017\"\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 300,
        "wires": [
            [
                "347845dd7d206075"
            ]
        ]
    },
    {
        "id": "3f120fa485284429",
        "type": "inject",
        "z": "18cf0a2502a0767f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "3d6e7792728aad00"
            ]
        ]
    },
    {
        "id": "347845dd7d206075",
        "type": "ui_table",
        "z": "18cf0a2502a0767f",
        "group": "c5462480faa4316e",
        "name": "",
        "order": 1,
        "width": 10,
        "height": 3,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1570,
        "y": 260,
        "wires": []
    },
    {
        "id": "b97bc1c0.cb899",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "group": "c982fbb8.1deb38",
        "name": "Clock Toolbar",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "global",
        "x": 960,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "718cfd195b411ba8",
        "type": "ui_switch",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "name": "",
        "label": "LIGHT",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-lightbulb-o fa-3x",
        "oncolor": "yellow",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-lightbulb-o fa-3x",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 930,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ef81b0f02ba7b98d",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "group": "4a01dad1247a7393",
        "name": "But1",
        "order": 1,
        "width": 2,
        "height": 1,
        "format": "<md-button\n    class=\"md-cornered\"\n    style=\"background-color : red\"\n    ng-click=\"({payload : 'hello'})\">\n    Enter\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 360,
        "wires": [
            [
                "ee07ae5804356234"
            ]
        ]
    },
    {
        "id": "3cd4308335f3d205",
        "type": "ui_switch",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "name": "",
        "label": "PUMP",
        "tooltip": "",
        "group": "4a01dad1247a7393",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "fa-cog fa-spin fa-3x",
        "oncolor": "skyblue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "fa-cog fa-3x",
        "offcolor": "grey",
        "animate": true,
        "className": "",
        "x": 930,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ee07ae5804356234",
        "type": "debug",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 400,
        "wires": []
    },
    {
        "id": "6382720d6b8f61a1",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "group": "4a01dad1247a7393",
        "name": "But2",
        "order": 2,
        "width": 2,
        "height": 1,
        "format": "<md-button\n    class=\"md-cornered\"\n    style=\"background-color : green\"\n    ng-click=\"({payload : 'hello'})\">\n    Enter\n</md-button>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 420,
        "wires": [
            [
                "ee07ae5804356234"
            ]
        ]
    },
    {
        "id": "85965edc.72971",
        "type": "ui_template",
        "z": "18cf0a2502a0767f",
        "g": "4ad3d049edc39322",
        "group": "2a745e6b.07df92",
        "name": "Dashboard Theme : Modern Dark",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            --background: #212529;\n            --on-background: white;\n            --surface: #2d3136;\n            --surface2: var(--nr-dashboard-widgetColor);\n            --on-surface: white;\n            --primary: var(--nr-dashboard-widgetColor);\n            --on-primary: white;\n            --secondary: var(--nr-dashboard-groupTextColor);\n            --accent: red;\n            --radius-s: 8px;\n            --font-weight-m: 300;\n            --font-weight-m: 500;\n            --font-weight-l: 700;\n            --space-s: 8px;\n            --space-m: 16px;\n            --space-l: 32px;\n        }\n\n        body.nr-dashboard-theme {\n            background-color: var(--background);\n            font-family: 'Montserrat', sans-serif;\n        }\n        .nr-dashboard-theme ui-card-panel {\n            background-color: var(--background);\n            border: 0;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button {\n            background-color: var(--primary);\n            border-radius: var(--radius-s);\n            padding: 8px !important;\n            line-height: inherit;\n            font-weight: var(--font-weight-l);\n            color: var(--on-primary);\n        }\n        .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            white-space: pre-line;\n        }\n        \n        .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n                margin-bottom: 8px;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n            background-color: var(--secondary);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            background-color: var(--surface);\n        }\n        md-card.md-default-theme, md-card {\n            border-radius: var(--radius-s);\n        }\n        .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n            font-weight: var(--font-weight-l) !important;      \n        }\n        .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n            font-weight: var(--font-weight-l);  \n            text-transform: capitalize;\n            color: var(--on-background);\n        }\n        .nr-dashboard-cardpanel > p {\n            margin-left: 0;\n            padding-left: 16px;\n        }\n        body.nr-dashboard-theme md-toolbar {\n            background-color: var(--surface2);\n        }\n        .md-default-theme .md-datepicker-calendar, .md-datepicker-calendar,\n        .md-default-theme .md-calendar, .md-calendar{\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .md-default-theme .md-datepicker-calendar-pane, .md-datepicker-calendar-pane{\n            border: 0;\n        }\n        .md-default-theme .md-calendar-month-label md-icon, .md-calendar-month-label md-icon, .md-default-theme .md-datepicker-input, .md-datepicker-input {\n            color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-numeric .value {\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value, .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n            border-top-color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-sidenav {\n            background-color: var(--background);\n        }\n        md-list-item._md-button-wrap > div.md-button:first-child, md-list-item .md-list-item-inner {\n            background-color: var(--surface);\n        }\n    </style>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1020,
        "y": 160,
        "wires": [
            []
        ],
        "icon": "node-red-dashboard/ui_colour_picker.png",
        "info": "# Modern Dark Theme for node-red-dashboard\n\nInspired by Victor Lucachi with his [Node Red Dashboard Concept](https://dribbble.com/shots/10356530-Node-Red-Dashboard-Concept) on Dribbble. Thank you for your work.\n\n## Customize\n\n1. Go on dashboard customisation tab (At the right of Debug Console).\n2. Select the style `Dark`.\n3. Pick the color you want. Example `#66B5F8`\n\n## Buttons\n\nUse `2x2` size for buttons with icon and text on the screenshot"
    },
    {
        "id": "4fa73dd9.83cca4",
        "type": "comment",
        "z": "952a560b2f318c4a",
        "name": "File Browser",
        "info": "1) Update the default folder in the Init node\n2) Update the default folder in the Reset node as well\n3) You can duplicate the Reset nodes and use them as saved shortcuts\n4) Check the Convert Timestamps function node if you want to see your dates in a different format. I just used the Javascript toISOString format.\n5) The Graph button can read any CSV file which have any number of values, but the first column always contains a timestamp column with javascript timestamp of the data point.",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "d185a45.2327a58",
        "type": "inject",
        "z": "952a560b2f318c4a",
        "name": "Init",
        "props": [
            {
                "p": "payload",
                "v": "/home/pi",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "change",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "/home/pi",
        "payloadType": "str",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "a715f7a4.a398a8",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "eb17c7ee.e61988",
        "type": "ui_dropdown",
        "z": "952a560b2f318c4a",
        "name": "File Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a file",
        "group": "160e81fb.f1c86e",
        "order": 9,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 950,
        "y": 240,
        "wires": [
            [
                "be4830df.5775d"
            ]
        ]
    },
    {
        "id": "dd88bd23.37cde",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a file\n    obj = {};\n    obj [msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 240,
        "wires": [
            [
                "eb17c7ee.e61988"
            ]
        ]
    },
    {
        "id": "638728aa.cd0b08",
        "type": "ui_template",
        "z": "952a560b2f318c4a",
        "group": "160e81fb.f1c86e",
        "name": "",
        "order": 6,
        "width": "18",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\" height=\"400\" style=\"height: 400px;\"><br/>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1140,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "9d27e846.b31db8",
        "type": "template",
        "z": "952a560b2f318c4a",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<table width=\"100%\">\n    <tr><th>File Name</th><th>Size</th><th>Created</th><th>Changed</th></tr>\n    {{#payload}}\n        <tr>\n            <td><a href=\"/download?filename={{name}}\" target=\"blank\">{{fname}}</a></td>\n            <td>{{stat.size}}</td>\n            <td>{{stat.created}}</td>\n            <td>{{stat.changed}}</td>\n        </tr>\n    {{/payload}}\n</table>\n",
        "output": "str",
        "x": 980,
        "y": 300,
        "wires": [
            [
                "638728aa.cd0b08"
            ]
        ]
    },
    {
        "id": "3e094f82.15d6e",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Convert timestamps",
        "func": "for (var i=0; i<msg.payload.length; i++) {\n    msg.payload[i].stat.created = msg.payload[i].stat.created.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.changed = msg.payload[i].stat.changed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.accessed = msg.payload[i].stat.accessed.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].stat.statusChanged = msg.payload[i].stat.statusChanged.toISOString().slice(0, 19).replace('T', ' ');\n    msg.payload[i].fname = msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '');\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 780,
        "y": 300,
        "wires": [
            [
                "9d27e846.b31db8"
            ]
        ]
    },
    {
        "id": "7b7e0d58.05e244",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 10,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "delete",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "8da8147a.999af8"
            ]
        ]
    },
    {
        "id": "7d490dd1.8458b4",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    // and delete the context/selection as we are deleting the file as well\n    flow.set(\"fileselected\");\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 460,
        "wires": [
            [
                "372ee262.fc94de"
            ]
        ]
    },
    {
        "id": "372ee262.fc94de",
        "type": "file",
        "z": "952a560b2f318c4a",
        "name": "Delete file",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "delete",
        "encoding": "none",
        "x": 580,
        "y": 460,
        "wires": [
            [
                "993d7272.843ae"
            ]
        ]
    },
    {
        "id": "aa8c482.93734b8",
        "type": "http in",
        "z": "952a560b2f318c4a",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "d969ba04.e24028"
            ]
        ]
    },
    {
        "id": "d19cc7d8.646328",
        "type": "http response",
        "z": "952a560b2f318c4a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 970,
        "y": 600,
        "wires": []
    },
    {
        "id": "d969ba04.e24028",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Get the file name",
        "func": "msg.filename = msg.req.query.filename;\nmsg.contentdisposition = \"attachment; filename=\\\"\" + msg.req.query.filename.replace(/^.*(\\\\|\\/|\\:)/, '') + \"\\\"\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 600,
        "wires": [
            [
                "e92381c3.c4cd2"
            ]
        ],
        "outputLabels": [
            "Folder selected",
            "File selected"
        ]
    },
    {
        "id": "e92381c3.c4cd2",
        "type": "file in",
        "z": "952a560b2f318c4a",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 620,
        "y": 600,
        "wires": [
            [
                "99ff4953.d0d5c8"
            ]
        ]
    },
    {
        "id": "99ff4953.d0d5c8",
        "type": "change",
        "z": "952a560b2f318c4a",
        "name": "Set Headers",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "text/csv",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Content-Disposition",
                "pt": "msg",
                "to": "contentdisposition",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 600,
        "wires": [
            [
                "d19cc7d8.646328"
            ]
        ]
    },
    {
        "id": "2519dd0d.54d6b2",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 11,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Graph",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "show_chart",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "30f41c01.358a54"
            ]
        ]
    },
    {
        "id": "30f41c01.358a54",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Get filename",
        "func": "// Get the filename from the flow context\nlet filename = flow.get(\"fileselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (filename===undefined) {\n    return;\n}\n\n// return the filename to the file-in node to delete\nmsg.filename = filename;\n\nif (msg.filename.replace(/^.*(\\\\|\\/|\\:)/, '')[0]!==\".\") {\n    // Only do this if this is a file, we don't delete folders\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 720,
        "wires": [
            [
                "4f4072b6.0c320c"
            ]
        ]
    },
    {
        "id": "4f4072b6.0c320c",
        "type": "file in",
        "z": "952a560b2f318c4a",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 480,
        "y": 720,
        "wires": [
            [
                "4d254665.d508e8"
            ]
        ]
    },
    {
        "id": "4d254665.d508e8",
        "type": "csv",
        "z": "952a560b2f318c4a",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "x": 630,
        "y": 720,
        "wires": [
            [
                "7dcec769.580718"
            ]
        ]
    },
    {
        "id": "84810f0e.43f4e",
        "type": "debug",
        "z": "952a560b2f318c4a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 680,
        "wires": []
    },
    {
        "id": "7dcec769.580718",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Format data for chart",
        "func": "var chart = [{\n    \"series\":[],\n    \"data\":[],\n    \"labels\":[msg.filename]\n}];\n\n\n/*\nvar pressure = [];\nvar out2 = [];\n\nfor (var i=0; i<msg.payload.length; i++) {\n    pressure.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].pressure});\n    out2.push({\"x\":msg.payload[i].timestamp, \"y\":msg.payload[i].out2*200});\n\n}\nchart[0].data.push(pressure);\nchart[0].data.push(out2);\n*/\n\nlet columns = 0;\n\nfor(var series in msg.payload[0]) {\n    if(series!==\"timestamp\") {\n        chart[0].series.push(series);\n        chart[0].data.push([]);\n        columns++;\n    }\n}\n\n\nfor (var j=0; j<msg.payload.length; j++) {\n   for(var i=0;i<columns;i++) {\n       chart[0].data[i].push({\"x\":msg.payload[j].timestamp, \"y\":msg.payload[j][chart[0].series[i]]});\n   } \n}\n\n\n\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 840,
        "y": 720,
        "wires": [
            [
                "5022cb53.8adc44",
                "84810f0e.43f4e"
            ]
        ]
    },
    {
        "id": "5022cb53.8adc44",
        "type": "ui_chart",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 12,
        "width": "18",
        "height": "6",
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "x": 1040,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "554f0095.ac1b2",
        "type": "ui_toast",
        "z": "952a560b2f318c4a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "No",
        "raw": false,
        "topic": "",
        "name": "Confirmation",
        "x": 550,
        "y": 400,
        "wires": [
            [
                "24df84fe.ebf45c"
            ]
        ]
    },
    {
        "id": "8da8147a.999af8",
        "type": "change",
        "z": "952a560b2f318c4a",
        "name": "Set message",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Delete confirmation",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Are you sure you want to delete this file?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "554f0095.ac1b2"
            ]
        ]
    },
    {
        "id": "24df84fe.ebf45c",
        "type": "switch",
        "z": "952a560b2f318c4a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Yes",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 400,
        "wires": [
            [
                "7d490dd1.8458b4"
            ]
        ]
    },
    {
        "id": "3d4e5e51.bdf952",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Folder handling",
        "func": "let folder = context.get(\"folder\");\nif (folder===undefined) {\n    folder=\"/\";\n    context.set(\"folder\", folder);\n}\n\nlet hidden = context.get(\"hidden\");\nif (hidden===undefined) {\n    hidden=false;\n    context.set(\"hidden\", hidden);\n}\n\nif (msg.topic===\"up\") {\n    var the_arr = folder.split('/');\n    the_arr.pop();\n    folder=the_arr.join('/'); \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"change\") {\n    folder=msg.payload;    \n    context.set(\"folder\", folder);\n}\nif (msg.topic===\"hidden\") {\n    hidden=msg.payload;    \n    context.set(\"hidden\", hidden);\n}\n\nmsg.payload = {\"start\":folder, \"hidden\": hidden};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "993d7272.843ae",
                "399ac341.7d43bc"
            ]
        ]
    },
    {
        "id": "399ac341.7d43bc",
        "type": "ui_text",
        "z": "952a560b2f318c4a",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": "9",
        "height": "1",
        "name": "",
        "label": "Folder:",
        "format": "{{msg.payload.start}}",
        "layout": "row-left",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "b40ea1d8.c700a",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "arrow_upwards",
        "payload": "",
        "payloadType": "str",
        "topic": "up",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "80940e39.5035b",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 8,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Open",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "folder_open",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "8c1dfaac.979588"
            ]
        ]
    },
    {
        "id": "8c1dfaac.979588",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Change folder",
        "func": "// Get the filename from the flow context\nlet folderselected = flow.get(\"folderselected\");\n\n// check, if the filename is undefined that means it does not exist yet, nothing is selected yet\n// return: do not output anything\nif (folderselected===undefined) {\n    return;\n}\n\nmsg.topic = \"change\";\nmsg.payload = folderselected;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "58414ec4.c716e",
        "type": "ui_button",
        "z": "952a560b2f318c4a",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "autorenew",
        "payload": "/home/pi",
        "payloadType": "str",
        "topic": "change",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "37485c24.212054",
        "type": "ui_dropdown",
        "z": "952a560b2f318c4a",
        "name": "Folder Selector",
        "label": "",
        "tooltip": "",
        "place": "Select a folder",
        "group": "160e81fb.f1c86e",
        "order": 7,
        "width": "5",
        "height": "1",
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 960,
        "y": 340,
        "wires": [
            [
                "2875c79f.531558"
            ]
        ]
    },
    {
        "id": "ebc234be.d53fe8",
        "type": "function",
        "z": "952a560b2f318c4a",
        "name": "Format data",
        "func": "// format the data for the dropdown\nmsg.options = [];\nfor (var i=0; i<msg.payload.length; i++) {\n    // This is a foler\n    obj = {};\n    obj [\"[\"+msg.payload[i].name.replace(/^.*(\\\\|\\/|\\:)/, '')+\"]\"]=msg.payload[i].name;\n    msg.options.push(obj);\n}\nmsg.payload={};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "37485c24.212054"
            ]
        ]
    },
    {
        "id": "be4830df.5775d",
        "type": "change",
        "z": "952a560b2f318c4a",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "fileselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2875c79f.531558",
        "type": "change",
        "z": "952a560b2f318c4a",
        "name": "Save selection",
        "rules": [
            {
                "t": "set",
                "p": "folderselected",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "928e60a7.994be",
        "type": "ui_switch",
        "z": "952a560b2f318c4a",
        "name": "",
        "label": "Hidden",
        "tooltip": "Show hidden files or not",
        "group": "160e81fb.f1c86e",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "decouple": "false",
        "topic": "hidden",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check_box",
        "oncolor": "#000000",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "check_box_outline_blank",
        "offcolor": "#000000",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "3d4e5e51.bdf952"
            ]
        ]
    },
    {
        "id": "993d7272.843ae",
        "type": "fs-file-lister",
        "z": "952a560b2f318c4a",
        "name": "Files",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 550,
        "y": 240,
        "wires": [
            [
                "dd88bd23.37cde",
                "3e094f82.15d6e"
            ]
        ]
    },
    {
        "id": "5219875b.c070d8",
        "type": "fs-file-lister",
        "z": "952a560b2f318c4a",
        "name": "Folders",
        "start": "/home/pi",
        "pattern": "*.*",
        "folders": "*",
        "hidden": false,
        "lstype": "directories",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": true,
        "showWarnings": false,
        "x": 560,
        "y": 340,
        "wires": [
            [
                "ebc234be.d53fe8"
            ]
        ]
    },
    {
        "id": "9ef0675bff6979ef",
        "type": "mqtt in",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "topic": "data",
        "qos": "0",
        "datatype": "json",
        "broker": "62af3d522a4f79d4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 160,
        "wires": [
            [
                "da395093290e3bc9"
            ]
        ]
    },
    {
        "id": "da395093290e3bc9",
        "type": "function",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "function 2",
        "func": "var alldata = msg.payload;\nlet data1 = {payload: alldata.Temp1};\nlet data2 = {payload: alldata.Temp2};\nlet data3 = {payload: alldata.Temp3};\n\nreturn [data1,data2,data3];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "899f972e4e8ac40f",
                "3b393e4b1a308f0e"
            ],
            [
                "e9cc259e8b48c806",
                "ee3f18d8520718a7"
            ],
            [
                "454265c6821bc0f7",
                "01ccd2ea9cc5b2b9"
            ]
        ]
    },
    {
        "id": "899f972e4e8ac40f",
        "type": "ui_gauge",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 5,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temp1",
        "label": "units",
        "format": "{{value}}",
        "min": "10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "e9cc259e8b48c806",
        "type": "ui_gauge",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 7,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temp2",
        "label": "units",
        "format": "{{value}}",
        "min": "10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "454265c6821bc0f7",
        "type": "ui_gauge",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 9,
        "width": 4,
        "height": 3,
        "gtype": "gage",
        "title": "Temp3",
        "label": "units",
        "format": "{{value}}",
        "min": "10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "3b393e4b1a308f0e",
        "type": "ui_chart",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 6,
        "width": 9,
        "height": 3,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 610,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "ee3f18d8520718a7",
        "type": "ui_chart",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 8,
        "width": 9,
        "height": 3,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "01ccd2ea9cc5b2b9",
        "type": "ui_chart",
        "z": "10938d45dccd01ac",
        "d": true,
        "name": "",
        "group": "c5462480faa4316e",
        "order": 10,
        "width": 9,
        "height": 3,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 630,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "15237651.20281a",
        "type": "debug",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 770,
        "y": 540,
        "wires": []
    },
    {
        "id": "84df0cd4.58462",
        "type": "inject",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Select",
        "props": [
            {
                "p": "payload",
                "v": "SELECT TOP (1) [Topic]       ,[Payload]   FROM [Dev].[dbo].[MQTTData]",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "SELECT TOP (1) [Topic]       ,[Payload]   FROM [Dev].[dbo].[MQTTData]",
        "payloadType": "str",
        "x": 171.00000381469727,
        "y": 473.99999809265137,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "ca03c5dc.709628",
        "type": "inject",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Insert",
        "props": [
            {
                "p": "payload",
                "v": "INSERT INTO [Dev].[dbo].[MQTTData] (Topic, Payload) VALUES ('Cardinal', 'Tom B. Erichsen' )",
                "vt": "str"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "INSERT INTO [Dev].[dbo].[MQTTData] (Topic, Payload) VALUES ('Cardinal', 'Tom B. Erichsen' )",
        "payloadType": "str",
        "x": 173,
        "y": 525,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "57a3215a.12b8d",
        "type": "inject",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Update",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 576,
        "wires": [
            [
                "fc1afd38.1ad0f"
            ]
        ]
    },
    {
        "id": "fc1afd38.1ad0f",
        "type": "function",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Function",
        "func": "d = new Date,\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\ndtstmp = new Date().toString();\npld =       \"UPDATE [Dev].[dbo].[MQTTData] \"\npld = pld + \"Set Timestamp = '\" + dformat + \"' \"\npld = pld + \"WHERE id = 1\"\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 576,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "35b4a3e.f64c05c",
        "type": "inject",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Select",
        "props": [
            {
                "p": "payload",
                "v": "2",
                "vt": "num"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 171,
        "y": 632,
        "wires": [
            [
                "1528d6ba.7db449"
            ]
        ]
    },
    {
        "id": "1528d6ba.7db449",
        "type": "function",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Function",
        "func": "pld =       \"SELECT ID, Topic, Payload, Timestamp \"\npld = pld + \"FROM [Dev].[dbo].[MQTTData] \"\npld = pld + \"WHERE id = \" + msg.payload\n\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 311,
        "y": 632,
        "wires": [
            [
                "eac3e9b1.b2f0e8"
            ]
        ]
    },
    {
        "id": "7eafa2f8.041ebc",
        "type": "function",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "name": "Function",
        "func": "d = new Date(),\ndformat = [d.getMonth()+1,\n    d.getDate(),\n    d.getFullYear()].join('/')+' '+\n    [d.getHours(),\n    d.getMinutes(),\n    d.getSeconds()].join(':');\n\npld =       \"INSERT INTO [Dev].[dbo].[MQTTData] \"\npld = pld + \"(Topic, Payload, Timestamp) \"\npld = pld + \"VALUES ('\" + msg.topic + \"', '\" + msg.payload + \"', '\" + dformat + \"')\"\n\nmsg.topic = ''\nmsg.payload = pld\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 304,
        "y": 682,
        "wires": [
            [
                "eac3e9b1.b2f0e8",
                "15237651.20281a"
            ]
        ]
    },
    {
        "id": "7e3b4c4389147b7d",
        "type": "MSSQL",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "mssqlCN": "e07bcc4e8dc8749f",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": "0",
        "query": "insert into dbo.test\nvalues(@param1,@param2)",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "",
        "paramsOptType": "editor",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [
            {
                "output": false,
                "name": "param1",
                "type": "VarChar(10)",
                "valueType": "msg",
                "value": "payload.name",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            },
            {
                "output": false,
                "name": "param2",
                "type": "int",
                "valueType": "msg",
                "value": "payload.age",
                "options": {
                    "nullable": true,
                    "primary": false,
                    "identity": false,
                    "readOnly": false
                }
            }
        ],
        "x": 580,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "eac3e9b1.b2f0e8",
        "type": "MSSQL",
        "z": "10938d45dccd01ac",
        "d": true,
        "g": "fcf4ef1d2fe0fb74",
        "mssqlCN": "df8c0b88.91b0a8",
        "name": "MSSQL",
        "outField": "payload",
        "query": "",
        "parseMustache": true,
        "x": 539,
        "y": 541,
        "wires": [
            [
                "15237651.20281a"
            ]
        ]
    },
    {
        "id": "34c0c329a4836bab",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 140,
        "wires": []
    },
    {
        "id": "e43ef94f9fb8bcbc",
        "type": "modbus-response",
        "z": "b0254014945e7ec5",
        "name": "",
        "registerShowMax": 20,
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "e3ecbdb10bd6611e",
        "type": "function",
        "z": "b0254014945e7ec5",
        "name": "function 3",
        "func": "msg.payload = {\n    'fc': 3,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 8\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "cc2e1046ec649f93",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "40",
        "payloadType": "num",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "209d6744b04862e8"
            ]
        ]
    },
    {
        "id": "d6dffa943cf1729e",
        "type": "function",
        "z": "b0254014945e7ec5",
        "name": "function 4",
        "func": "msg.payload = {\n    value: [111,222,333,444],\n    'fc': 16,\n    'unitid': 1,\n    'address': 0,\n    'quantity': 4\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "2753d364ab694064"
            ]
        ]
    },
    {
        "id": "2753d364ab694064",
        "type": "modbus-flex-write",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "server": "c8d85c22541f0779",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "53e1d1cfd4adb33f",
                "5357a36d0b656fab"
            ],
            []
        ]
    },
    {
        "id": "53e1d1cfd4adb33f",
        "type": "modbus-response",
        "z": "b0254014945e7ec5",
        "name": "",
        "registerShowMax": 20,
        "x": 750,
        "y": 360,
        "wires": []
    },
    {
        "id": "5357a36d0b656fab",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 420,
        "wires": []
    },
    {
        "id": "1e899231ee47b8fa",
        "type": "modbus-flex-getter",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "c8d85c22541f0779",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 350,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "209d6744b04862e8",
        "type": "join",
        "z": "b0254014945e7ec5",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": true,
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "ba2b9d55240b21ac",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "7d1ee292ea9c3dfd",
        "type": "modbus-response",
        "z": "b0254014945e7ec5",
        "name": "",
        "registerShowMax": 20,
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "059cac219163b9a8",
        "type": "modbus-read",
        "z": "b0254014945e7ec5",
        "name": "",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "8",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "c8d85c22541f0779",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 310,
        "y": 880,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "004c578aa4b5d5f9",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 28",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 560,
        "wires": []
    },
    {
        "id": "4cc48c1321d8da13",
        "type": "modbus-flex-getter",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "server": "c8d85c22541f0779",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 530,
        "y": 1140,
        "wires": [
            [
                "c551928feca79a5a",
                "a1b17e9b0368b927"
            ],
            []
        ]
    },
    {
        "id": "e77718af7d6f7b58",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "b3b9ee31650d5342"
            ]
        ]
    },
    {
        "id": "b3b9ee31650d5342",
        "type": "function",
        "z": "b0254014945e7ec5",
        "name": "function 10",
        "func": "msg.payload = {\n    'fc': 3, \n    'unitid': 2, \n    'address': 0 , \n    'quantity': 4 } \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1140,
        "wires": [
            [
                "4cc48c1321d8da13"
            ]
        ]
    },
    {
        "id": "c551928feca79a5a",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 1120,
        "wires": []
    },
    {
        "id": "8c206f9647b66e50",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 1240,
        "wires": []
    },
    {
        "id": "fc3b21af3ff66358",
        "type": "modbus-server",
        "z": "b0254014945e7ec5",
        "name": "",
        "logEnabled": false,
        "hostname": "localhost",
        "serverPort": "502",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "x": 380,
        "y": 1360,
        "wires": [
            [],
            [],
            [],
            [],
            [
                "2e6221ab78ab8eaa"
            ]
        ]
    },
    {
        "id": "90e2893ef490e4fc",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1360,
        "wires": [
            [
                "fc3b21af3ff66358"
            ]
        ]
    },
    {
        "id": "2e6221ab78ab8eaa",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1340,
        "wires": []
    },
    {
        "id": "344015f2036586ac",
        "type": "modbus-flex-sequencer",
        "z": "b0254014945e7ec5",
        "name": "",
        "sequences": [
            {
                "name": "",
                "unitid": "1",
                "fc": "FC3",
                "address": "0",
                "quantity": "8"
            },
            {
                "name": "",
                "unitid": "2",
                "fc": "FC3",
                "address": "0",
                "quantity": "8"
            }
        ],
        "server": "c8d85c22541f0779",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 640,
        "y": 920,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "dd363f7697db0c25",
        "type": "modbus-write",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "1",
        "server": "c8d85c22541f0779",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 400,
        "y": 260,
        "wires": [
            [
                "2e9c7b713be22ef4"
            ],
            []
        ]
    },
    {
        "id": "cdad8ab01773c494",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "111",
        "payloadType": "num",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "dd363f7697db0c25"
            ]
        ]
    },
    {
        "id": "2e9c7b713be22ef4",
        "type": "modbus-response",
        "z": "b0254014945e7ec5",
        "name": "",
        "registerShowMax": 20,
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "e141393364c9f1b4",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "d6dffa943cf1729e"
            ]
        ]
    },
    {
        "id": "3b601ea90f579fa2",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 560,
        "wires": [
            [
                "a5a10ab95dd11a8d"
            ]
        ]
    },
    {
        "id": "a5a10ab95dd11a8d",
        "type": "modbus-getter",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "8",
        "server": "c8d85c22541f0779",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 360,
        "y": 560,
        "wires": [
            [
                "6942e7d12deef2b7",
                "7d1ee292ea9c3dfd",
                "ba2b9d55240b21ac"
            ],
            []
        ]
    },
    {
        "id": "53ce6dfc628c9876",
        "type": "function",
        "z": "b0254014945e7ec5",
        "name": "function 11",
        "func": "function reversString(str)\n{\n    return (str === '') ? '' : reversString(str.substr(1)) + str.charAt(0);\n}\n\nmsg.payload = reversString(msg.payload[0].toString(2).padStart(16,\"0\"))\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 740,
        "wires": [
            [
                "3744ecf00c2082c1"
            ]
        ]
    },
    {
        "id": "3744ecf00c2082c1",
        "type": "debug",
        "z": "b0254014945e7ec5",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 740,
        "wires": []
    },
    {
        "id": "e026be721c0da83b",
        "type": "modbus-getter",
        "z": "b0254014945e7ec5",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "5",
        "quantity": "1",
        "server": "c8d85c22541f0779",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "53ce6dfc628c9876"
            ],
            []
        ]
    },
    {
        "id": "43baa211999f2302",
        "type": "inject",
        "z": "b0254014945e7ec5",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 740,
        "wires": [
            [
                "e026be721c0da83b"
            ]
        ]
    },
    {
        "id": "6942e7d12deef2b7",
        "type": "buffer-parser",
        "z": "b0254014945e7ec5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int32le",
                "name": "item1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "item2",
                "offset": 4,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int32le",
                "name": "item3",
                "offset": 8,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "floatle",
                "name": "item4",
                "offset": 12,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 550,
        "y": 560,
        "wires": [
            [
                "004c578aa4b5d5f9"
            ]
        ]
    },
    {
        "id": "a1b17e9b0368b927",
        "type": "buffer-parser",
        "z": "b0254014945e7ec5",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "string",
                "name": "item1",
                "offset": 0,
                "length": 8,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "swap16",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 750,
        "y": 1180,
        "wires": [
            [
                "8c206f9647b66e50"
            ]
        ]
    },
    {
        "id": "2f1f5f047e7c4dd2",
        "type": "debug",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "776124ad82ebab25",
        "type": "function",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "name": "ConvertArr",
        "func": "let c1 = msg.payload.counter1;\nlet c2 = msg.payload.counter2; \n\nlet arr1 = [];\narr1[0] = c1;\narr1[1] = c2;\n\nmsg.payload = arr1\nmsg.arrayLength = arr1.length;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 260,
        "wires": [
            [
                "fa721c68c87bfd9d"
            ]
        ]
    },
    {
        "id": "1637ec065825048c",
        "type": "debug",
        "z": "7243ab0a14bfa6bd",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 560,
        "wires": []
    },
    {
        "id": "167ce402f44a2d2b",
        "type": "inject",
        "z": "7243ab0a14bfa6bd",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "f59a2ac92243207b"
            ]
        ]
    },
    {
        "id": "9fbfb51688b98f10",
        "type": "OpcUa-Client",
        "z": "7243ab0a14bfa6bd",
        "endpoint": "d1b40bfe250bcf2e",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "1",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "useTransport": false,
        "maxChunkCount": "",
        "maxMessageSize": "",
        "receiveBufferSize": "",
        "sendBufferSize": "",
        "setstatusandtime": false,
        "keepsessionalive": false,
        "name": "",
        "x": 740,
        "y": 560,
        "wires": [
            [
                "1637ec065825048c"
            ],
            [],
            []
        ]
    },
    {
        "id": "f59a2ac92243207b",
        "type": "OpcUa-Rights",
        "z": "7243ab0a14bfa6bd",
        "accessLevelCurrentRead": true,
        "accessLevelCurrentWrite": true,
        "accessLevelStatusWrite": true,
        "accessLevelHistoryRead": true,
        "accessLevelHistoryWrite": true,
        "accessLevelSemanticChange": true,
        "role": "a",
        "permissionBrowse": true,
        "permissionRead": true,
        "permissionWrite": true,
        "permissionWriteAttribute": true,
        "permissionReadRole": true,
        "permissionWriteRole": true,
        "permissionReadHistory": true,
        "permissionWriteHistory": true,
        "permissionInsertHistory": true,
        "permissionModifyHistory": true,
        "permissionDeleteHistory": true,
        "permissionReceiveEvents": true,
        "permissionCall": true,
        "permissionAddReference": true,
        "permissionRemoveReference": true,
        "permissionDeleteNode": true,
        "permissionAddNode": true,
        "name": "",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "499d4c149d8535f1"
            ]
        ]
    },
    {
        "id": "fa721c68c87bfd9d",
        "type": "buffer-parser",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "int16be",
                "name": "counter1",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            },
            {
                "type": "int16be",
                "name": "counter2",
                "offset": 2,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "keyvalue",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "2f1f5f047e7c4dd2"
            ]
        ]
    },
    {
        "id": "499d4c149d8535f1",
        "type": "OpcUa-Item",
        "z": "7243ab0a14bfa6bd",
        "item": "ns=4;s=|var|CODESYS Control Win V3 x64.Application.GVL.data1",
        "datatype": "UInt32",
        "value": "",
        "name": "",
        "x": 520,
        "y": 560,
        "wires": [
            [
                "9fbfb51688b98f10"
            ]
        ]
    },
    {
        "id": "6d191d67d5fe4a6a",
        "type": "OpcUa-Item",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "item": "ns=2;i=2;",
        "datatype": "Float",
        "value": "",
        "name": "GetTemp",
        "x": 360,
        "y": 940,
        "wires": [
            [
                "106046975beddddd"
            ]
        ]
    },
    {
        "id": "106046975beddddd",
        "type": "OpcUa-Client",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "endpoint": "d1b40bfe250bcf2e",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "2",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Server opc",
        "x": 510,
        "y": 960,
        "wires": [
            [
                "5929bfd7aec84acb"
            ],
            [],
            []
        ]
    },
    {
        "id": "d1da7314d988c3fc",
        "type": "inject",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 940,
        "wires": [
            [
                "6d191d67d5fe4a6a",
                "b2a5cffbb0b483f5"
            ]
        ]
    },
    {
        "id": "b2a5cffbb0b483f5",
        "type": "OpcUa-Item",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "item": "ns=2;i=3;",
        "datatype": "Float",
        "value": "",
        "name": "GetPress",
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "1cc9148de434cf5c"
            ]
        ]
    },
    {
        "id": "dc98e5696f8656a4",
        "type": "OpcUa-Client",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "endpoint": "d1b40bfe250bcf2e",
        "action": "read",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "2",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Server opc",
        "x": 510,
        "y": 860,
        "wires": [
            [
                "077a16b1ea57c12c"
            ],
            [],
            []
        ]
    },
    {
        "id": "eb6d7996c5c381cd",
        "type": "inject",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 860,
        "wires": [
            [
                "c33630d43bd45688"
            ]
        ]
    },
    {
        "id": "077a16b1ea57c12c",
        "type": "debug",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "c33630d43bd45688",
        "type": "OpcUa-Item",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "item": "ns=2;i=2;",
        "datatype": "Float",
        "value": "",
        "name": "GetObject",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "dc98e5696f8656a4"
            ]
        ]
    },
    {
        "id": "5929bfd7aec84acb",
        "type": "ui_gauge",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "group": "4a01dad1247a7393",
        "order": 7,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "GetTemp",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "10",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 820,
        "y": 960,
        "wires": []
    },
    {
        "id": "a91f078eae0b1d11",
        "type": "ui_gauge",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "group": "4a01dad1247a7393",
        "order": 9,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "GetPres",
        "label": "units",
        "format": "{{msg.payload}}",
        "min": "200",
        "max": "999",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 820,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1cc9148de434cf5c",
        "type": "OpcUa-Client",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "endpoint": "d1b40bfe250bcf2e",
        "action": "subscribe",
        "deadbandtype": "a",
        "deadbandvalue": 1,
        "time": "2",
        "timeUnit": "s",
        "certificate": "n",
        "localfile": "",
        "localkeyfile": "",
        "securitymode": "None",
        "securitypolicy": "None",
        "name": "Server opc",
        "x": 510,
        "y": 1020,
        "wires": [
            [
                "a91f078eae0b1d11"
            ],
            [],
            []
        ]
    },
    {
        "id": "6a93e259086552a2",
        "type": "comment",
        "z": "7243ab0a14bfa6bd",
        "d": true,
        "g": "1bf54cb25f373f45",
        "name": "",
        "info": "set opc.tcp://<ip from WSL === 172.28.192.1>:<port 4843>",
        "x": 180,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2509550891b9702e",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "",
        "group": "a16097a9a328313b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enable Button",
        "tooltip": "",
        "color": "green",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "0282a497c9bdb1be"
            ]
        ]
    },
    {
        "id": "fda85a67e82a1213",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "",
        "group": "a16097a9a328313b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Disable button",
        "tooltip": "",
        "color": "red",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "0282a497c9bdb1be"
            ]
        ]
    },
    {
        "id": "11dae9f5f2b051a9",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "",
        "group": "4b2cbd72aee2947f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "test button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "add_box",
        "payload": "Button Press",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "4484996b8c91c875"
            ]
        ]
    },
    {
        "id": "0282a497c9bdb1be",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "11dae9f5f2b051a9",
                "6d4fbddfa98cc211"
            ]
        ]
    },
    {
        "id": "4484996b8c91c875",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "3df4887acc6208f2",
        "type": "ui_dropdown",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "label": "Dropdown",
        "tooltip": "",
        "place": "Select option",
        "group": "a16097a9a328313b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Data1",
                "value": "Topic1",
                "type": "str"
            },
            {
                "label": "Data2",
                "value": true,
                "type": "bool"
            },
            {
                "label": "Data3",
                "value": 0,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1490,
        "y": 120,
        "wires": [
            [
                "f92489d740a7bb21"
            ]
        ]
    },
    {
        "id": "f92489d740a7bb21",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1700,
        "y": 120,
        "wires": []
    },
    {
        "id": "074fab8974e843dd",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Data1",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Topic1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "3df4887acc6208f2"
            ]
        ]
    },
    {
        "id": "d03f9c300b347a61",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Data2",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 1130,
        "y": 160,
        "wires": [
            [
                "3df4887acc6208f2"
            ]
        ]
    },
    {
        "id": "7c4d7427470090b8",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Data3",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1130,
        "y": 200,
        "wires": [
            [
                "3df4887acc6208f2"
            ]
        ]
    },
    {
        "id": "3206a58d0e3a2761",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Change Selection",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "c680d6e08cf60e94"
            ]
        ]
    },
    {
        "id": "c680d6e08cf60e94",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "0f8011408d1d7d7d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"Changed 1\":1},{\"Changed 2\":2},{\"Changed 3\":3}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 220,
        "wires": [
            [
                "3df4887acc6208f2"
            ]
        ]
    },
    {
        "id": "296edadee2e95b07",
        "type": "ui_switch",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "switch",
        "tooltip": "",
        "group": "4b2cbd72aee2947f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "check",
        "oncolor": "green",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "close",
        "offcolor": "red",
        "animate": false,
        "className": "",
        "x": 430,
        "y": 380,
        "wires": [
            [
                "4a501d234c3af26f"
            ]
        ]
    },
    {
        "id": "4a501d234c3af26f",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 380,
        "wires": []
    },
    {
        "id": "6d4fbddfa98cc211",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "512f7e5c8705cffb",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "4ddcd8ce9654461a"
        ],
        "x": 635,
        "y": 200,
        "wires": []
    },
    {
        "id": "4ddcd8ce9654461a",
        "type": "link in",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "link in 1",
        "links": [
            "6d4fbddfa98cc211"
        ],
        "x": 175,
        "y": 380,
        "wires": [
            [
                "296edadee2e95b07",
                "7ee7fa342cd10038",
                "add6376e4a8e1841",
                "a7eaed6e22b2026f",
                "9ba84f7107200b4c"
            ]
        ]
    },
    {
        "id": "7ee7fa342cd10038",
        "type": "ui_slider",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "Volumn %",
        "tooltip": "",
        "group": "4b2cbd72aee2947f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 440,
        "y": 440,
        "wires": [
            [
                "4a501d234c3af26f"
            ]
        ]
    },
    {
        "id": "153203b6ee452b12",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-20",
        "payloadType": "num",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "5a4753541954def4"
            ]
        ]
    },
    {
        "id": "add6376e4a8e1841",
        "type": "ui_numeric",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "numeric",
        "tooltip": "",
        "group": "4b2cbd72aee2947f",
        "order": 4,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}} %",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 440,
        "y": 500,
        "wires": [
            [
                "4a501d234c3af26f"
            ]
        ]
    },
    {
        "id": "a7eaed6e22b2026f",
        "type": "ui_text_input",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "Mail",
        "tooltip": "",
        "group": "4b2cbd72aee2947f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 430,
        "y": 560,
        "wires": [
            [
                "4a501d234c3af26f"
            ]
        ]
    },
    {
        "id": "9ba84f7107200b4c",
        "type": "ui_colour_picker",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "Select Color",
        "group": "4b2cbd72aee2947f",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": true,
        "showPicker": false,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": true,
        "square": "false",
        "dynOutput": "false",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 450,
        "y": 620,
        "wires": [
            [
                "4a501d234c3af26f"
            ]
        ]
    },
    {
        "id": "9350968b359b2782",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 560,
        "wires": [
            [
                "799bb824d694d356"
            ]
        ]
    },
    {
        "id": "799bb824d694d356",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"r\":0,\"g\":255,\"b\":0,\"a\":1}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 620,
        "wires": [
            [
                "9ba84f7107200b4c"
            ]
        ]
    },
    {
        "id": "27b1641fc98e95f1",
        "type": "ui_form",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "label": "",
        "group": "6f4dea3657a3fd67",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Name",
                "value": "Obj_name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Postcode",
                "value": "Obj_post",
                "type": "number",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "Obj_name": "",
            "Obj_post": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 650,
        "y": 440,
        "wires": [
            [
                "2b96674d469e45d5"
            ]
        ]
    },
    {
        "id": "2b96674d469e45d5",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 440,
        "wires": []
    },
    {
        "id": "199452130d4b36ae",
        "type": "ui_text",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "group": "a16097a9a328313b",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload.toFixed(2) + \" °C\" }} ",
        "layout": "row-spread",
        "className": "",
        "x": 430,
        "y": 680,
        "wires": []
    },
    {
        "id": "601aa3b5c3ea41f3",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5.12345",
        "payloadType": "num",
        "x": 200,
        "y": 680,
        "wires": [
            [
                "199452130d4b36ae"
            ]
        ]
    },
    {
        "id": "c815cf03b13c8252",
        "type": "ui_gauge",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "",
        "group": "a16097a9a328313b",
        "order": 5,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "°C",
        "format": "{{value | number:2}} °C",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "1",
        "seg2": "4",
        "className": "",
        "x": 990,
        "y": 500,
        "wires": []
    },
    {
        "id": "1b624a56217cf0fa",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "Change range",
        "func": "// const value = Math.random() * 10;\nconst value = msg.payload;\n\n\nmsg = {\n    ui_control:{\n        gtype: \"gauge\", //\"compass\"\n        min: -10,\n        max: 100,\n        colors: [\"blue\",\"red\",\"green\"],\n        seg1: 10,\n        seg2: 60\n        \n    },\n    payload: value\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 500,
        "wires": [
            [
                "c815cf03b13c8252"
            ]
        ]
    },
    {
        "id": "751a98b00fece417",
        "type": "ui_chart",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "a16097a9a328313b",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "Line chart",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "bezier",
        "nodata": "No data",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "30",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "45c01940ef738009",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Chart line1",
        "func": "msg.payload = Math.random() * 100;\nmsg.topic = \"Temp1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 360,
        "wires": [
            [
                "751a98b00fece417",
                "3ab8b626c65f51a9"
            ]
        ]
    },
    {
        "id": "ca94c7886b253daa",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1230,
        "y": 360,
        "wires": [
            [
                "45c01940ef738009",
                "12582169216d25d1",
                "3e35377fffb264db",
                "899609abcbe0079d",
                "72ebbbc83b027784",
                "26dd0dd627f5085a",
                "1f6ff3541a6a4768"
            ]
        ]
    },
    {
        "id": "ffc9ffa4a0d68aa3",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "a16097a9a328313b",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Chart",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "clear",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1410,
        "y": 460,
        "wires": [
            [
                "751a98b00fece417",
                "bd26801c77cff46f",
                "f8280900ebc99446",
                "beaa6ff1c3b03214",
                "c723d9bbadd7db5d"
            ]
        ]
    },
    {
        "id": "12582169216d25d1",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Chart line2",
        "func": "msg.payload = Math.random() * 100;\nmsg.topic = \"Temp2\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 400,
        "wires": [
            [
                "751a98b00fece417"
            ]
        ]
    },
    {
        "id": "bd26801c77cff46f",
        "type": "ui_chart",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "4b2cbd72aee2947f",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "Bar chart",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1700,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "3e35377fffb264db",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "12 month random",
        "func": "var tempData = []\nconst months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"July\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\"\n]\n\nfor (i = 0 ; i < months.length; i++)\n{\n    const dataSet = {\n        \"temp\" : Math.random() * 30,\n        \"month\" : months[i]\n    }\n    tempData.push(dataSet)\n}\nmsg.payload = tempData\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 520,
        "wires": [
            [
                "b6714ca3022302dd"
            ]
        ]
    },
    {
        "id": "b6714ca3022302dd",
        "type": "split",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1590,
        "y": 560,
        "wires": [
            [
                "dd611ce23038f188"
            ]
        ]
    },
    {
        "id": "dd611ce23038f188",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.month",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.temp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 560,
        "wires": [
            [
                "bd26801c77cff46f"
            ]
        ]
    },
    {
        "id": "f8280900ebc99446",
        "type": "ui_chart",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "4b2cbd72aee2947f",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Pie chart",
        "chartType": "pie",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1660,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "899609abcbe0079d",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Pie data1",
        "func": "msg.payload = Math.random() * 100;\nmsg.topic = \"Data1\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 620,
        "wires": [
            [
                "f8280900ebc99446",
                "beaa6ff1c3b03214"
            ]
        ]
    },
    {
        "id": "72ebbbc83b027784",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Pie data2",
        "func": "msg.payload = Math.random() * 100;\nmsg.topic = \"Data2\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 660,
        "wires": [
            [
                "f8280900ebc99446",
                "beaa6ff1c3b03214"
            ]
        ]
    },
    {
        "id": "26dd0dd627f5085a",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Pie data3",
        "func": "msg.payload = Math.random() * 100;\nmsg.topic = \"Data3\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 700,
        "wires": [
            [
                "f8280900ebc99446",
                "beaa6ff1c3b03214"
            ]
        ]
    },
    {
        "id": "beaa6ff1c3b03214",
        "type": "ui_chart",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 6,
        "width": 6,
        "height": 4,
        "label": "Polar chart",
        "chartType": "polar-area",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1650,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "c723d9bbadd7db5d",
        "type": "ui_chart",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "",
        "group": "6f4dea3657a3fd67",
        "order": 7,
        "width": 6,
        "height": 4,
        "label": "Radar chart",
        "chartType": "radar",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "50",
        "useOneColor": true,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1650,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "1f6ff3541a6a4768",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "Radar data",
        "func": "const allocate_budget = Array.from({length : 3}, () => Math.random() * 100)\nconst actual_spending = Array.from({length : 3}, () => Math.random() * 100)\n\nconst data = {\n    \"series\" : [\"actual\" , \"allocate\"],\n    \"data\" : [actual_spending , allocate_budget],\n    \"labels\" : [\"data1\" , \"data2\" ,\"data3\"]\n}\n\nmsg.payload = [data];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 800,
        "wires": [
            [
                "c723d9bbadd7db5d"
            ]
        ]
    },
    {
        "id": "1ca2bdc45b308cfa",
        "type": "ui_audio",
        "z": "92701a6abe8f79f1",
        "g": "ac7c5be99b0dead7",
        "name": "",
        "group": "15698684c5bf3c74",
        "voice": "Google US English",
        "always": "",
        "x": 540,
        "y": 820,
        "wires": []
    },
    {
        "id": "a310d5b27b5d2c17",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "ac7c5be99b0dead7",
        "name": "",
        "group": "15698684c5bf3c74",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Speech",
        "tooltip": "Speech",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "This is testing",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 820,
        "wires": [
            [
                "28d4eef9cf8417d7"
            ]
        ]
    },
    {
        "id": "880717f970b59452",
        "type": "ui_text_input",
        "z": "92701a6abe8f79f1",
        "g": "ac7c5be99b0dead7",
        "name": "",
        "label": "input text",
        "tooltip": "",
        "group": "15698684c5bf3c74",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "num1",
        "topicType": "msg",
        "x": 160,
        "y": 880,
        "wires": [
            [
                "5effb9a55b9a5019"
            ]
        ]
    },
    {
        "id": "5effb9a55b9a5019",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "ac7c5be99b0dead7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Text",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "28d4eef9cf8417d7",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "ac7c5be99b0dead7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Text",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "level",
                "pt": "msg",
                "to": "Volumn",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 820,
        "wires": [
            [
                "1ca2bdc45b308cfa"
            ]
        ]
    },
    {
        "id": "53131ca44f7698d0",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "",
        "group": "15698684c5bf3c74",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Start Login",
        "tooltip": "Start Login",
        "color": "",
        "bgcolor": "",
        "className": "btn1",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1320,
        "wires": [
            [
                "ba110d0c831b5692"
            ]
        ]
    },
    {
        "id": "5f9860d8af3f7872",
        "type": "ui_toast",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 630,
        "y": 1320,
        "wires": [
            [
                "a0270e46d4acc1e5",
                "91e3c5eeb225f944"
            ]
        ]
    },
    {
        "id": "894b938ec50552c8",
        "type": "ui_template",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "group": "15698684c5bf3c74",
        "name": "mystyle",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .btn1 > .md-button {\n        background-color : rgb(255,0,0) !important;\n    }\n    .drop1 {\n        background-color : rgb(0,255,0) !important;\n    }\n    .drop1 > md-input-container > p {\n        color : rgb(0,255,0) !important;\n    }\n    .sw1 {\n        background-color : rgb(255,0,0) !important;\n    }\n    .sw1 > p {\n        color : rgb(0,255,0) !important;\n    }\n    .num1 {\n        background-color: rgb(255,0,255) !important;\n    }\n    .num1 > p {\n        color: rgb(255,0,0) !important\n        font-weight:bold;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 160,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "7dcc4cd086ee7cf3",
        "type": "ui_dropdown",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "",
        "label": "Select topic",
        "tooltip": "",
        "place": "Select option",
        "group": "15698684c5bf3c74",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "data1",
                "value": "data1",
                "type": "str"
            },
            {
                "label": "data2",
                "value": "data2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "drop1",
        "x": 170,
        "y": 1520,
        "wires": [
            [
                "00b0b71c9f1fb27e"
            ]
        ]
    },
    {
        "id": "9ed8eab311da81de",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "7af0ce2ca4bde019",
        "name": "Counter",
        "func": "counter = context.get(\"counter\") || 0;\nif (counter < 100)\n{\n    counter ++;\n}\nelse\n{\n    counter = 0;\n}\nmsg.payload = counter\ncontext.set(\"counter\" , counter)\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "2c0cb02adfe30422"
            ]
        ]
    },
    {
        "id": "2c0cb02adfe30422",
        "type": "ui_template",
        "z": "92701a6abe8f79f1",
        "g": "7af0ce2ca4bde019",
        "group": "15698684c5bf3c74",
        "name": "progress",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<label>\n    {{msg.payload}}\n</label>\n<progress value={{msg.payload}} max = 100></progress>\n<style>\n    label {\n        color: white;\n        font-weight: bold;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 540,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "beabad43906f3702",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "7af0ce2ca4bde019",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "9ed8eab311da81de"
            ]
        ]
    },
    {
        "id": "5ec5a15ff9fcc153",
        "type": "ui_template",
        "z": "92701a6abe8f79f1",
        "g": "11f4df6073ae1b74",
        "group": "15698684c5bf3c74",
        "name": "Indicator",
        "order": 5,
        "width": 3,
        "height": 2,
        "format": "<div id=\"indicator\">\n    \n</div>\n\n<style>\n    #indicator {\n        width: 75px;\n        height: 75px;\n        background-color: {{msg.payload}};\n        border-radius: 50%;\n        margin: auto;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 640,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "185b19b3b6b7ae44",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "11f4df6073ae1b74",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1120,
        "wires": [
            [
                "5ec5a15ff9fcc153"
            ]
        ]
    },
    {
        "id": "91baff2b52481731",
        "type": "trigger",
        "z": "92701a6abe8f79f1",
        "g": "11f4df6073ae1b74",
        "name": "1 Second trigger",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 380,
        "y": 1180,
        "wires": [
            [
                "75c391af566ce6cc"
            ]
        ]
    },
    {
        "id": "75c391af566ce6cc",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "11f4df6073ae1b74",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "5ec5a15ff9fcc153"
            ]
        ]
    },
    {
        "id": "78820ae7307a4da2",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "11f4df6073ae1b74",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1120,
        "wires": [
            [
                "185b19b3b6b7ae44",
                "91baff2b52481731"
            ]
        ]
    },
    {
        "id": "49f87e46174a10c7",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "function 6",
        "func": "msg.payload = [\n    {\n        \"name\": \"tom\",\n        \"age\":26\n    },\n    {\n        \"name\" : \"bill\",\n        \"age\" : 25\n    }\n    \n    ]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1400,
        "wires": [
            [
                "d3332171a3c97f37"
            ]
        ]
    },
    {
        "id": "8fb037739681f7cb",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1250,
        "y": 1400,
        "wires": [
            [
                "49f87e46174a10c7",
                "ec4f9a1754e98501",
                "2628d77e41bba5e7"
            ]
        ]
    },
    {
        "id": "b98926b594d69e83",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1920,
        "y": 1400,
        "wires": []
    },
    {
        "id": "ec4f9a1754e98501",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "function 7",
        "func": "msg.payload = [\n    {\n        \"name\": \"tom\",\n        // \"url\": 26\n    },\n    {\n        \"name\" : \"<b>Tom hank</b>\",\n        // \"url\" : 25\n    },\n    {\n        \"name\" : \"<i>Tom hank</i>\",\n        // \"url\" : 25\n    },\n    {\n        \"name\" : \"<b style='color:red'>Tom hank</b>\",\n        \"url\" : \"https://github.com/node-red/node-red-dashboard/blob/master/config-fields.md\"\n    },\n     {\n        \"name\" : \"<b style='text-transform:uppercase'>Tom hank</b>\",\n        // \"url\" : 25\n    }\n    \n    ]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1480,
        "wires": [
            [
                "5f8de0754f16634c"
            ]
        ]
    },
    {
        "id": "2628d77e41bba5e7",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "function 8",
        "func": "msg.payload = [\n    {\n        \"img\": \"tom\",\n        \"prog\": Math.random() * 100,\n        \"traffic\": Math.random() * 100,\n        \"color\" : \"red\",\n        \"tick\" : true,\n        \"star\" : Math.random(4.9),\n    },\n    {\n        \"img\" : \"\",\n         \"prog\": Math.random() * 100,\n         \"traffic\": Math.random() * 100,\n         \"color\": \"green\",\n         \"tick\": false,\n         \"star\" : 5\n    }\n    \n    \n    ]\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 1540,
        "wires": [
            [
                "2c6a326d5fdb466f"
            ]
        ]
    },
    {
        "id": "9ff03d27c91b1eb6",
        "type": "ui_template",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "group": "",
        "name": "Dashboard Style",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n        ui-card-panel{\n            box-shadow: rgba(0,0,0,0.35) 0px 5px 15px;\n            border-radius: 5px;\n        }\n        ui-card-panel *{\n            border-radius: 2.5px;\n        }\n        .nr-dashboard-cardtitle{\n            font-weight: bold !important;\n        }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1230,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "5a4753541954def4",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "Dynamic slide",
        "func": "const minimum = msg.payload\n\nmsg = {\n    ui_control: {\n        min: minimum,\n        max: 1000,\n        step: 1\n    },\n    payload: 500\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 500,
        "wires": [
            [
                "7ee7fa342cd10038"
            ]
        ]
    },
    {
        "id": "8ff5c41b79ca5888",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "bb12bb9ed34b642d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear button",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1310,
        "y": 1640,
        "wires": [
            [
                "9b2561f442c8c872"
            ]
        ]
    },
    {
        "id": "9b2561f442c8c872",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "clearData",
        "func": "msg.payload ={\n    \"command\" : \"clearData\",\n    arguments: []\n}\nflow.set(\"id\",0)\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1640,
        "wires": [
            [
                "d3332171a3c97f37"
            ]
        ]
    },
    {
        "id": "ffe36179f363b663",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "bb12bb9ed34b642d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Add Row",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-plus-square",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1310,
        "y": 1700,
        "wires": [
            [
                "006a4b923b48727e",
                "a263a35fb1f42dbb"
            ]
        ]
    },
    {
        "id": "006a4b923b48727e",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "flow",
                "to": "addRow",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1530,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "a263a35fb1f42dbb",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Dashboard_Data\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 1760,
        "wires": [
            [
                "15ac53cce7550fd3"
            ]
        ]
    },
    {
        "id": "a10dc8e00cc8d658",
        "type": "ui_form",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "label": "",
        "group": "e96ec0038089a248",
        "order": 1,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Age",
                "value": "age",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "age": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1270,
        "y": 1860,
        "wires": [
            [
                "2de41c14e3a25a96",
                "5fa67d9631fdfb11"
            ]
        ]
    },
    {
        "id": "2de41c14e3a25a96",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "command",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1880,
        "wires": [
            [
                "2d35ce9605f1baa1"
            ]
        ]
    },
    {
        "id": "2d35ce9605f1baa1",
        "type": "switch",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "addRow",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "updateOrAddData",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1630,
        "y": 1880,
        "wires": [
            [
                "a458e0a1f9fc0fc6"
            ],
            [
                "774f2dc5d284ade6"
            ]
        ]
    },
    {
        "id": "a458e0a1f9fc0fc6",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "add Row",
        "func": "// set msg.payload to variable\nvar inp = msg.payload\n\n//get id from variable => default 0\nvar id = flow.get(\"id\") || 0\n\n// increase id by 1\nid ++\n\n// set customer id to id\ninp.id = id\n\n// set flow variable to id\nflow.set(\"id\",id)\n\n//Table command\nmsg.payload = {\n    command : \"addRow\",\n    arguments : [\n        [inp],\n        true\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1840,
        "wires": [
            [
                "d3332171a3c97f37"
            ]
        ]
    },
    {
        "id": "028ffa28b7c89838",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectedRow",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1440,
        "wires": [
            [
                "b98926b594d69e83"
            ]
        ]
    },
    {
        "id": "baa3159fbe06551d",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Dashboard_Row\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 1480,
        "wires": [
            [
                "ce411fa07dcfc0da"
            ]
        ]
    },
    {
        "id": "774f2dc5d284ade6",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "update Row",
        "func": "// set msg.payload to variable\nvar inp = msg.payload\n\n//read selectedRow\nvar row = flow.get(\"selectedRow\");\n\n// update data\nrow.name = inp.name\nrow.age = inp.age\n\n//Table command\nmsg.payload = {\n    command : \"updateOrAddData\",\n    arguments : [\n        [row]\n        \n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1810,
        "y": 1880,
        "wires": [
            [
                "d3332171a3c97f37",
                "ae20df09087c2f33"
            ]
        ]
    },
    {
        "id": "f7e9e156f804b821",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "3e28aabf0bd0f76f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Delete Row",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1710,
        "y": 1980,
        "wires": [
            [
                "611798e35a622fdf",
                "b0f19761674291a9"
            ]
        ]
    },
    {
        "id": "611798e35a622fdf",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "Delete Row",
        "func": "const row = flow.get(\"selectedRow\") \n\nmsg.payload = {\n    command : \"deleteRow\",\n    arguments: [row.id]\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 1980,
        "wires": [
            [
                "d3332171a3c97f37",
                "18f47143319e3366"
            ]
        ]
    },
    {
        "id": "b0f19761674291a9",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Dashboard_Data\",\"Dashboard_Row\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 2020,
        "wires": [
            [
                "780cbd9c5e3ad898"
            ]
        ]
    },
    {
        "id": "977b08e545c53364",
        "type": "ui_ui_control",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "events": "all",
        "x": 1980,
        "y": 1720,
        "wires": [
            [
                "47b92669ce430a43"
            ]
        ]
    },
    {
        "id": "47b92669ce430a43",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Dashboard_Data\",\"Dashboard_Row\",\"Dashboard_Filter\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2160,
        "y": 1720,
        "wires": [
            [
                "d53542cb1526d949"
            ]
        ]
    },
    {
        "id": "d53542cb1526d949",
        "type": "ui_ui_control",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "events": "all",
        "x": 2160,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "b14de7dfd1477328",
        "type": "link in",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link in 2",
        "links": [
            "ce411fa07dcfc0da",
            "7fa5be604343c5be",
            "15ac53cce7550fd3",
            "e58d404add4c984a",
            "d37dc0e30051a176",
            "780cbd9c5e3ad898",
            "7e41426615df13d9"
        ],
        "x": 1935,
        "y": 1660,
        "wires": [
            [
                "d53542cb1526d949"
            ]
        ]
    },
    {
        "id": "ce411fa07dcfc0da",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 1895,
        "y": 1560,
        "wires": []
    },
    {
        "id": "5fa67d9631fdfb11",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Dashboard_Data\",\"Dashboard_Row\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 1840,
        "wires": [
            [
                "7fa5be604343c5be"
            ]
        ]
    },
    {
        "id": "bdaed7e9e2c5ba5e",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "3e28aabf0bd0f76f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update Row",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-plus-square",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1250,
        "y": 2020,
        "wires": [
            [
                "69905901eaf00985",
                "14a039d5e4c95bcd",
                "273a6fa88549cc93"
            ]
        ]
    },
    {
        "id": "69905901eaf00985",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "selectedRow",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 1980,
        "wires": [
            [
                "a10dc8e00cc8d658"
            ]
        ]
    },
    {
        "id": "14a039d5e4c95bcd",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "flow",
                "to": "updateOrAddData",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1470,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "273a6fa88549cc93",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Dashboard_Data\"],\"hide\":[\"Dashboard_Row\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 2060,
        "wires": [
            [
                "e58d404add4c984a"
            ]
        ]
    },
    {
        "id": "b0689003eca3b29a",
        "type": "ui_dropdown",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "label": "Filter",
        "tooltip": "",
        "place": "Select option",
        "group": "321583379173f6e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "name",
                "value": "name",
                "type": "str"
            },
            {
                "label": "age",
                "value": "age",
                "type": "str"
            },
            {
                "label": "id",
                "value": "id",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1710,
        "y": 2140,
        "wires": [
            [
                "7ca086bd3a3ac62b"
            ]
        ]
    },
    {
        "id": "93ec54852cbd2907",
        "type": "ui_dropdown",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "label": "Type",
        "tooltip": "",
        "place": "Select option",
        "group": "321583379173f6e3",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "=",
                "value": "=",
                "type": "str"
            },
            {
                "label": "!=",
                "value": "!=",
                "type": "str"
            },
            {
                "label": ">",
                "value": ">",
                "type": "str"
            },
            {
                "label": "<",
                "value": "<",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1710,
        "y": 2180,
        "wires": [
            [
                "88ca247cfd6012cc"
            ]
        ]
    },
    {
        "id": "da75a1b822492ed8",
        "type": "ui_text_input",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "label": "Value",
        "tooltip": "",
        "group": "321583379173f6e3",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1710,
        "y": 2220,
        "wires": [
            [
                "190a5c0602071e53"
            ]
        ]
    },
    {
        "id": "a3b70b9499f1fbed",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "bb12bb9ed34b642d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Filter Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-filter",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1250,
        "y": 2100,
        "wires": [
            [
                "07eee8359847d92d"
            ]
        ]
    },
    {
        "id": "07eee8359847d92d",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"show\":[\"Dashboard_Filter\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 2100,
        "wires": [
            [
                "7e41426615df13d9"
            ]
        ]
    },
    {
        "id": "7ca086bd3a3ac62b",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.field",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2140,
        "wires": [
            []
        ]
    },
    {
        "id": "88ca247cfd6012cc",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2180,
        "wires": [
            []
        ]
    },
    {
        "id": "190a5c0602071e53",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filter.value",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "dda2cc06001f3656",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "321583379173f6e3",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Apply Button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1730,
        "y": 2300,
        "wires": [
            [
                "15c8778628602bca"
            ]
        ]
    },
    {
        "id": "15c8778628602bca",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "update Row",
        "func": "const filter = flow.get(\"filter\")\n\nmsg.payload = {\n    command : \"setFilter\",\n    arguments: [\n            filter.field,\n            filter.type,\n            filter.value\n        \n        ]\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 2280,
        "wires": [
            [
                "c3237f1d2dd22107"
            ]
        ]
    },
    {
        "id": "ab097b97617f8158",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "321583379173f6e3",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Clear Filter",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1730,
        "y": 2380,
        "wires": [
            [
                "27b8b1466c774e82",
                "a839af9bd981897f"
            ]
        ]
    },
    {
        "id": "27b8b1466c774e82",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"command\":\"setFilter\",\"arguments\":[]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2380,
        "wires": [
            [
                "c3237f1d2dd22107"
            ]
        ]
    },
    {
        "id": "f798fe4aac3498f5",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Warning & Error",
        "func": "// Show warning in debug tab\nnode.warn(\"Warining!!\")\n\n// Show Error in debug tab\nnode.error(\"Error\")",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "8e16d9fe54ab8c54",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1220,
        "y": 960,
        "wires": [
            [
                "f798fe4aac3498f5"
            ]
        ]
    },
    {
        "id": "a0b0fb874e39486d",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Node status",
        "func": "const topic = msg.topic\nconst color = [\"red\",\"yellow\",\"green\"]\n\nif (topic != \"Clear\")\n{\n        node.status({\n        \"fill\" : color[msg.color],\n        \"shape\" : \"dot\",\n        \"text\" : topic\n        \n    })\n}\nelse\n{\n    node.status({})\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe35bcb4a86a813",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Error",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "color",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Error",
        "x": 1210,
        "y": 1060,
        "wires": [
            [
                "a0b0fb874e39486d"
            ]
        ]
    },
    {
        "id": "4f05430e0d33100e",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Warning",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "color",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Warning",
        "x": 1220,
        "y": 1100,
        "wires": [
            [
                "a0b0fb874e39486d"
            ]
        ]
    },
    {
        "id": "b4b7f394416ab92a",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Connected",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "color",
                "v": "2",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Connected",
        "x": 1220,
        "y": 1140,
        "wires": [
            [
                "a0b0fb874e39486d"
            ]
        ]
    },
    {
        "id": "bdd811fe7183d601",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "f3a8e7298ff74161",
        "name": "Clear",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "Clear",
        "x": 1210,
        "y": 1180,
        "wires": [
            [
                "a0b0fb874e39486d"
            ]
        ]
    },
    {
        "id": "ca622aab7903bb52",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "Counter",
        "func": "var counter = flow.get(\"counter\") || 0\n\nif(msg.topic == \"reset\")\n{\n    counter = 0\n}\nelse\n{\n    counter ++\n}\nflow.set(\"counter\" , counter)\nmsg.payload = counter\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1020,
        "wires": [
            [
                "d024ff1db1a88acd"
            ]
        ]
    },
    {
        "id": "2309ed90a167b461",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1660,
        "y": 1020,
        "wires": [
            [
                "ca622aab7903bb52"
            ]
        ]
    },
    {
        "id": "d024ff1db1a88acd",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1980,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1996a67f8fd4d8f9",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "Reset",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "reset",
        "x": 1650,
        "y": 1060,
        "wires": [
            [
                "ca622aab7903bb52"
            ]
        ]
    },
    {
        "id": "4d5b8f8fabb0da7b",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "Counter",
        "func": "var counter = flow.get(\"counter\") || 0\n\ncounter ++\n\nflow.set(\"counter\" , counter)\nmsg.payload = counter\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 1120,
        "wires": [
            [
                "d024ff1db1a88acd"
            ]
        ]
    },
    {
        "id": "2dc5d061fd44904c",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1640,
        "y": 1120,
        "wires": [
            [
                "4d5b8f8fabb0da7b"
            ]
        ]
    },
    {
        "id": "bbfc4b407429ede0",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "counter",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 1180,
        "wires": [
            [
                "4d5b8f8fabb0da7b"
            ]
        ]
    },
    {
        "id": "e3072b7dc7b05305",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "fdf5d546ebdc4d8b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1640,
        "y": 1180,
        "wires": [
            [
                "bbfc4b407429ede0"
            ]
        ]
    },
    {
        "id": "ba110d0c831b5692",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Initial Login",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Login",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Please enter your name",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1320,
        "wires": [
            [
                "5f9860d8af3f7872"
            ]
        ]
    },
    {
        "id": "a0270e46d4acc1e5",
        "type": "switch",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Check Login",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 1440,
        "wires": [
            [
                "971048170e63dc66"
            ],
            [
                "cbd7e2bedeaeb456"
            ],
            [
                "06805afefd845711"
            ]
        ]
    },
    {
        "id": "971048170e63dc66",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Login Cancelled",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Login Cancelld",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Login Process has been Cancelled",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1400,
        "wires": [
            [
                "b7407b6eb04e4392"
            ]
        ]
    },
    {
        "id": "cbd7e2bedeaeb456",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Login Failed",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Login Failed",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Name can not be empty",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1440,
        "wires": [
            [
                "09e1692aed8ba419"
            ]
        ]
    },
    {
        "id": "b7407b6eb04e4392",
        "type": "ui_toast",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 870,
        "y": 1360,
        "wires": []
    },
    {
        "id": "09e1692aed8ba419",
        "type": "ui_toast",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 1,
        "ok": "Try Again",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 1440,
        "wires": [
            [
                "ba110d0c831b5692"
            ]
        ]
    },
    {
        "id": "06805afefd845711",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Login Complete Message",
        "func": "const inp = msg.payload\n\nmsg.topic = \"Login Sucsessful\"\nmsg.payload = \"Welcome \" + inp\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1500,
        "wires": [
            [
                "94fb08c017a627f4"
            ]
        ]
    },
    {
        "id": "94fb08c017a627f4",
        "type": "ui_toast",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": false,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 870,
        "y": 1500,
        "wires": []
    },
    {
        "id": "91e3c5eeb225f944",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1300,
        "wires": []
    },
    {
        "id": "00b0b71c9f1fb27e",
        "type": "ui_toast",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 390,
        "y": 1520,
        "wires": []
    },
    {
        "id": "520904aba6089040",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "Variable",
        "func": "var contextVar = context.get(\"value\") || 0;\nvar flowVar = flow.get(\"value\") || 0;\nvar globalVar = global.get(\"value\") || 0;\n\ncontextVar ++;\nflowVar ++;\nglobalVar ++;\n\n//msg.payload = counter\ncontext.set(\"value\" , contextVar);\nflow.set(\"value\" , flowVar);\nglobal.set(\"value\" , globalVar);\nflow.set(\"sensors.sensor1.value\",5);\n\n//return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "2a949b3587cb030c",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "g": "a907272621fe05d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 1600,
        "wires": [
            [
                "520904aba6089040"
            ]
        ]
    },
    {
        "id": "2c82654baf7005f0",
        "type": "join",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "",
        "mode": "custom",
        "build": "buffer",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 370,
        "y": 1800,
        "wires": [
            [
                "6b53af5d87788e8f",
                "59d60fefde771be9"
            ]
        ]
    },
    {
        "id": "6b53af5d87788e8f",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 1800,
        "wires": []
    },
    {
        "id": "59d60fefde771be9",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "function 9",
        "func": "msg.payload = msg.payload.toString(\"base64\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "03e5d1ca73cbce0f",
        "type": "file",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 640,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "c2e1c0cdbfb020bd",
        "type": "file in",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 1980,
        "wires": [
            [
                "5cfc613db547b93a"
            ]
        ]
    },
    {
        "id": "31b0e8c1007706db",
        "type": "inject",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1980,
        "wires": [
            [
                "c2e1c0cdbfb020bd"
            ]
        ]
    },
    {
        "id": "5cfc613db547b93a",
        "type": "function",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "toBuffer",
        "func": "msg.payload = Buffer.from(msg.payload,\"base64\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1980,
        "wires": [
            [
                "a8b45cfbf9d7bcee"
            ]
        ]
    },
    {
        "id": "a8b45cfbf9d7bcee",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1980,
        "wires": []
    },
    {
        "id": "7fa5be604343c5be",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 1615,
        "y": 1840,
        "wires": []
    },
    {
        "id": "15ac53cce7550fd3",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 1695,
        "y": 1760,
        "wires": []
    },
    {
        "id": "e58d404add4c984a",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 1635,
        "y": 2060,
        "wires": []
    },
    {
        "id": "d37dc0e30051a176",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 2095,
        "y": 2360,
        "wires": []
    },
    {
        "id": "780cbd9c5e3ad898",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 2055,
        "y": 2020,
        "wires": []
    },
    {
        "id": "7e41426615df13d9",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "b14de7dfd1477328"
        ],
        "x": 1615,
        "y": 2100,
        "wires": []
    },
    {
        "id": "371a110f486fddb4",
        "type": "ui_button",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "group": "e96ec0038089a248",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Dismiss",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-times-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1240,
        "y": 1940,
        "wires": [
            [
                "5fa67d9631fdfb11"
            ]
        ]
    },
    {
        "id": "a839af9bd981897f",
        "type": "change",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"group\":{\"hide\":[\"Dashboard_Filter\"]}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2440,
        "wires": [
            [
                "d37dc0e30051a176"
            ]
        ]
    },
    {
        "id": "18f47143319e3366",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2080,
        "y": 1980,
        "wires": []
    },
    {
        "id": "ae20df09087c2f33",
        "type": "debug",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 1880,
        "wires": []
    },
    {
        "id": "c3237f1d2dd22107",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "5b7664fb928f59a4"
        ],
        "x": 2065,
        "y": 2280,
        "wires": []
    },
    {
        "id": "5b7664fb928f59a4",
        "type": "link in",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "name": "FilterOut",
        "links": [
            "c3237f1d2dd22107"
        ],
        "x": 1505,
        "y": 1340,
        "wires": [
            [
                "d3332171a3c97f37"
            ]
        ]
    },
    {
        "id": "e63598113336e911",
        "type": "link in",
        "z": "92701a6abe8f79f1",
        "g": "d1befc20226e5039",
        "name": "link in 3",
        "links": [
            "3ab8b626c65f51a9"
        ],
        "x": 635,
        "y": 500,
        "wires": [
            [
                "1b624a56217cf0fa"
            ]
        ]
    },
    {
        "id": "3ab8b626c65f51a9",
        "type": "link out",
        "z": "92701a6abe8f79f1",
        "g": "ee98ef6b1fa1855f",
        "name": "LinkTemp",
        "mode": "link",
        "links": [
            "e63598113336e911"
        ],
        "x": 1605,
        "y": 420,
        "wires": []
    },
    {
        "id": "d3332171a3c97f37",
        "type": "ui_table",
        "z": "92701a6abe8f79f1",
        "g": "363133c22b66b0e8",
        "group": "a7440fc437c9a1e7",
        "name": "Simple Table",
        "order": 2,
        "width": 9,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "20px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "50px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "age",
                "title": "Age",
                "width": "50px",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1630,
        "y": 1420,
        "wires": [
            [
                "028ffa28b7c89838",
                "baa3159fbe06551d"
            ]
        ]
    },
    {
        "id": "5f8de0754f16634c",
        "type": "ui_table",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "363133c22b66b0e8",
        "group": "a7440fc437c9a1e7",
        "name": "Style Table",
        "order": 1,
        "width": 9,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "id",
                "width": "20px",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "url",
                "title": "Url",
                "width": "50%",
                "align": "center",
                "formatter": "link",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1630,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "2c6a326d5fdb466f",
        "type": "ui_table",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "363133c22b66b0e8",
        "group": "",
        "name": "Full Table",
        "order": 1,
        "width": 11,
        "height": 6,
        "columns": [
            {
                "field": "id",
                "title": "id",
                "width": "20px",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "img",
                "title": "Img",
                "width": "",
                "align": "left",
                "formatter": "image",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "prog",
                "title": "progress",
                "width": "",
                "align": "left",
                "formatter": "progress",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "traffic",
                "title": "Traffic",
                "width": "",
                "align": "left",
                "formatter": "traffic",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "color",
                "title": "Color",
                "width": "",
                "align": "left",
                "formatter": "color",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "tick",
                "title": "Tick",
                "width": "",
                "align": "left",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "star",
                "title": "Star",
                "width": "",
                "align": "left",
                "formatter": "star",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1640,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "1bc48eaf9d67b92c",
        "type": "ui_upload",
        "z": "92701a6abe8f79f1",
        "d": true,
        "g": "a73bb51f69a29ff1",
        "group": "bb12bb9ed34b642d",
        "title": "upload",
        "accept": "",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "chunk": 256,
        "transfer": "binary",
        "x": 200,
        "y": 1800,
        "wires": [
            [
                "2c82654baf7005f0"
            ]
        ]
    }
]